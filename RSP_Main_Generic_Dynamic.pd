#N canvas 0 93 1280 627 10;
#N canvas 236 146 864 628 My_RSP_Metronome 0;
#X obj 223 28 inlet startMetronome;
#X obj 223 265 metro;
#X msg 242 125 60000;
#X floatatom 305 137 5 0 0 0 - - -;
#X obj 242 160 /;
#X obj 223 94 t b b b;
#X obj 223 65 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 272 189 15 0 0 0 - - -;
#X obj 386 250 i;
#X floatatom 463 267 5 0 0 0 - - -;
#X text 416 248 cut the nachkommastellen;
#X msg 182 93 0;
#X text 141 90 stop;
#X msg 305 108 122;
#X text 331 107 init bpm;
#X obj 223 346 i;
#X obj 258 345 + 1;
#X text 269 319 reset the counter;
#X msg 238 319 1;
#X obj 448 511 wiringPi_gpio 25 0 0;
#X obj 448 409 == 1;
#X floatatom 448 492 5 0 0 0 - - -;
#X obj 553 467 moses 1;
#X obj 592 491 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 305 78 r initBang;
#X text 449 43 This patch acts as a metronome \; whos bpm is set by
an initBang \; of the parent patch. \; The metronome counts til 4 and
\; everytime the "1" is reached \, \; a bang is sent to the output.
;
#X obj 293 295 s metroHits;
#X obj 244 217 / 4;
#X text 277 218 16tel genauigkeit;
#X obj 223 513 moses 16;
#X floatatom 281 246 10 0 0 0 - - -;
#X text 108 519 16tel genauigkeit;
#X floatatom 146 386 5 0 0 0 - - -;
#X obj 212 939 wiringPi_gpio 25 0 0;
#X floatatom 212 915 5 0 0 0 - - -;
#X obj 365 923 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 124 917 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 223 386 t f f f, f 38;
#X obj 335 422 % 4;
#X obj 335 456 == 1;
#X obj 335 771 s metroWholeBeats;
#X obj 448 441 t f f, f 18;
#X obj 592 540 outlet FirstBeat;
#X obj 335 588 route 1;
#X obj 335 699 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 467 769 s harmonyLedToggle;
#X obj 335 497 t f f;
#X obj 335 620 t b b;
#X msg 467 710 1;
#X obj 501 630 + 1;
#X msg 536 601 1;
#X obj 509 687 t b b;
#X msg 509 711 0;
#X obj 470 630 f 1;
#X obj 470 609 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 470 662 moses 1;
#X connect 0 0 6 0;
#X connect 1 0 15 0;
#X connect 1 0 26 0;
#X connect 2 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 7 0;
#X connect 4 0 27 0;
#X connect 5 0 1 0;
#X connect 5 1 2 0;
#X connect 5 2 3 0;
#X connect 6 0 5 0;
#X connect 8 0 9 0;
#X connect 11 0 1 0;
#X connect 13 0 3 0;
#X connect 15 0 16 0;
#X connect 15 0 32 0;
#X connect 15 0 37 0;
#X connect 16 0 15 1;
#X connect 18 0 15 1;
#X connect 20 0 41 0;
#X connect 21 0 19 0;
#X connect 22 1 23 0;
#X connect 23 0 42 0;
#X connect 24 0 13 0;
#X connect 27 0 1 1;
#X connect 27 0 30 0;
#X connect 29 1 18 0;
#X connect 34 0 33 0;
#X connect 37 0 29 0;
#X connect 37 1 38 0;
#X connect 37 2 20 0;
#X connect 38 0 39 0;
#X connect 39 0 46 0;
#X connect 41 0 21 0;
#X connect 41 1 22 0;
#X connect 43 0 47 0;
#X connect 43 1 54 0;
#X connect 44 0 40 0;
#X connect 46 0 43 0;
#X connect 47 0 44 0;
#X connect 47 1 48 0;
#X connect 48 0 45 0;
#X connect 49 0 53 1;
#X connect 50 0 53 1;
#X connect 51 0 52 0;
#X connect 51 1 50 0;
#X connect 52 0 45 0;
#X connect 53 0 49 0;
#X connect 53 0 55 0;
#X connect 54 0 53 0;
#X connect 55 1 51 0;
#X restore 450 39 pd My_RSP_Metronome;
#X obj 450 2 r startMetroBang;
#N canvas 27 92 1199 623 My_HID_CONTROLLER 0;
#X obj 316 182 tgl 20 0 empty empty empty 0 -6 0 8 -24198 -1 -1 100
100;
#X floatatom 883 317 5 0 0 1 value - -;
#X symbolatom 749 342 15 0 0 1 event_code - -;
#X symbolatom 662 359 15 0 0 1 event_type - -;
#X msg 603 119 close;
#X msg 574 179 refresh;
#X text 636 178 refresh device list;
#X text 757 70 released under the GNU GPL;
#X text 963 57 $Revision: 1.6 $$Date: 2007-07-26 07:31:38 $;
#X text 964 70 $Author: eighthave $;
#X text 19 102 Any non-zero value starts polling \,;
#X text 18 115 0 stops the polling. If the number;
#X text 19 128 is greater than 1 \, then the poll;
#X text 19 141 delay is set to that number.;
#X msg 574 156 info;
#X text 540 56 (C) Copyright 2004 Hans-Christoph Steiner <hans@at.or.at>
;
#X obj 316 254 hidio;
#X obj 662 297 unpack symbol symbol float float;
#X floatatom 801 318 2 0 0 1 instance - -;
#N canvas 62 79 454 304 remove 0;
#X obj 134 12 inlet;
#X obj 109 60 unpack symbol symbol float float;
#X obj 110 107 pack symbol symbol float;
#X obj 110 135 list trim;
#X obj 116 196 outlet;
#X obj 218 35;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 1 3 2 2;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X restore 41 323 pd remove instance numbers;
#X text 637 202 print a list of devices to the Pd window;
#X msg 574 202 devices;
#X msg 574 223 elements;
#X text 637 224 print a list of elements for the current device;
#X text 645 119 close the current device;
#X text 636 155 output device info to the right status outlet;
#X msg 343 158 open 0;
#X obj 574 103 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 354 135 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 316 205 5 0 0 0 - - -;
#X obj 40 1021 outlet dk1;
#X obj 69 1059 outlet dk2;
#X obj 84 1077 outlet dk2;
#X obj 111 1115 outlet dk3;
#X obj 98 1096 outlet dk3;
#X obj 126 1134 outlet dk4;
#X obj 141 1153 outlet dk4;
#X obj 159 1172 outlet dk5;
#X obj 177 1190 outlet dk5;
#X obj 208 1230 outlet dk6;
#X obj 193 1209 outlet dk6;
#X obj 229 1272 outlet dk7;
#X obj 219 1251 outlet dk7;
#X obj 243 1293 outlet dk8;
#X obj 256 1313 outlet dk8;
#X obj 62 742 s pk1;
#X obj 136 776 s pk2;
#X obj 245 821 s pk3;
#X obj 386 828 s pk4;
#X obj 536 836 s pk5;
#X obj 822 837 s pk7;
#X obj 833 785 s pk8;
#X floatatom 724 487 5 0 0 0 - - -;
#X floatatom 908 484 5 0 0 0 - - -;
#X floatatom 985 485 5 0 0 0 - - -;
#X floatatom 1074 485 5 0 0 0 - - -;
#X obj 474 504 clip 0 4086;
#X obj 474 528 / 4086;
#X obj 474 550 s subVol1;
#X obj 564 507 clip 0 4086;
#X obj 564 528 / 4086;
#X obj 564 550 s subVol2;
#X obj 644 507 clip 0 4086;
#X obj 644 528 / 4086;
#X floatatom 474 479 5 0 0 0 - - -;
#X floatatom 564 483 5 0 0 0 - - -;
#X floatatom 644 483 5 0 0 0 - - -;
#X obj 644 550 s subVol3;
#X obj 724 507 clip 0 4086;
#X obj 724 528 / 4086;
#X obj 824 528 / 4086;
#X floatatom 824 483 5 0 0 0 - - -;
#X obj 724 550 s subVol4;
#X obj 824 550 s subVol5;
#X obj 908 507 clip 0 4086;
#X obj 908 528 / 4086;
#X obj 908 550 s subVol6;
#X obj 985 507 clip 0 4086;
#X obj 985 528 / 4086;
#X obj 985 550 s subVol7;
#X obj 1074 505 clip 0 4086;
#X obj 1074 526 / 4086;
#X obj 1074 548 s subVol8;
#X obj 842 731 s extraPush;
#X floatatom 197 207 5 0 0 0 - - -;
#X msg 96 226 debug 6;
#X obj 41 887 route button_0 button_1 button_2 button_3 button_4 button_5
button_6 button_7 button_8 button_9 button_10 button_11 button_12 button_13
button_14 button_15;
#X text 435 44 comment;
#X obj 672 835 s pk6;
#X obj 41 358 route button key absolute syn;
#X obj 668 443 route rudder throttle rz ry rx z y x;
#X text 665 269 for debugging;
#X text 691 417 SCHIEBEREGLER;
#X text 471 597 PLAYKNOEPFE;
#X text 132 860 DREHKNOEPFE;
#X obj 59 1040 outlet dk1;
#N canvas 87 234 655 350 MY_RSP_HID_PRECISER 0;
#X obj 95 127 f 0;
#X obj 56 235 spigot;
#X obj 56 89 t f f b;
#X obj 75 170 !=;
#X text 122 127 old value;
#X text 103 169 compare old vs new value;
#X text 101 217 if comparism is true \; spigot receives a 1 \; and
opens up;
#X obj 56 37 inlet hidKnobTurn;
#X obj 56 301 outlet filteredKnobTurn;
#X text 290 38 18th October 2018 I found that the hid-object \; is
a little bit unprecise in reading the turns of my self-built HID-controller's
endless knobs. \; When I turn a knob \, the value detection \; sometimes
works ok: press: 1----0 But sometimes ONE turn is recognized as \;
TWO turns: \; press: 1-1-0-0 So this patch acts as a filter \; and
only lets a number come through \; when the number before was not the
same \; as the current number. \; The Moses object at the bottom lets
only the value 1 \; pass to the output.;
#X obj 56 269 moses 1;
#X connect 0 0 3 1;
#X connect 1 0 0 1;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 2 2 0 0;
#X connect 3 0 1 1;
#X connect 7 0 2 0;
#X connect 10 0 8 0;
#X restore 1080 1368 pd MY_RSP_HID_PRECISER;
#X obj 824 505 clip 0 4086;
#X obj 316 69 r hidInitBang;
#X obj 316 95 t b b;
#X obj 62 704 MY_RSP_HID_PRECISER;
#X obj 136 746 MY_RSP_HID_PRECISER;
#X obj 245 787 MY_RSP_HID_PRECISER;
#X obj 386 797 MY_RSP_HID_PRECISER;
#X obj 536 807 MY_RSP_HID_PRECISER;
#X obj 672 807 MY_RSP_HID_PRECISER;
#X obj 842 701 MY_RSP_HID_PRECISER;
#X obj 833 757 MY_RSP_HID_PRECISER;
#X obj 822 807 MY_RSP_HID_PRECISER;
#X obj 514 956 MY_RSP_HID_PRECISER;
#X obj 533 976 MY_RSP_HID_PRECISER;
#X obj 556 995 MY_RSP_HID_PRECISER;
#X obj 584 1014 MY_RSP_HID_PRECISER;
#X obj 605 1033 MY_RSP_HID_PRECISER;
#X obj 625 1051 MY_RSP_HID_PRECISER;
#X obj 648 1069 MY_RSP_HID_PRECISER;
#X obj 670 1088 MY_RSP_HID_PRECISER;
#X obj 690 1106 MY_RSP_HID_PRECISER;
#X obj 710 1125 MY_RSP_HID_PRECISER;
#X obj 731 1144 MY_RSP_HID_PRECISER;
#X obj 749 1164 MY_RSP_HID_PRECISER;
#X obj 769 1183 MY_RSP_HID_PRECISER;
#X obj 789 1202 MY_RSP_HID_PRECISER;
#X obj 806 1220 MY_RSP_HID_PRECISER;
#X obj 824 1238 MY_RSP_HID_PRECISER;
#X obj 992 711 MY_RSP_HID_PRECISER;
#X obj 992 732 s HID_MasterKnob_LeftTurn;
#X obj 408 617 route syn_200 syn_201 syn_202 syn_203 syn_204 syn_205
syn_206 syn_207 syn_199 syn_192 syn_193;
#X obj 1032 651 MY_RSP_HID_PRECISER;
#X obj 1032 672 s HID_MasterKnob_RightTurn;
#X connect 0 0 29 0;
#X connect 4 0 16 0;
#X connect 5 0 16 0;
#X connect 14 0 16 0;
#X connect 16 0 17 0;
#X connect 16 0 19 0;
#X connect 17 0 3 0;
#X connect 17 1 2 0;
#X connect 17 2 18 0;
#X connect 17 3 1 0;
#X connect 19 0 89 0;
#X connect 21 0 16 0;
#X connect 22 0 16 0;
#X connect 26 0 16 0;
#X connect 27 0 14 0;
#X connect 28 0 26 0;
#X connect 29 0 16 0;
#X connect 52 0 68 0;
#X connect 53 0 74 0;
#X connect 54 0 77 0;
#X connect 55 0 80 0;
#X connect 56 0 57 0;
#X connect 57 0 58 0;
#X connect 59 0 60 0;
#X connect 60 0 61 0;
#X connect 62 0 63 0;
#X connect 63 0 67 0;
#X connect 64 0 56 0;
#X connect 65 0 59 0;
#X connect 66 0 62 0;
#X connect 68 0 69 0;
#X connect 69 0 72 0;
#X connect 70 0 73 0;
#X connect 71 0 97 0;
#X connect 74 0 75 0;
#X connect 75 0 76 0;
#X connect 77 0 78 0;
#X connect 78 0 79 0;
#X connect 80 0 81 0;
#X connect 81 0 82 0;
#X connect 84 0 16 0;
#X connect 85 0 16 0;
#X connect 86 0 109 0;
#X connect 86 1 110 0;
#X connect 86 2 111 0;
#X connect 86 3 112 0;
#X connect 86 4 113 0;
#X connect 86 5 114 0;
#X connect 86 6 115 0;
#X connect 86 7 116 0;
#X connect 86 8 117 0;
#X connect 86 9 118 0;
#X connect 86 10 119 0;
#X connect 86 11 120 0;
#X connect 86 12 121 0;
#X connect 86 13 122 0;
#X connect 86 14 123 0;
#X connect 86 15 124 0;
#X connect 89 0 86 0;
#X connect 89 1 127 0;
#X connect 89 2 90 0;
#X connect 90 0 64 0;
#X connect 90 1 65 0;
#X connect 90 2 66 0;
#X connect 90 3 52 0;
#X connect 90 4 71 0;
#X connect 90 5 53 0;
#X connect 90 6 54 0;
#X connect 90 7 55 0;
#X connect 97 0 70 0;
#X connect 98 0 99 0;
#X connect 99 0 0 0;
#X connect 99 1 26 0;
#X connect 100 0 45 0;
#X connect 101 0 46 0;
#X connect 102 0 47 0;
#X connect 103 0 48 0;
#X connect 104 0 49 0;
#X connect 105 0 88 0;
#X connect 106 0 83 0;
#X connect 107 0 51 0;
#X connect 108 0 50 0;
#X connect 109 0 30 0;
#X connect 110 0 95 0;
#X connect 111 0 31 0;
#X connect 112 0 32 0;
#X connect 113 0 34 0;
#X connect 114 0 33 0;
#X connect 115 0 35 0;
#X connect 116 0 36 0;
#X connect 117 0 37 0;
#X connect 118 0 38 0;
#X connect 119 0 40 0;
#X connect 120 0 39 0;
#X connect 121 0 42 0;
#X connect 122 0 41 0;
#X connect 123 0 43 0;
#X connect 124 0 44 0;
#X connect 125 0 126 0;
#X connect 127 0 100 0;
#X connect 127 1 101 0;
#X connect 127 2 102 0;
#X connect 127 3 103 0;
#X connect 127 4 104 0;
#X connect 127 5 105 0;
#X connect 127 6 108 0;
#X connect 127 7 107 0;
#X connect 127 8 106 0;
#X connect 127 9 125 0;
#X connect 127 10 128 0;
#X connect 128 0 129 0;
#X coords 0 623 400 622 400 30 0;
#X restore 26 38 pd My_HID_CONTROLLER;
#X obj 114 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 154 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 204 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 244 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 294 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 334 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 384 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 424 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 474 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 514 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 568 334 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 608 334 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 658 334 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 698 334 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407
-1 -1;
#X obj 24 410 r pk1;
#X obj 114 409 r pk2;
#X obj 206 410 r pk3;
#X obj 297 410 r pk4;
#X obj 389 409 r pk5;
#X obj 479 408 r pk6;
#X obj 571 409 r pk7;
#X obj 662 409 r pk8;
#X obj 1139 463 r initBang;
#X obj 24 572 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 25 1;
#X obj 24 714 s vol1;
#X obj 24 548 r subVol1;
#X obj 114 571 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 25 1;
#X obj 114 715 s vol2;
#X obj 114 547 r subVol2;
#X obj 207 571 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 0 1;
#X obj 207 547 r subVol3;
#X obj 207 715 s vol3;
#X obj 297 571 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 22 1;
#X obj 297 547 r subVol4;
#X obj 297 715 s vol4;
#X obj 390 571 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 19 1;
#X obj 480 570 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 28 1;
#X obj 573 570 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 12700 1;
#X obj 663 570 vsl 81 128 0 1 0 0 empty empty empty 0 -9 0 15 -191407
-1 -33289 22 1;
#X obj 390 547 r subVol5;
#X obj 390 713 s vol5;
#X obj 480 546 r subVol6;
#X obj 480 714 s vol6;
#X obj 573 546 r subVol7;
#X obj 573 714 s vol7;
#X obj 663 546 r subVol8;
#X obj 663 714 s vol8;
#X obj 24 525 s fire1;
#X obj 26 379 s sD1;
#X obj 66 379 s sU1;
#X obj 114 379 s sD2;
#X obj 154 379 s sU2;
#X obj 114 522 s fire2;
#X obj 775 7 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 844 183 8;
#X obj 844 212 until;
#X obj 844 242 f;
#X msg 858 161 1;
#X obj 876 241 + 1;
#N canvas 89 58 1078 622 My_RSP_TableCreator 0;
#X obj 40 434 list;
#X obj 40 506 list length;
#X text 116 530 Number of Samples in the SamplePack folder;
#X floatatom 78 530 5 0 0 0 - - -;
#X obj 100 115 40;
#X obj 163 117 60;
#X text 197 119 y starting coordinate;
#X text 104 99 x starting coordinate;
#X obj 163 140 s yStart;
#X obj 100 141 s xStart;
#X text 94 433 list = short for list append;
#X obj 40 475 t a;
#N canvas 207 137 535 334 Sample-Array-Subpatch1 0;
#X obj 220 60 table SampleArray1_1_right;
#X obj 40 60 table SampleArray1_1_left;
#X obj 220 80 table SampleArray1_2_right;
#X obj 40 80 table SampleArray1_2_left;
#X obj 220 100 table SampleArray1_3_right;
#X obj 40 100 table SampleArray1_3_left;
#X obj 220 120 table SampleArray1_4_right;
#X obj 40 120 table SampleArray1_4_left;
#X obj 220 140 table SampleArray1_5_right;
#X obj 40 140 table SampleArray1_5_left;
#X obj 220 160 table SampleArray1_6_right;
#X obj 40 160 table SampleArray1_6_left;
#X obj 220 180 table SampleArray1_7_right;
#X obj 40 180 table SampleArray1_7_left;
#X obj 220 200 table SampleArray1_8_right;
#X obj 40 200 table SampleArray1_8_left;
#X obj 220 220 table SampleArray1_9_right;
#X obj 40 220 table SampleArray1_9_left;
#X obj 220 240 table SampleArray1_10_right;
#X obj 40 240 table SampleArray1_10_left;
#X obj 220 260 table SampleArray1_11_right;
#X obj 40 260 table SampleArray1_11_left;
#X obj 220 280 table SampleArray1_12_right;
#X obj 40 280 table SampleArray1_12_left;
#X obj 220 300 table SampleArray1_13_right;
#X obj 40 300 table SampleArray1_13_left;
#X obj 220 320 table SampleArray1_14_right;
#X obj 40 320 table SampleArray1_14_left;
#X obj 220 340 table SampleArray1_15_right;
#X obj 40 340 table SampleArray1_15_left;
#X obj 220 360 table SampleArray1_16_right;
#X obj 40 360 table SampleArray1_16_left;
#X obj 220 380 table SampleArray1_17_right;
#X obj 40 380 table SampleArray1_17_left;
#X obj 220 400 table SampleArray1_18_right;
#X obj 40 400 table SampleArray1_18_left;
#X obj 220 420 table SampleArray1_19_right;
#X obj 40 420 table SampleArray1_19_left;
#X obj 220 440 table SampleArray1_20_right;
#X obj 40 440 table SampleArray1_20_left;
#X obj 220 460 table SampleArray1_21_right;
#X obj 40 460 table SampleArray1_21_left;
#X obj 220 480 table SampleArray1_22_right;
#X obj 40 480 table SampleArray1_22_left;
#X obj 220 500 table SampleArray1_23_right;
#X obj 40 500 table SampleArray1_23_left;
#X obj 220 520 table SampleArray1_24_right;
#X obj 40 520 table SampleArray1_24_left;
#X obj 220 540 table SampleArray1_25_right;
#X obj 40 540 table SampleArray1_25_left;
#X obj 220 560 table SampleArray1_26_right;
#X obj 40 560 table SampleArray1_26_left;
#X obj 220 580 table SampleArray1_27_right;
#X obj 40 580 table SampleArray1_27_left;
#X obj 220 600 table SampleArray1_28_right;
#X obj 40 600 table SampleArray1_28_left;
#X obj 220 620 table SampleArray1_29_right;
#X obj 40 620 table SampleArray1_29_left;
#X obj 220 640 table SampleArray1_30_right;
#X obj 40 640 table SampleArray1_30_left;
#X obj 220 660 table SampleArray1_31_right;
#X obj 40 660 table SampleArray1_31_left;
#X obj 220 680 table SampleArray1_32_right;
#X obj 40 680 table SampleArray1_32_left;
#X obj 220 700 table SampleArray1_33_right;
#X obj 40 700 table SampleArray1_33_left;
#X obj 220 720 table SampleArray1_34_right;
#X obj 40 720 table SampleArray1_34_left;
#X obj 220 740 table SampleArray1_35_right;
#X obj 40 740 table SampleArray1_35_left;
#X obj 220 760 table SampleArray1_36_right;
#X obj 40 760 table SampleArray1_36_left;
#X obj 220 780 table SampleArray1_37_right;
#X obj 40 780 table SampleArray1_37_left;
#X obj 220 800 table SampleArray1_38_right;
#X obj 40 800 table SampleArray1_38_left;
#X obj 220 820 table SampleArray1_39_right;
#X obj 40 820 table SampleArray1_39_left;
#X obj 220 840 table SampleArray1_40_right;
#X obj 40 840 table SampleArray1_40_left;
#X obj 220 860 table SampleArray1_41_right;
#X obj 40 860 table SampleArray1_41_left;
#X obj 220 880 table SampleArray1_42_right;
#X obj 40 880 table SampleArray1_42_left;
#X obj 220 900 table SampleArray1_43_right;
#X obj 40 900 table SampleArray1_43_left;
#X obj 220 920 table SampleArray1_44_right;
#X obj 40 920 table SampleArray1_44_left;
#X obj 220 940 table SampleArray1_45_right;
#X obj 40 940 table SampleArray1_45_left;
#X obj 220 960 table SampleArray1_46_right;
#X obj 40 960 table SampleArray1_46_left;
#X obj 220 980 table SampleArray1_47_right;
#X obj 40 980 table SampleArray1_47_left;
#X obj 220 1000 table SampleArray1_48_right;
#X obj 40 1000 table SampleArray1_48_left;
#X obj 220 1020 table SampleArray1_49_right;
#X obj 40 1020 table SampleArray1_49_left;
#X obj 220 1040 table SampleArray1_50_right;
#X obj 40 1040 table SampleArray1_50_left;
#X obj 220 1060 table SampleArray1_51_right;
#X obj 40 1060 table SampleArray1_51_left;
#X obj 220 1080 table SampleArray1_52_right;
#X obj 40 1080 table SampleArray1_52_left;
#X obj 220 1100 table SampleArray1_53_right;
#X obj 40 1100 table SampleArray1_53_left;
#X obj 220 1120 table SampleArray1_54_right;
#X obj 40 1120 table SampleArray1_54_left;
#X obj 220 1140 table SampleArray1_55_right;
#X obj 40 1140 table SampleArray1_55_left;
#X obj 220 1160 table SampleArray1_56_right;
#X obj 40 1160 table SampleArray1_56_left;
#X obj 220 1180 table SampleArray1_57_right;
#X obj 40 1180 table SampleArray1_57_left;
#X obj 220 1200 table SampleArray1_58_right;
#X obj 40 1200 table SampleArray1_58_left;
#X obj 220 1220 table SampleArray1_59_right;
#X obj 40 1220 table SampleArray1_59_left;
#X obj 220 1240 table SampleArray1_60_right;
#X obj 40 1240 table SampleArray1_60_left;
#X obj 220 1260 table SampleArray1_61_right;
#X obj 40 1260 table SampleArray1_61_left;
#X obj 220 1280 table SampleArray1_62_right;
#X obj 40 1280 table SampleArray1_62_left;
#X obj 220 1300 table SampleArray1_63_right;
#X obj 40 1300 table SampleArray1_63_left;
#X obj 220 1320 table SampleArray1_64_right;
#X obj 40 1320 table SampleArray1_64_left;
#X obj 220 1340 table SampleArray1_65_right;
#X obj 40 1340 table SampleArray1_65_left;
#X obj 220 1360 table SampleArray1_66_right;
#X obj 40 1360 table SampleArray1_66_left;
#X obj 220 1380 table SampleArray1_67_right;
#X obj 40 1380 table SampleArray1_67_left;
#X obj 220 1400 table SampleArray1_68_right;
#X obj 40 1400 table SampleArray1_68_left;
#X obj 220 1420 table SampleArray1_69_right;
#X obj 40 1420 table SampleArray1_69_left;
#X obj 220 1440 table SampleArray1_70_right;
#X obj 40 1440 table SampleArray1_70_left;
#X obj 220 1460 table SampleArray1_71_right;
#X obj 40 1460 table SampleArray1_71_left;
#X obj 220 1480 table SampleArray1_72_right;
#X obj 40 1480 table SampleArray1_72_left;
#X obj 220 1500 table SampleArray1_73_right;
#X obj 40 1500 table SampleArray1_73_left;
#X obj 220 1520 table SampleArray1_74_right;
#X obj 40 1520 table SampleArray1_74_left;
#X obj 220 1540 table SampleArray1_75_right;
#X obj 40 1540 table SampleArray1_75_left;
#X obj 220 1560 table SampleArray1_76_right;
#X obj 40 1560 table SampleArray1_76_left;
#X obj 220 1580 table SampleArray1_77_right;
#X obj 40 1580 table SampleArray1_77_left;
#X obj 220 1600 table SampleArray1_78_right;
#X obj 40 1600 table SampleArray1_78_left;
#X obj 220 1620 table SampleArray1_79_right;
#X obj 40 1620 table SampleArray1_79_left;
#X obj 220 1640 table SampleArray1_80_right;
#X obj 40 1640 table SampleArray1_80_left;
#X obj 220 1660 table SampleArray1_81_right;
#X obj 40 1660 table SampleArray1_81_left;
#X obj 220 1680 table SampleArray1_82_right;
#X obj 40 1680 table SampleArray1_82_left;
#X obj 220 1700 table SampleArray1_83_right;
#X obj 40 1700 table SampleArray1_83_left;
#X obj 220 1720 table SampleArray1_84_right;
#X obj 40 1720 table SampleArray1_84_left;
#X obj 220 1740 table SampleArray1_85_right;
#X obj 40 1740 table SampleArray1_85_left;
#X obj 220 1760 table SampleArray1_86_right;
#X obj 40 1760 table SampleArray1_86_left;
#X obj 220 1780 table SampleArray1_87_right;
#X obj 40 1780 table SampleArray1_87_left;
#X obj 220 1800 table SampleArray1_88_right;
#X obj 40 1800 table SampleArray1_88_left;
#X obj 220 1820 table SampleArray1_89_right;
#X obj 40 1820 table SampleArray1_89_left;
#X obj 220 1840 table SampleArray1_90_right;
#X obj 40 1840 table SampleArray1_90_left;
#X obj 220 1860 table SampleArray1_91_right;
#X obj 40 1860 table SampleArray1_91_left;
#X obj 220 1880 table SampleArray1_92_right;
#X obj 40 1880 table SampleArray1_92_left;
#X obj 220 1900 table SampleArray1_93_right;
#X obj 40 1900 table SampleArray1_93_left;
#X obj 220 1920 table SampleArray1_94_right;
#X obj 40 1920 table SampleArray1_94_left;
#X obj 220 1940 table SampleArray1_95_right;
#X obj 40 1940 table SampleArray1_95_left;
#X restore 761 14 pd Sample-Array-Subpatch1;
#X obj 40 20 inlet createTables;
#X text 51 45 1 - 8 go in here;
#N canvas 199 113 535 334 Sample-Array-Subpatch2 0;
#X obj 220 60 table SampleArray2_1_right;
#X obj 40 60 table SampleArray2_1_left;
#X obj 220 80 table SampleArray2_2_right;
#X obj 40 80 table SampleArray2_2_left;
#X obj 220 100 table SampleArray2_3_right;
#X obj 40 100 table SampleArray2_3_left;
#X obj 220 120 table SampleArray2_4_right;
#X obj 40 120 table SampleArray2_4_left;
#X obj 220 140 table SampleArray2_5_right;
#X obj 40 140 table SampleArray2_5_left;
#X obj 220 160 table SampleArray2_6_right;
#X obj 40 160 table SampleArray2_6_left;
#X obj 220 180 table SampleArray2_7_right;
#X obj 40 180 table SampleArray2_7_left;
#X obj 220 200 table SampleArray2_8_right;
#X obj 40 200 table SampleArray2_8_left;
#X obj 220 220 table SampleArray2_9_right;
#X obj 40 220 table SampleArray2_9_left;
#X obj 220 240 table SampleArray2_10_right;
#X obj 40 240 table SampleArray2_10_left;
#X obj 220 260 table SampleArray2_11_right;
#X obj 40 260 table SampleArray2_11_left;
#X obj 220 280 table SampleArray2_12_right;
#X obj 40 280 table SampleArray2_12_left;
#X obj 220 300 table SampleArray2_13_right;
#X obj 40 300 table SampleArray2_13_left;
#X obj 220 320 table SampleArray2_14_right;
#X obj 40 320 table SampleArray2_14_left;
#X obj 220 340 table SampleArray2_15_right;
#X obj 40 340 table SampleArray2_15_left;
#X obj 220 360 table SampleArray2_16_right;
#X obj 40 360 table SampleArray2_16_left;
#X obj 220 380 table SampleArray2_17_right;
#X obj 40 380 table SampleArray2_17_left;
#X obj 220 400 table SampleArray2_18_right;
#X obj 40 400 table SampleArray2_18_left;
#X obj 220 420 table SampleArray2_19_right;
#X obj 40 420 table SampleArray2_19_left;
#X obj 220 440 table SampleArray2_20_right;
#X obj 40 440 table SampleArray2_20_left;
#X obj 220 460 table SampleArray2_21_right;
#X obj 40 460 table SampleArray2_21_left;
#X obj 220 480 table SampleArray2_22_right;
#X obj 40 480 table SampleArray2_22_left;
#X obj 220 500 table SampleArray2_23_right;
#X obj 40 500 table SampleArray2_23_left;
#X obj 220 520 table SampleArray2_24_right;
#X obj 40 520 table SampleArray2_24_left;
#X obj 220 540 table SampleArray2_25_right;
#X obj 40 540 table SampleArray2_25_left;
#X restore 761 36 pd Sample-Array-Subpatch2;
#N canvas 201 115 535 334 Sample-Array-Subpatch3 0;
#X obj 220 60 table SampleArray3_1_right;
#X obj 40 60 table SampleArray3_1_left;
#X obj 220 80 table SampleArray3_2_right;
#X obj 40 80 table SampleArray3_2_left;
#X obj 220 100 table SampleArray3_3_right;
#X obj 40 100 table SampleArray3_3_left;
#X obj 220 120 table SampleArray3_4_right;
#X obj 40 120 table SampleArray3_4_left;
#X obj 220 140 table SampleArray3_5_right;
#X obj 40 140 table SampleArray3_5_left;
#X obj 220 160 table SampleArray3_6_right;
#X obj 40 160 table SampleArray3_6_left;
#X obj 220 180 table SampleArray3_7_right;
#X obj 40 180 table SampleArray3_7_left;
#X obj 220 200 table SampleArray3_8_right;
#X obj 40 200 table SampleArray3_8_left;
#X obj 220 220 table SampleArray3_9_right;
#X obj 40 220 table SampleArray3_9_left;
#X obj 220 240 table SampleArray3_10_right;
#X obj 40 240 table SampleArray3_10_left;
#X obj 220 260 table SampleArray3_11_right;
#X obj 40 260 table SampleArray3_11_left;
#X obj 220 280 table SampleArray3_12_right;
#X obj 40 280 table SampleArray3_12_left;
#X obj 220 300 table SampleArray3_13_right;
#X obj 40 300 table SampleArray3_13_left;
#X obj 220 320 table SampleArray3_14_right;
#X obj 40 320 table SampleArray3_14_left;
#X obj 220 340 table SampleArray3_15_right;
#X obj 40 340 table SampleArray3_15_left;
#X obj 220 360 table SampleArray3_16_right;
#X obj 40 360 table SampleArray3_16_left;
#X obj 220 380 table SampleArray3_17_right;
#X obj 40 380 table SampleArray3_17_left;
#X obj 220 400 table SampleArray3_18_right;
#X obj 40 400 table SampleArray3_18_left;
#X obj 220 420 table SampleArray3_19_right;
#X obj 40 420 table SampleArray3_19_left;
#X obj 220 440 table SampleArray3_20_right;
#X obj 40 440 table SampleArray3_20_left;
#X obj 220 460 table SampleArray3_21_right;
#X obj 40 460 table SampleArray3_21_left;
#X obj 220 480 table SampleArray3_22_right;
#X obj 40 480 table SampleArray3_22_left;
#X obj 220 500 table SampleArray3_23_right;
#X obj 40 500 table SampleArray3_23_left;
#X obj 220 520 table SampleArray3_24_right;
#X obj 40 520 table SampleArray3_24_left;
#X obj 220 540 table SampleArray3_25_right;
#X obj 40 540 table SampleArray3_25_left;
#X obj 220 560 table SampleArray3_26_right;
#X obj 40 560 table SampleArray3_26_left;
#X obj 220 580 table SampleArray3_27_right;
#X obj 40 580 table SampleArray3_27_left;
#X obj 220 600 table SampleArray3_28_right;
#X obj 40 600 table SampleArray3_28_left;
#X obj 220 620 table SampleArray3_29_right;
#X obj 40 620 table SampleArray3_29_left;
#X obj 220 640 table SampleArray3_30_right;
#X obj 40 640 table SampleArray3_30_left;
#X obj 220 660 table SampleArray3_31_right;
#X obj 40 660 table SampleArray3_31_left;
#X obj 220 680 table SampleArray3_32_right;
#X obj 40 680 table SampleArray3_32_left;
#X obj 220 700 table SampleArray3_33_right;
#X obj 40 700 table SampleArray3_33_left;
#X obj 220 720 table SampleArray3_34_right;
#X obj 40 720 table SampleArray3_34_left;
#X obj 220 740 table SampleArray3_35_right;
#X obj 40 740 table SampleArray3_35_left;
#X restore 761 59 pd Sample-Array-Subpatch3;
#N canvas 203 117 535 334 Sample-Array-Subpatch4 0;
#X obj 220 60 table SampleArray4_1_right;
#X obj 40 60 table SampleArray4_1_left;
#X obj 220 80 table SampleArray4_2_right;
#X obj 40 80 table SampleArray4_2_left;
#X obj 220 100 table SampleArray4_3_right;
#X obj 40 100 table SampleArray4_3_left;
#X obj 220 120 table SampleArray4_4_right;
#X obj 40 120 table SampleArray4_4_left;
#X obj 220 140 table SampleArray4_5_right;
#X obj 40 140 table SampleArray4_5_left;
#X obj 220 160 table SampleArray4_6_right;
#X obj 40 160 table SampleArray4_6_left;
#X obj 220 180 table SampleArray4_7_right;
#X obj 40 180 table SampleArray4_7_left;
#X obj 220 200 table SampleArray4_8_right;
#X obj 40 200 table SampleArray4_8_left;
#X obj 220 220 table SampleArray4_9_right;
#X obj 40 220 table SampleArray4_9_left;
#X obj 220 240 table SampleArray4_10_right;
#X obj 40 240 table SampleArray4_10_left;
#X obj 220 260 table SampleArray4_11_right;
#X obj 40 260 table SampleArray4_11_left;
#X obj 220 280 table SampleArray4_12_right;
#X obj 40 280 table SampleArray4_12_left;
#X obj 220 300 table SampleArray4_13_right;
#X obj 40 300 table SampleArray4_13_left;
#X obj 220 320 table SampleArray4_14_right;
#X obj 40 320 table SampleArray4_14_left;
#X obj 220 340 table SampleArray4_15_right;
#X obj 40 340 table SampleArray4_15_left;
#X obj 220 360 table SampleArray4_16_right;
#X obj 40 360 table SampleArray4_16_left;
#X obj 220 380 table SampleArray4_17_right;
#X obj 40 380 table SampleArray4_17_left;
#X obj 220 400 table SampleArray4_18_right;
#X obj 40 400 table SampleArray4_18_left;
#X obj 220 420 table SampleArray4_19_right;
#X obj 40 420 table SampleArray4_19_left;
#X obj 220 440 table SampleArray4_20_right;
#X obj 40 440 table SampleArray4_20_left;
#X obj 220 460 table SampleArray4_21_right;
#X obj 40 460 table SampleArray4_21_left;
#X obj 220 480 table SampleArray4_22_right;
#X obj 40 480 table SampleArray4_22_left;
#X obj 220 500 table SampleArray4_23_right;
#X obj 40 500 table SampleArray4_23_left;
#X obj 220 520 table SampleArray4_24_right;
#X obj 40 520 table SampleArray4_24_left;
#X obj 220 540 table SampleArray4_25_right;
#X obj 40 540 table SampleArray4_25_left;
#X obj 220 560 table SampleArray4_26_right;
#X obj 40 560 table SampleArray4_26_left;
#X obj 220 580 table SampleArray4_27_right;
#X obj 40 580 table SampleArray4_27_left;
#X obj 220 600 table SampleArray4_28_right;
#X obj 40 600 table SampleArray4_28_left;
#X obj 220 620 table SampleArray4_29_right;
#X obj 40 620 table SampleArray4_29_left;
#X obj 220 640 table SampleArray4_30_right;
#X obj 40 640 table SampleArray4_30_left;
#X obj 220 660 table SampleArray4_31_right;
#X obj 40 660 table SampleArray4_31_left;
#X obj 220 680 table SampleArray4_32_right;
#X obj 40 680 table SampleArray4_32_left;
#X obj 220 700 table SampleArray4_33_right;
#X obj 40 700 table SampleArray4_33_left;
#X obj 220 720 table SampleArray4_34_right;
#X obj 40 720 table SampleArray4_34_left;
#X obj 220 740 table SampleArray4_35_right;
#X obj 40 740 table SampleArray4_35_left;
#X obj 220 760 table SampleArray4_36_right;
#X obj 40 760 table SampleArray4_36_left;
#X obj 220 780 table SampleArray4_37_right;
#X obj 40 780 table SampleArray4_37_left;
#X obj 220 800 table SampleArray4_38_right;
#X obj 40 800 table SampleArray4_38_left;
#X obj 220 820 table SampleArray4_39_right;
#X obj 40 820 table SampleArray4_39_left;
#X obj 220 840 table SampleArray4_40_right;
#X obj 40 840 table SampleArray4_40_left;
#X obj 220 860 table SampleArray4_41_right;
#X obj 40 860 table SampleArray4_41_left;
#X obj 220 880 table SampleArray4_42_right;
#X obj 40 880 table SampleArray4_42_left;
#X obj 220 900 table SampleArray4_43_right;
#X obj 40 900 table SampleArray4_43_left;
#X obj 220 920 table SampleArray4_44_right;
#X obj 40 920 table SampleArray4_44_left;
#X obj 220 940 table SampleArray4_45_right;
#X obj 40 940 table SampleArray4_45_left;
#X obj 220 960 table SampleArray4_46_right;
#X obj 40 960 table SampleArray4_46_left;
#X obj 220 980 table SampleArray4_47_right;
#X obj 40 980 table SampleArray4_47_left;
#X obj 220 1000 table SampleArray4_48_right;
#X obj 40 1000 table SampleArray4_48_left;
#X obj 220 1020 table SampleArray4_49_right;
#X obj 40 1020 table SampleArray4_49_left;
#X obj 220 1040 table SampleArray4_50_right;
#X obj 40 1040 table SampleArray4_50_left;
#X obj 220 1060 table SampleArray4_51_right;
#X obj 40 1060 table SampleArray4_51_left;
#X obj 220 1080 table SampleArray4_52_right;
#X obj 40 1080 table SampleArray4_52_left;
#X obj 220 1100 table SampleArray4_53_right;
#X obj 40 1100 table SampleArray4_53_left;
#X obj 220 1120 table SampleArray4_54_right;
#X obj 40 1120 table SampleArray4_54_left;
#X obj 220 1140 table SampleArray4_55_right;
#X obj 40 1140 table SampleArray4_55_left;
#X obj 220 1160 table SampleArray4_56_right;
#X obj 40 1160 table SampleArray4_56_left;
#X obj 220 1180 table SampleArray4_57_right;
#X obj 40 1180 table SampleArray4_57_left;
#X obj 220 1200 table SampleArray4_58_right;
#X obj 40 1200 table SampleArray4_58_left;
#X obj 220 1220 table SampleArray4_59_right;
#X obj 40 1220 table SampleArray4_59_left;
#X obj 220 1240 table SampleArray4_60_right;
#X obj 40 1240 table SampleArray4_60_left;
#X obj 220 1260 table SampleArray4_61_right;
#X obj 40 1260 table SampleArray4_61_left;
#X obj 220 1280 table SampleArray4_62_right;
#X obj 40 1280 table SampleArray4_62_left;
#X obj 220 1300 table SampleArray4_63_right;
#X obj 40 1300 table SampleArray4_63_left;
#X obj 220 1320 table SampleArray4_64_right;
#X obj 40 1320 table SampleArray4_64_left;
#X obj 220 1340 table SampleArray4_65_right;
#X obj 40 1340 table SampleArray4_65_left;
#X obj 220 1360 table SampleArray4_66_right;
#X obj 40 1360 table SampleArray4_66_left;
#X obj 220 1380 table SampleArray4_67_right;
#X obj 40 1380 table SampleArray4_67_left;
#X obj 220 1400 table SampleArray4_68_right;
#X obj 40 1400 table SampleArray4_68_left;
#X obj 220 1420 table SampleArray4_69_right;
#X obj 40 1420 table SampleArray4_69_left;
#X obj 220 1440 table SampleArray4_70_right;
#X obj 40 1440 table SampleArray4_70_left;
#X obj 220 1460 table SampleArray4_71_right;
#X obj 40 1460 table SampleArray4_71_left;
#X obj 220 1480 table SampleArray4_72_right;
#X obj 40 1480 table SampleArray4_72_left;
#X obj 220 1500 table SampleArray4_73_right;
#X obj 40 1500 table SampleArray4_73_left;
#X obj 220 1520 table SampleArray4_74_right;
#X obj 40 1520 table SampleArray4_74_left;
#X obj 220 1540 table SampleArray4_75_right;
#X obj 40 1540 table SampleArray4_75_left;
#X obj 220 1560 table SampleArray4_76_right;
#X obj 40 1560 table SampleArray4_76_left;
#X obj 220 1580 table SampleArray4_77_right;
#X obj 40 1580 table SampleArray4_77_left;
#X obj 220 1600 table SampleArray4_78_right;
#X obj 40 1600 table SampleArray4_78_left;
#X obj 220 1620 table SampleArray4_79_right;
#X obj 40 1620 table SampleArray4_79_left;
#X obj 220 1640 table SampleArray4_80_right;
#X obj 40 1640 table SampleArray4_80_left;
#X obj 220 1660 table SampleArray4_81_right;
#X obj 40 1660 table SampleArray4_81_left;
#X obj 220 1680 table SampleArray4_82_right;
#X obj 40 1680 table SampleArray4_82_left;
#X obj 220 1700 table SampleArray4_83_right;
#X obj 40 1700 table SampleArray4_83_left;
#X obj 220 1720 table SampleArray4_84_right;
#X obj 40 1720 table SampleArray4_84_left;
#X obj 220 1740 table SampleArray4_85_right;
#X obj 40 1740 table SampleArray4_85_left;
#X obj 220 1760 table SampleArray4_86_right;
#X obj 40 1760 table SampleArray4_86_left;
#X obj 220 1780 table SampleArray4_87_right;
#X obj 40 1780 table SampleArray4_87_left;
#X obj 220 1800 table SampleArray4_88_right;
#X obj 40 1800 table SampleArray4_88_left;
#X obj 220 1820 table SampleArray4_89_right;
#X obj 40 1820 table SampleArray4_89_left;
#X obj 220 1840 table SampleArray4_90_right;
#X obj 40 1840 table SampleArray4_90_left;
#X obj 220 1860 table SampleArray4_91_right;
#X obj 40 1860 table SampleArray4_91_left;
#X obj 220 1880 table SampleArray4_92_right;
#X obj 40 1880 table SampleArray4_92_left;
#X obj 220 1900 table SampleArray4_93_right;
#X obj 40 1900 table SampleArray4_93_left;
#X obj 220 1920 table SampleArray4_94_right;
#X obj 40 1920 table SampleArray4_94_left;
#X obj 220 1940 table SampleArray4_95_right;
#X obj 40 1940 table SampleArray4_95_left;
#X obj 220 1960 table SampleArray4_96_right;
#X obj 40 1960 table SampleArray4_96_left;
#X obj 220 1980 table SampleArray4_97_right;
#X obj 40 1980 table SampleArray4_97_left;
#X obj 220 2000 table SampleArray4_98_right;
#X obj 40 2000 table SampleArray4_98_left;
#X obj 220 2020 table SampleArray4_99_right;
#X obj 40 2020 table SampleArray4_99_left;
#X obj 220 2040 table SampleArray4_100_right;
#X obj 40 2040 table SampleArray4_100_left;
#X obj 220 2060 table SampleArray4_101_right;
#X obj 40 2060 table SampleArray4_101_left;
#X obj 220 2080 table SampleArray4_102_right;
#X obj 40 2080 table SampleArray4_102_left;
#X obj 220 2100 table SampleArray4_103_right;
#X obj 40 2100 table SampleArray4_103_left;
#X obj 220 2120 table SampleArray4_104_right;
#X obj 40 2120 table SampleArray4_104_left;
#X obj 220 2140 table SampleArray4_105_right;
#X obj 40 2140 table SampleArray4_105_left;
#X obj 220 2160 table SampleArray4_106_right;
#X obj 40 2160 table SampleArray4_106_left;
#X obj 220 2180 table SampleArray4_107_right;
#X obj 40 2180 table SampleArray4_107_left;
#X obj 220 2200 table SampleArray4_108_right;
#X obj 40 2200 table SampleArray4_108_left;
#X obj 220 2220 table SampleArray4_109_right;
#X obj 40 2220 table SampleArray4_109_left;
#X obj 220 2240 table SampleArray4_110_right;
#X obj 40 2240 table SampleArray4_110_left;
#X obj 220 2260 table SampleArray4_111_right;
#X obj 40 2260 table SampleArray4_111_left;
#X obj 220 2280 table SampleArray4_112_right;
#X obj 40 2280 table SampleArray4_112_left;
#X obj 220 2300 table SampleArray4_113_right;
#X obj 40 2300 table SampleArray4_113_left;
#X obj 220 2320 table SampleArray4_114_right;
#X obj 40 2320 table SampleArray4_114_left;
#X obj 220 2340 table SampleArray4_115_right;
#X obj 40 2340 table SampleArray4_115_left;
#X obj 220 2360 table SampleArray4_116_right;
#X obj 40 2360 table SampleArray4_116_left;
#X obj 220 2380 table SampleArray4_117_right;
#X obj 40 2380 table SampleArray4_117_left;
#X obj 220 2400 table SampleArray4_118_right;
#X obj 40 2400 table SampleArray4_118_left;
#X obj 220 2420 table SampleArray4_119_right;
#X obj 40 2420 table SampleArray4_119_left;
#X obj 220 2440 table SampleArray4_120_right;
#X obj 40 2440 table SampleArray4_120_left;
#X obj 220 2460 table SampleArray4_121_right;
#X obj 40 2460 table SampleArray4_121_left;
#X obj 220 2480 table SampleArray4_122_right;
#X obj 40 2480 table SampleArray4_122_left;
#X obj 220 2500 table SampleArray4_123_right;
#X obj 40 2500 table SampleArray4_123_left;
#X obj 220 2520 table SampleArray4_124_right;
#X obj 40 2520 table SampleArray4_124_left;
#X obj 220 2540 table SampleArray4_125_right;
#X obj 40 2540 table SampleArray4_125_left;
#X obj 220 2560 table SampleArray4_126_right;
#X obj 40 2560 table SampleArray4_126_left;
#X obj 220 2580 table SampleArray4_127_right;
#X obj 40 2580 table SampleArray4_127_left;
#X obj 220 2600 table SampleArray4_128_right;
#X obj 40 2600 table SampleArray4_128_left;
#X obj 220 2620 table SampleArray4_129_right;
#X obj 40 2620 table SampleArray4_129_left;
#X obj 220 2640 table SampleArray4_130_right;
#X obj 40 2640 table SampleArray4_130_left;
#X obj 220 2660 table SampleArray4_131_right;
#X obj 40 2660 table SampleArray4_131_left;
#X obj 220 2680 table SampleArray4_132_right;
#X obj 40 2680 table SampleArray4_132_left;
#X obj 220 2700 table SampleArray4_133_right;
#X obj 40 2700 table SampleArray4_133_left;
#X obj 220 2720 table SampleArray4_134_right;
#X obj 40 2720 table SampleArray4_134_left;
#X obj 220 2740 table SampleArray4_135_right;
#X obj 40 2740 table SampleArray4_135_left;
#X obj 220 2760 table SampleArray4_136_right;
#X obj 40 2760 table SampleArray4_136_left;
#X obj 220 2780 table SampleArray4_137_right;
#X obj 40 2780 table SampleArray4_137_left;
#X obj 220 2800 table SampleArray4_138_right;
#X obj 40 2800 table SampleArray4_138_left;
#X obj 220 2820 table SampleArray4_139_right;
#X obj 40 2820 table SampleArray4_139_left;
#X obj 220 2840 table SampleArray4_140_right;
#X obj 40 2840 table SampleArray4_140_left;
#X obj 220 2860 table SampleArray4_141_right;
#X obj 40 2860 table SampleArray4_141_left;
#X obj 220 2880 table SampleArray4_142_right;
#X obj 40 2880 table SampleArray4_142_left;
#X restore 761 81 pd Sample-Array-Subpatch4;
#N canvas 202 116 535 334 Sample-Array-Subpatch5 0;
#X obj 220 60 table SampleArray5_1_right;
#X obj 40 60 table SampleArray5_1_left;
#X obj 220 80 table SampleArray5_2_right;
#X obj 40 80 table SampleArray5_2_left;
#X obj 220 100 table SampleArray5_3_right;
#X obj 40 100 table SampleArray5_3_left;
#X obj 220 120 table SampleArray5_4_right;
#X obj 40 120 table SampleArray5_4_left;
#X obj 220 140 table SampleArray5_5_right;
#X obj 40 140 table SampleArray5_5_left;
#X obj 220 160 table SampleArray5_6_right;
#X obj 40 160 table SampleArray5_6_left;
#X obj 220 180 table SampleArray5_7_right;
#X obj 40 180 table SampleArray5_7_left;
#X obj 220 200 table SampleArray5_8_right;
#X obj 40 200 table SampleArray5_8_left;
#X obj 220 220 table SampleArray5_9_right;
#X obj 40 220 table SampleArray5_9_left;
#X obj 220 240 table SampleArray5_10_right;
#X obj 40 240 table SampleArray5_10_left;
#X obj 220 260 table SampleArray5_11_right;
#X obj 40 260 table SampleArray5_11_left;
#X obj 220 280 table SampleArray5_12_right;
#X obj 40 280 table SampleArray5_12_left;
#X obj 220 300 table SampleArray5_13_right;
#X obj 40 300 table SampleArray5_13_left;
#X obj 220 320 table SampleArray5_14_right;
#X obj 40 320 table SampleArray5_14_left;
#X obj 220 340 table SampleArray5_15_right;
#X obj 40 340 table SampleArray5_15_left;
#X obj 220 360 table SampleArray5_16_right;
#X obj 40 360 table SampleArray5_16_left;
#X obj 220 380 table SampleArray5_17_right;
#X obj 40 380 table SampleArray5_17_left;
#X obj 220 400 table SampleArray5_18_right;
#X obj 40 400 table SampleArray5_18_left;
#X obj 220 420 table SampleArray5_19_right;
#X obj 40 420 table SampleArray5_19_left;
#X obj 220 440 table SampleArray5_20_right;
#X obj 40 440 table SampleArray5_20_left;
#X obj 220 460 table SampleArray5_21_right;
#X obj 40 460 table SampleArray5_21_left;
#X obj 220 480 table SampleArray5_22_right;
#X obj 40 480 table SampleArray5_22_left;
#X obj 220 500 table SampleArray5_23_right;
#X obj 40 500 table SampleArray5_23_left;
#X obj 220 520 table SampleArray5_24_right;
#X obj 40 520 table SampleArray5_24_left;
#X obj 220 540 table SampleArray5_25_right;
#X obj 40 540 table SampleArray5_25_left;
#X obj 220 560 table SampleArray5_26_right;
#X obj 40 560 table SampleArray5_26_left;
#X obj 220 580 table SampleArray5_27_right;
#X obj 40 580 table SampleArray5_27_left;
#X obj 220 600 table SampleArray5_28_right;
#X obj 40 600 table SampleArray5_28_left;
#X obj 220 620 table SampleArray5_29_right;
#X obj 40 620 table SampleArray5_29_left;
#X obj 220 640 table SampleArray5_30_right;
#X obj 40 640 table SampleArray5_30_left;
#X obj 220 660 table SampleArray5_31_right;
#X obj 40 660 table SampleArray5_31_left;
#X obj 220 680 table SampleArray5_32_right;
#X obj 40 680 table SampleArray5_32_left;
#X obj 220 700 table SampleArray5_33_right;
#X obj 40 700 table SampleArray5_33_left;
#X obj 220 720 table SampleArray5_34_right;
#X obj 40 720 table SampleArray5_34_left;
#X obj 220 740 table SampleArray5_35_right;
#X obj 40 740 table SampleArray5_35_left;
#X obj 220 760 table SampleArray5_36_right;
#X obj 40 760 table SampleArray5_36_left;
#X obj 220 780 table SampleArray5_37_right;
#X obj 40 780 table SampleArray5_37_left;
#X obj 220 800 table SampleArray5_38_right;
#X obj 40 800 table SampleArray5_38_left;
#X obj 220 820 table SampleArray5_39_right;
#X obj 40 820 table SampleArray5_39_left;
#X obj 220 840 table SampleArray5_40_right;
#X obj 40 840 table SampleArray5_40_left;
#X obj 220 860 table SampleArray5_41_right;
#X obj 40 860 table SampleArray5_41_left;
#X obj 220 880 table SampleArray5_42_right;
#X obj 40 880 table SampleArray5_42_left;
#X obj 220 900 table SampleArray5_43_right;
#X obj 40 900 table SampleArray5_43_left;
#X obj 220 920 table SampleArray5_44_right;
#X obj 40 920 table SampleArray5_44_left;
#X obj 220 940 table SampleArray5_45_right;
#X obj 40 940 table SampleArray5_45_left;
#X obj 220 960 table SampleArray5_46_right;
#X obj 40 960 table SampleArray5_46_left;
#X obj 220 980 table SampleArray5_47_right;
#X obj 40 980 table SampleArray5_47_left;
#X obj 220 1000 table SampleArray5_48_right;
#X obj 40 1000 table SampleArray5_48_left;
#X obj 220 1020 table SampleArray5_49_right;
#X obj 40 1020 table SampleArray5_49_left;
#X obj 220 1040 table SampleArray5_50_right;
#X obj 40 1040 table SampleArray5_50_left;
#X obj 220 1060 table SampleArray5_51_right;
#X obj 40 1060 table SampleArray5_51_left;
#X obj 220 1080 table SampleArray5_52_right;
#X obj 40 1080 table SampleArray5_52_left;
#X obj 220 1100 table SampleArray5_53_right;
#X obj 40 1100 table SampleArray5_53_left;
#X obj 220 1120 table SampleArray5_54_right;
#X obj 40 1120 table SampleArray5_54_left;
#X obj 220 1140 table SampleArray5_55_right;
#X obj 40 1140 table SampleArray5_55_left;
#X obj 220 1160 table SampleArray5_56_right;
#X obj 40 1160 table SampleArray5_56_left;
#X obj 220 1180 table SampleArray5_57_right;
#X obj 40 1180 table SampleArray5_57_left;
#X obj 220 1200 table SampleArray5_58_right;
#X obj 40 1200 table SampleArray5_58_left;
#X obj 220 1220 table SampleArray5_59_right;
#X obj 40 1220 table SampleArray5_59_left;
#X obj 220 1240 table SampleArray5_60_right;
#X obj 40 1240 table SampleArray5_60_left;
#X obj 220 1260 table SampleArray5_61_right;
#X obj 40 1260 table SampleArray5_61_left;
#X obj 220 1280 table SampleArray5_62_right;
#X obj 40 1280 table SampleArray5_62_left;
#X obj 220 1300 table SampleArray5_63_right;
#X obj 40 1300 table SampleArray5_63_left;
#X obj 220 1320 table SampleArray5_64_right;
#X obj 40 1320 table SampleArray5_64_left;
#X obj 220 1340 table SampleArray5_65_right;
#X obj 40 1340 table SampleArray5_65_left;
#X obj 220 1360 table SampleArray5_66_right;
#X obj 40 1360 table SampleArray5_66_left;
#X obj 220 1380 table SampleArray5_67_right;
#X obj 40 1380 table SampleArray5_67_left;
#X obj 220 1400 table SampleArray5_68_right;
#X obj 40 1400 table SampleArray5_68_left;
#X obj 220 1420 table SampleArray5_69_right;
#X obj 40 1420 table SampleArray5_69_left;
#X obj 220 1440 table SampleArray5_70_right;
#X obj 40 1440 table SampleArray5_70_left;
#X obj 220 1460 table SampleArray5_71_right;
#X obj 40 1460 table SampleArray5_71_left;
#X obj 220 1480 table SampleArray5_72_right;
#X obj 40 1480 table SampleArray5_72_left;
#X obj 220 1500 table SampleArray5_73_right;
#X obj 40 1500 table SampleArray5_73_left;
#X obj 220 1520 table SampleArray5_74_right;
#X obj 40 1520 table SampleArray5_74_left;
#X obj 220 1540 table SampleArray5_75_right;
#X obj 40 1540 table SampleArray5_75_left;
#X obj 220 1560 table SampleArray5_76_right;
#X obj 40 1560 table SampleArray5_76_left;
#X obj 220 1580 table SampleArray5_77_right;
#X obj 40 1580 table SampleArray5_77_left;
#X obj 220 1600 table SampleArray5_78_right;
#X obj 40 1600 table SampleArray5_78_left;
#X obj 220 1620 table SampleArray5_79_right;
#X obj 40 1620 table SampleArray5_79_left;
#X obj 220 1640 table SampleArray5_80_right;
#X obj 40 1640 table SampleArray5_80_left;
#X obj 220 1660 table SampleArray5_81_right;
#X obj 40 1660 table SampleArray5_81_left;
#X obj 220 1680 table SampleArray5_82_right;
#X obj 40 1680 table SampleArray5_82_left;
#X obj 220 1700 table SampleArray5_83_right;
#X obj 40 1700 table SampleArray5_83_left;
#X obj 220 1720 table SampleArray5_84_right;
#X obj 40 1720 table SampleArray5_84_left;
#X obj 220 1740 table SampleArray5_85_right;
#X obj 40 1740 table SampleArray5_85_left;
#X obj 220 1760 table SampleArray5_86_right;
#X obj 40 1760 table SampleArray5_86_left;
#X obj 220 1780 table SampleArray5_87_right;
#X obj 40 1780 table SampleArray5_87_left;
#X obj 220 1800 table SampleArray5_88_right;
#X obj 40 1800 table SampleArray5_88_left;
#X obj 220 1820 table SampleArray5_89_right;
#X obj 40 1820 table SampleArray5_89_left;
#X obj 220 1840 table SampleArray5_90_right;
#X obj 40 1840 table SampleArray5_90_left;
#X obj 220 1860 table SampleArray5_91_right;
#X obj 40 1860 table SampleArray5_91_left;
#X obj 220 1880 table SampleArray5_92_right;
#X obj 40 1880 table SampleArray5_92_left;
#X obj 220 1900 table SampleArray5_93_right;
#X obj 40 1900 table SampleArray5_93_left;
#X obj 220 1920 table SampleArray5_94_right;
#X obj 40 1920 table SampleArray5_94_left;
#X obj 220 1940 table SampleArray5_95_right;
#X obj 40 1940 table SampleArray5_95_left;
#X restore 761 104 pd Sample-Array-Subpatch5;
#N canvas 202 116 535 334 Sample-Array-Subpatch6 0;
#X obj 220 60 table SampleArray6_1_right;
#X obj 40 60 table SampleArray6_1_left;
#X obj 220 80 table SampleArray6_2_right;
#X obj 40 80 table SampleArray6_2_left;
#X obj 220 100 table SampleArray6_3_right;
#X obj 40 100 table SampleArray6_3_left;
#X obj 220 120 table SampleArray6_4_right;
#X obj 40 120 table SampleArray6_4_left;
#X obj 220 140 table SampleArray6_5_right;
#X obj 40 140 table SampleArray6_5_left;
#X obj 220 160 table SampleArray6_6_right;
#X obj 40 160 table SampleArray6_6_left;
#X obj 220 180 table SampleArray6_7_right;
#X obj 40 180 table SampleArray6_7_left;
#X obj 220 200 table SampleArray6_8_right;
#X obj 40 200 table SampleArray6_8_left;
#X obj 220 220 table SampleArray6_9_right;
#X obj 40 220 table SampleArray6_9_left;
#X obj 220 240 table SampleArray6_10_right;
#X obj 40 240 table SampleArray6_10_left;
#X obj 220 260 table SampleArray6_11_right;
#X obj 40 260 table SampleArray6_11_left;
#X obj 220 280 table SampleArray6_12_right;
#X obj 40 280 table SampleArray6_12_left;
#X obj 220 300 table SampleArray6_13_right;
#X obj 40 300 table SampleArray6_13_left;
#X obj 220 320 table SampleArray6_14_right;
#X obj 40 320 table SampleArray6_14_left;
#X obj 220 340 table SampleArray6_15_right;
#X obj 40 340 table SampleArray6_15_left;
#X obj 220 360 table SampleArray6_16_right;
#X obj 40 360 table SampleArray6_16_left;
#X obj 220 380 table SampleArray6_17_right;
#X obj 40 380 table SampleArray6_17_left;
#X obj 220 400 table SampleArray6_18_right;
#X obj 40 400 table SampleArray6_18_left;
#X obj 220 420 table SampleArray6_19_right;
#X obj 40 420 table SampleArray6_19_left;
#X obj 220 440 table SampleArray6_20_right;
#X obj 40 440 table SampleArray6_20_left;
#X obj 220 460 table SampleArray6_21_right;
#X obj 40 460 table SampleArray6_21_left;
#X obj 220 480 table SampleArray6_22_right;
#X obj 40 480 table SampleArray6_22_left;
#X obj 220 500 table SampleArray6_23_right;
#X obj 40 500 table SampleArray6_23_left;
#X obj 220 520 table SampleArray6_24_right;
#X obj 40 520 table SampleArray6_24_left;
#X obj 220 540 table SampleArray6_25_right;
#X obj 40 540 table SampleArray6_25_left;
#X restore 761 127 pd Sample-Array-Subpatch6;
#N canvas 204 118 535 334 Sample-Array-Subpatch7 0;
#X obj 220 60 table SampleArray7_1_right;
#X obj 40 60 table SampleArray7_1_left;
#X obj 220 80 table SampleArray7_2_right;
#X obj 40 80 table SampleArray7_2_left;
#X obj 220 100 table SampleArray7_3_right;
#X obj 40 100 table SampleArray7_3_left;
#X obj 220 120 table SampleArray7_4_right;
#X obj 40 120 table SampleArray7_4_left;
#X obj 220 140 table SampleArray7_5_right;
#X obj 40 140 table SampleArray7_5_left;
#X obj 220 160 table SampleArray7_6_right;
#X obj 40 160 table SampleArray7_6_left;
#X obj 220 180 table SampleArray7_7_right;
#X obj 40 180 table SampleArray7_7_left;
#X obj 220 200 table SampleArray7_8_right;
#X obj 40 200 table SampleArray7_8_left;
#X obj 220 220 table SampleArray7_9_right;
#X obj 40 220 table SampleArray7_9_left;
#X obj 220 240 table SampleArray7_10_right;
#X obj 40 240 table SampleArray7_10_left;
#X obj 220 260 table SampleArray7_11_right;
#X obj 40 260 table SampleArray7_11_left;
#X obj 220 280 table SampleArray7_12_right;
#X obj 40 280 table SampleArray7_12_left;
#X obj 220 300 table SampleArray7_13_right;
#X obj 40 300 table SampleArray7_13_left;
#X obj 220 320 table SampleArray7_14_right;
#X obj 40 320 table SampleArray7_14_left;
#X obj 220 340 table SampleArray7_15_right;
#X obj 40 340 table SampleArray7_15_left;
#X obj 220 360 table SampleArray7_16_right;
#X obj 40 360 table SampleArray7_16_left;
#X obj 220 380 table SampleArray7_17_right;
#X obj 40 380 table SampleArray7_17_left;
#X obj 220 400 table SampleArray7_18_right;
#X obj 40 400 table SampleArray7_18_left;
#X obj 220 420 table SampleArray7_19_right;
#X obj 40 420 table SampleArray7_19_left;
#X obj 220 440 table SampleArray7_20_right;
#X obj 40 440 table SampleArray7_20_left;
#X obj 220 460 table SampleArray7_21_right;
#X obj 40 460 table SampleArray7_21_left;
#X obj 220 480 table SampleArray7_22_right;
#X obj 40 480 table SampleArray7_22_left;
#X obj 220 500 table SampleArray7_23_right;
#X obj 40 500 table SampleArray7_23_left;
#X obj 220 520 table SampleArray7_24_right;
#X obj 40 520 table SampleArray7_24_left;
#X obj 220 540 table SampleArray7_25_right;
#X obj 40 540 table SampleArray7_25_left;
#X obj 220 560 table SampleArray7_26_right;
#X obj 40 560 table SampleArray7_26_left;
#X obj 220 580 table SampleArray7_27_right;
#X obj 40 580 table SampleArray7_27_left;
#X obj 220 600 table SampleArray7_28_right;
#X obj 40 600 table SampleArray7_28_left;
#X obj 220 620 table SampleArray7_29_right;
#X obj 40 620 table SampleArray7_29_left;
#X obj 220 640 table SampleArray7_30_right;
#X obj 40 640 table SampleArray7_30_left;
#X obj 220 660 table SampleArray7_31_right;
#X obj 40 660 table SampleArray7_31_left;
#X obj 220 680 table SampleArray7_32_right;
#X obj 40 680 table SampleArray7_32_left;
#X obj 220 700 table SampleArray7_33_right;
#X obj 40 700 table SampleArray7_33_left;
#X obj 220 720 table SampleArray7_34_right;
#X obj 40 720 table SampleArray7_34_left;
#X obj 220 740 table SampleArray7_35_right;
#X obj 40 740 table SampleArray7_35_left;
#X restore 761 150 pd Sample-Array-Subpatch7;
#N canvas 202 116 622 419 Sample-Array-Subpatch8 0;
#X obj 220 60 table SampleArray8_1_right;
#X obj 40 60 table SampleArray8_1_left;
#X obj 220 80 table SampleArray8_2_right;
#X obj 40 80 table SampleArray8_2_left;
#X obj 220 100 table SampleArray8_3_right;
#X obj 40 100 table SampleArray8_3_left;
#X obj 220 120 table SampleArray8_4_right;
#X obj 40 120 table SampleArray8_4_left;
#X obj 220 140 table SampleArray8_5_right;
#X obj 40 140 table SampleArray8_5_left;
#X obj 220 160 table SampleArray8_6_right;
#X obj 40 160 table SampleArray8_6_left;
#X obj 220 180 table SampleArray8_7_right;
#X obj 40 180 table SampleArray8_7_left;
#X obj 220 200 table SampleArray8_8_right;
#X obj 40 200 table SampleArray8_8_left;
#X obj 220 220 table SampleArray8_9_right;
#X obj 40 220 table SampleArray8_9_left;
#X obj 220 240 table SampleArray8_10_right;
#X obj 40 240 table SampleArray8_10_left;
#X obj 220 260 table SampleArray8_11_right;
#X obj 40 260 table SampleArray8_11_left;
#X obj 220 280 table SampleArray8_12_right;
#X obj 40 280 table SampleArray8_12_left;
#X obj 220 300 table SampleArray8_13_right;
#X obj 40 300 table SampleArray8_13_left;
#X obj 220 320 table SampleArray8_14_right;
#X obj 40 320 table SampleArray8_14_left;
#X obj 220 340 table SampleArray8_15_right;
#X obj 40 340 table SampleArray8_15_left;
#X obj 220 360 table SampleArray8_16_right;
#X obj 40 360 table SampleArray8_16_left;
#X obj 220 380 table SampleArray8_17_right;
#X obj 40 380 table SampleArray8_17_left;
#X obj 220 400 table SampleArray8_18_right;
#X obj 40 400 table SampleArray8_18_left;
#X obj 220 420 table SampleArray8_19_right;
#X obj 40 420 table SampleArray8_19_left;
#X obj 220 440 table SampleArray8_20_right;
#X obj 40 440 table SampleArray8_20_left;
#X obj 220 460 table SampleArray8_21_right;
#X obj 40 460 table SampleArray8_21_left;
#X obj 220 480 table SampleArray8_22_right;
#X obj 40 480 table SampleArray8_22_left;
#X obj 220 500 table SampleArray8_23_right;
#X obj 40 500 table SampleArray8_23_left;
#X obj 220 520 table SampleArray8_24_right;
#X obj 40 520 table SampleArray8_24_left;
#X obj 220 540 table SampleArray8_25_right;
#X obj 40 540 table SampleArray8_25_left;
#X obj 220 560 table SampleArray8_26_right;
#X obj 40 560 table SampleArray8_26_left;
#X obj 220 580 table SampleArray8_27_right;
#X obj 40 580 table SampleArray8_27_left;
#X obj 220 600 table SampleArray8_28_right;
#X obj 40 600 table SampleArray8_28_left;
#X obj 220 620 table SampleArray8_29_right;
#X obj 40 620 table SampleArray8_29_left;
#X obj 220 640 table SampleArray8_30_right;
#X obj 40 640 table SampleArray8_30_left;
#X obj 220 660 table SampleArray8_31_right;
#X obj 40 660 table SampleArray8_31_left;
#X obj 220 680 table SampleArray8_32_right;
#X obj 40 680 table SampleArray8_32_left;
#X obj 220 700 table SampleArray8_33_right;
#X obj 40 700 table SampleArray8_33_left;
#X obj 220 720 table SampleArray8_34_right;
#X obj 40 720 table SampleArray8_34_left;
#X obj 220 740 table SampleArray8_35_right;
#X obj 40 740 table SampleArray8_35_left;
#X obj 220 760 table SampleArray8_36_right;
#X obj 40 760 table SampleArray8_36_left;
#X obj 220 780 table SampleArray8_37_right;
#X obj 40 780 table SampleArray8_37_left;
#X obj 220 800 table SampleArray8_38_right;
#X obj 40 800 table SampleArray8_38_left;
#X obj 220 820 table SampleArray8_39_right;
#X obj 40 820 table SampleArray8_39_left;
#X obj 220 840 table SampleArray8_40_right;
#X obj 40 840 table SampleArray8_40_left;
#X obj 220 860 table SampleArray8_41_right;
#X obj 40 860 table SampleArray8_41_left;
#X obj 220 880 table SampleArray8_42_right;
#X obj 40 880 table SampleArray8_42_left;
#X obj 220 900 table SampleArray8_43_right;
#X obj 40 900 table SampleArray8_43_left;
#X obj 220 920 table SampleArray8_44_right;
#X obj 40 920 table SampleArray8_44_left;
#X obj 220 940 table SampleArray8_45_right;
#X obj 40 940 table SampleArray8_45_left;
#X obj 220 960 table SampleArray8_46_right;
#X obj 40 960 table SampleArray8_46_left;
#X obj 220 980 table SampleArray8_47_right;
#X obj 40 980 table SampleArray8_47_left;
#X obj 220 1000 table SampleArray8_48_right;
#X obj 40 1000 table SampleArray8_48_left;
#X obj 220 1020 table SampleArray8_49_right;
#X obj 40 1020 table SampleArray8_49_left;
#X obj 220 1040 table SampleArray8_50_right;
#X obj 40 1040 table SampleArray8_50_left;
#X obj 220 1060 table SampleArray8_51_right;
#X obj 40 1060 table SampleArray8_51_left;
#X obj 220 1080 table SampleArray8_52_right;
#X obj 40 1080 table SampleArray8_52_left;
#X obj 220 1100 table SampleArray8_53_right;
#X obj 40 1100 table SampleArray8_53_left;
#X obj 220 1120 table SampleArray8_54_right;
#X obj 40 1120 table SampleArray8_54_left;
#X obj 220 1140 table SampleArray8_55_right;
#X obj 40 1140 table SampleArray8_55_left;
#X obj 220 1160 table SampleArray8_56_right;
#X obj 40 1160 table SampleArray8_56_left;
#X obj 220 1180 table SampleArray8_57_right;
#X obj 40 1180 table SampleArray8_57_left;
#X obj 220 1200 table SampleArray8_58_right;
#X obj 40 1200 table SampleArray8_58_left;
#X obj 220 1220 table SampleArray8_59_right;
#X obj 40 1220 table SampleArray8_59_left;
#X obj 220 1240 table SampleArray8_60_right;
#X obj 40 1240 table SampleArray8_60_left;
#X obj 220 1260 table SampleArray8_61_right;
#X obj 40 1260 table SampleArray8_61_left;
#X obj 220 1280 table SampleArray8_62_right;
#X obj 40 1280 table SampleArray8_62_left;
#X obj 220 1300 table SampleArray8_63_right;
#X obj 40 1300 table SampleArray8_63_left;
#X obj 220 1320 table SampleArray8_64_right;
#X obj 40 1320 table SampleArray8_64_left;
#X obj 220 1340 table SampleArray8_65_right;
#X obj 40 1340 table SampleArray8_65_left;
#X obj 220 1360 table SampleArray8_66_right;
#X obj 40 1360 table SampleArray8_66_left;
#X obj 220 1380 table SampleArray8_67_right;
#X obj 40 1380 table SampleArray8_67_left;
#X obj 220 1400 table SampleArray8_68_right;
#X obj 40 1400 table SampleArray8_68_left;
#X obj 220 1420 table SampleArray8_69_right;
#X obj 40 1420 table SampleArray8_69_left;
#X obj 220 1440 table SampleArray8_70_right;
#X obj 40 1440 table SampleArray8_70_left;
#X obj 220 1460 table SampleArray8_71_right;
#X obj 40 1460 table SampleArray8_71_left;
#X obj 220 1480 table SampleArray8_72_right;
#X obj 40 1480 table SampleArray8_72_left;
#X obj 220 1500 table SampleArray8_73_right;
#X obj 40 1500 table SampleArray8_73_left;
#X obj 220 1520 table SampleArray8_74_right;
#X obj 40 1520 table SampleArray8_74_left;
#X obj 220 1540 table SampleArray8_75_right;
#X obj 40 1540 table SampleArray8_75_left;
#X obj 220 1560 table SampleArray8_76_right;
#X obj 40 1560 table SampleArray8_76_left;
#X obj 220 1580 table SampleArray8_77_right;
#X obj 40 1580 table SampleArray8_77_left;
#X obj 220 1600 table SampleArray8_78_right;
#X obj 40 1600 table SampleArray8_78_left;
#X obj 220 1620 table SampleArray8_79_right;
#X obj 40 1620 table SampleArray8_79_left;
#X obj 220 1640 table SampleArray8_80_right;
#X obj 40 1640 table SampleArray8_80_left;
#X obj 220 1660 table SampleArray8_81_right;
#X obj 40 1660 table SampleArray8_81_left;
#X obj 220 1680 table SampleArray8_82_right;
#X obj 40 1680 table SampleArray8_82_left;
#X obj 220 1700 table SampleArray8_83_right;
#X obj 40 1700 table SampleArray8_83_left;
#X obj 220 1720 table SampleArray8_84_right;
#X obj 40 1720 table SampleArray8_84_left;
#X obj 220 1740 table SampleArray8_85_right;
#X obj 40 1740 table SampleArray8_85_left;
#X obj 220 1760 table SampleArray8_86_right;
#X obj 40 1760 table SampleArray8_86_left;
#X obj 220 1780 table SampleArray8_87_right;
#X obj 40 1780 table SampleArray8_87_left;
#X obj 220 1800 table SampleArray8_88_right;
#X obj 40 1800 table SampleArray8_88_left;
#X obj 220 1820 table SampleArray8_89_right;
#X obj 40 1820 table SampleArray8_89_left;
#X obj 220 1840 table SampleArray8_90_right;
#X obj 40 1840 table SampleArray8_90_left;
#X obj 220 1860 table SampleArray8_91_right;
#X obj 40 1860 table SampleArray8_91_left;
#X obj 220 1880 table SampleArray8_92_right;
#X obj 40 1880 table SampleArray8_92_left;
#X obj 220 1900 table SampleArray8_93_right;
#X obj 40 1900 table SampleArray8_93_left;
#X obj 220 1920 table SampleArray8_94_right;
#X obj 40 1920 table SampleArray8_94_left;
#X obj 220 1940 table SampleArray8_95_right;
#X obj 40 1940 table SampleArray8_95_left;
#X obj 220 1960 table SampleArray8_96_right;
#X obj 40 1960 table SampleArray8_96_left;
#X obj 220 1980 table SampleArray8_97_right;
#X obj 40 1980 table SampleArray8_97_left;
#X obj 220 2000 table SampleArray8_98_right;
#X obj 40 2000 table SampleArray8_98_left;
#X obj 220 2020 table SampleArray8_99_right;
#X obj 40 2020 table SampleArray8_99_left;
#X obj 220 2040 table SampleArray8_100_right;
#X obj 40 2040 table SampleArray8_100_left;
#X obj 220 2060 table SampleArray8_101_right;
#X obj 40 2060 table SampleArray8_101_left;
#X obj 220 2080 table SampleArray8_102_right;
#X obj 40 2080 table SampleArray8_102_left;
#X obj 220 2100 table SampleArray8_103_right;
#X obj 40 2100 table SampleArray8_103_left;
#X obj 220 2120 table SampleArray8_104_right;
#X obj 40 2120 table SampleArray8_104_left;
#X obj 220 2140 table SampleArray8_105_right;
#X obj 40 2140 table SampleArray8_105_left;
#X obj 220 2160 table SampleArray8_106_right;
#X obj 40 2160 table SampleArray8_106_left;
#X obj 220 2180 table SampleArray8_107_right;
#X obj 40 2180 table SampleArray8_107_left;
#X obj 220 2200 table SampleArray8_108_right;
#X obj 40 2200 table SampleArray8_108_left;
#X obj 220 2220 table SampleArray8_109_right;
#X obj 40 2220 table SampleArray8_109_left;
#X obj 220 2240 table SampleArray8_110_right;
#X obj 40 2240 table SampleArray8_110_left;
#X obj 220 2260 table SampleArray8_111_right;
#X obj 40 2260 table SampleArray8_111_left;
#X obj 220 2280 table SampleArray8_112_right;
#X obj 40 2280 table SampleArray8_112_left;
#X obj 220 2300 table SampleArray8_113_right;
#X obj 40 2300 table SampleArray8_113_left;
#X obj 220 2320 table SampleArray8_114_right;
#X obj 40 2320 table SampleArray8_114_left;
#X obj 220 2340 table SampleArray8_115_right;
#X obj 40 2340 table SampleArray8_115_left;
#X obj 220 2360 table SampleArray8_116_right;
#X obj 40 2360 table SampleArray8_116_left;
#X obj 220 2380 table SampleArray8_117_right;
#X obj 40 2380 table SampleArray8_117_left;
#X obj 220 2400 table SampleArray8_118_right;
#X obj 40 2400 table SampleArray8_118_left;
#X obj 220 2420 table SampleArray8_119_right;
#X obj 40 2420 table SampleArray8_119_left;
#X obj 220 2440 table SampleArray8_120_right;
#X obj 40 2440 table SampleArray8_120_left;
#X obj 220 2460 table SampleArray8_121_right;
#X obj 40 2460 table SampleArray8_121_left;
#X obj 220 2480 table SampleArray8_122_right;
#X obj 40 2480 table SampleArray8_122_left;
#X obj 220 2500 table SampleArray8_123_right;
#X obj 40 2500 table SampleArray8_123_left;
#X obj 220 2520 table SampleArray8_124_right;
#X obj 40 2520 table SampleArray8_124_left;
#X obj 220 2540 table SampleArray8_125_right;
#X obj 40 2540 table SampleArray8_125_left;
#X obj 220 2560 table SampleArray8_126_right;
#X obj 40 2560 table SampleArray8_126_left;
#X obj 220 2580 table SampleArray8_127_right;
#X obj 40 2580 table SampleArray8_127_left;
#X obj 220 2600 table SampleArray8_128_right;
#X obj 40 2600 table SampleArray8_128_left;
#X obj 220 2620 table SampleArray8_129_right;
#X obj 40 2620 table SampleArray8_129_left;
#X obj 220 2640 table SampleArray8_130_right;
#X obj 40 2640 table SampleArray8_130_left;
#X obj 220 2660 table SampleArray8_131_right;
#X obj 40 2660 table SampleArray8_131_left;
#X obj 220 2680 table SampleArray8_132_right;
#X obj 40 2680 table SampleArray8_132_left;
#X obj 220 2700 table SampleArray8_133_right;
#X obj 40 2700 table SampleArray8_133_left;
#X obj 220 2720 table SampleArray8_134_right;
#X obj 40 2720 table SampleArray8_134_left;
#X obj 220 2740 table SampleArray8_135_right;
#X obj 40 2740 table SampleArray8_135_left;
#X obj 220 2760 table SampleArray8_136_right;
#X obj 40 2760 table SampleArray8_136_left;
#X obj 220 2780 table SampleArray8_137_right;
#X obj 40 2780 table SampleArray8_137_left;
#X obj 220 2800 table SampleArray8_138_right;
#X obj 40 2800 table SampleArray8_138_left;
#X obj 220 2820 table SampleArray8_139_right;
#X obj 40 2820 table SampleArray8_139_left;
#X obj 220 2840 table SampleArray8_140_right;
#X obj 40 2840 table SampleArray8_140_left;
#X obj 220 2860 table SampleArray8_141_right;
#X obj 40 2860 table SampleArray8_141_left;
#X obj 220 2880 table SampleArray8_142_right;
#X obj 40 2880 table SampleArray8_142_left;
#X restore 761 172 pd Sample-Array-Subpatch8;
#X msg 361 144 \; \$1 clear;
#X msg 334 77 symbol pd-Sample-Array-Subpatch\$1;
#X text 439 151 delete all arrays for \; the audio files;
#X msg 55 248 SamplePack\$1;
#X obj 100 270 r FolderWithAudioFiles;
#X obj 55 293 pack s s;
#X msg 55 322 symbol \$2\$1/*.wav;
#X obj 40 374 folder_list;
#X text 256 288 /home/pi/Documents/RaspiSamplePlayer/SamplePack1/*.wav
/home/pi/Documents/RaspiSamplePlayer/SamplePack2/*.wav;
#X text 255 311 /home/pi/Documents/RaspiSamplePlayer/SamplePack3/*.wav
;
#X text 255 323 /home/pi/Documents/RaspiSamplePlayer/SamplePack4/*.wav
...and so on until 8;
#X obj 85 171 s localListBang;
#X obj 61 408 r localListBang;
#X obj 40 60 t b f f b b f;
#X obj 70 206 s currentSamplePackIndex;
#X obj 85 564 r currentSamplePackIndex;
#X obj 40 610 pack f s;
#X msg 85 586 symbol SampleArray\$1;
#X msg 217 809 symbol \$2_\$1_right;
#X text 283 826 generate name of Array for each audio file! \; E.G.
SampleArray1_3_right (1=SamplePack \, 3=audio file);
#X obj 133 1117 s;
#X obj 334 110 t s s;
#X obj 334 189 s currentSubpatchName;
#X obj 148 1095 r currentSubpatchName;
#X obj 217 848 t b b b a;
#X obj 217 1022 pack f f s s;
#X msg 251 885 symbol table;
#X obj 291 951 f;
#X obj 321 951 + 20;
#X obj 306 929 r yStart;
#X obj 217 971 f;
#X obj 232 928 r xStart;
#X msg 217 1047 obj \$1 \$2 \$3 \$4;
#X obj 232 949 + 180;
#X obj 40 863 t b b b a;
#X obj 40 1037 pack f f s s;
#X msg 74 900 symbol table;
#X obj 114 966 f;
#X obj 144 966 + 20;
#X obj 129 944 r yStart;
#X obj 40 986 f;
#X obj 55 943 r xStart;
#X msg 40 1062 obj \$1 \$2 \$3 \$4;
#X msg 40 824 symbol \$2_\$1_left;
#X text 391 932 create empty tables \; for the audio files \; in the
sub patches;
#X text 279 1085 change the name of the subpatch \; to send the table
to;
#X text 757 277 In this sub patch we create empty tables \; for each
audio file inside the above visible \; subpatches!;
#X obj 103 347 t s s;
#X obj 130 372 s currentFolderName;
#X text 266 375 send current folder name . e.g. /home/pi/Documents/RaspiSamplePlayer/SamplePack3/*.wav
;
#X obj 40 672 t a a;
#X obj 643 633 route 1 2 3 4 5 6 7 8;
#X obj 688 546 r currentSamplePackIndex;
#X obj 643 571 pack f f;
#X msg 643 602 \$2 \$1;
#X obj 643 840 s AmountOfAudioFilesInSP1;
#X obj 658 815 s AmountOfAudioFilesInSP2;
#X obj 673 792 s AmountOfAudioFilesInSP3;
#X obj 689 765 s AmountOfAudioFilesInSP4;
#X obj 704 741 s AmountOfAudioFilesInSP5;
#X obj 719 712 s AmountOfAudioFilesInSP6;
#X obj 735 690 s AmountOfAudioFilesInSP7;
#X obj 750 661 s AmountOfAudioFilesInSP8;
#X text 786 578 depending on the current Sample Pack that \; we are
initializing \, we send away the number of audio files \; for this
particular Sample Pack \, so that \; we can use this number in the
different \; "SelectAndPlayEngines";
#X text 240 239 Grab the main folder specified in the main patch (/home/pi/Documents/RaspiSamplePlayer/)
and attach \; the "/SamplePackX" folders \, so that the folder list
\; object can grab the audio files from them:;
#X connect 0 0 11 0;
#X connect 1 0 3 0;
#X connect 1 0 38 0;
#X connect 1 0 75 0;
#X connect 4 0 9 0;
#X connect 5 0 8 0;
#X connect 11 0 0 1;
#X connect 11 0 1 0;
#X connect 13 0 35 0;
#X connect 23 0 43 0;
#X connect 25 0 27 0;
#X connect 26 0 27 1;
#X connect 27 0 28 0;
#X connect 28 0 69 0;
#X connect 29 0 0 0;
#X connect 34 0 0 1;
#X connect 35 0 29 0;
#X connect 35 1 25 0;
#X connect 35 2 36 0;
#X connect 35 3 33 0;
#X connect 35 4 5 0;
#X connect 35 4 4 0;
#X connect 35 5 23 0;
#X connect 37 0 39 0;
#X connect 38 0 72 0;
#X connect 39 0 38 1;
#X connect 40 0 46 0;
#X connect 43 0 44 0;
#X connect 43 1 22 0;
#X connect 45 0 42 1;
#X connect 46 0 52 0;
#X connect 46 1 49 0;
#X connect 46 2 48 0;
#X connect 46 3 47 3;
#X connect 47 0 54 0;
#X connect 48 0 47 2;
#X connect 49 0 50 0;
#X connect 49 0 47 1;
#X connect 50 0 49 1;
#X connect 51 0 49 1;
#X connect 52 0 47 0;
#X connect 53 0 55 0;
#X connect 54 0 42 0;
#X connect 55 0 52 1;
#X connect 56 0 62 0;
#X connect 56 1 59 0;
#X connect 56 2 58 0;
#X connect 56 3 57 3;
#X connect 57 0 64 0;
#X connect 58 0 57 2;
#X connect 59 0 60 0;
#X connect 59 0 57 1;
#X connect 60 0 59 1;
#X connect 61 0 59 1;
#X connect 62 0 57 0;
#X connect 63 0 62 1;
#X connect 64 0 42 0;
#X connect 65 0 56 0;
#X connect 69 0 29 1;
#X connect 69 1 70 0;
#X connect 72 0 65 0;
#X connect 72 1 40 0;
#X connect 73 0 77 0;
#X connect 73 1 78 0;
#X connect 73 2 79 0;
#X connect 73 3 80 0;
#X connect 73 4 81 0;
#X connect 73 5 82 0;
#X connect 73 6 83 0;
#X connect 73 7 84 0;
#X connect 74 0 75 1;
#X connect 75 0 76 0;
#X connect 76 0 73 0;
#X restore 883 310 pd My_RSP_TableCreator;
#N canvas 165 121 1063 627 My_RSP_TableReader 0;
#X obj -455 78 t b b;
#X obj -428 105 1;
#X obj -428 133 s sampleCount;
#X text -393 104 counting the samples starting at 1;
#X msg -455 1030 \$1;
#X obj -455 1208 pack s s;
#X obj -455 1287 soundfiler;
#X obj -455 23 inlet;
#X obj -455 51 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -455 209 this spits out the sample names one after another
as a symbol;
#X text -350 1197 pack the sample name and the corresponding table
name into a list \, so that the message "read" can handle them as $
variables;
#X obj -455 1315 outlet numberOfSamples;
#X text -576 1029 \$1 = the different \; sample names \; one after
another;
#X msg -401 480 read \$1;
#X obj -401 508 soundfile_info;
#X text -295 496 get header data of each audio file as a list;
#X text -303 946 grab only the sample rate of each audio file;
#X obj -401 973 s sampleRateOfCurrentSample;
#X obj -455 182 folder_list;
#X obj -392 158 r currentFolderName;
#X obj -404 1000 r sampleCount;
#X obj -419 1030 f;
#X obj -390 1030 + 1;
#X text -365 1029 count the amount of samples;
#X text -363 1044 init the counter with 1;
#X obj -419 1130 pack f s;
#X obj -374 1075 r currentSamplePackIndex;
#X msg -374 1103 symbol SampleArray\$1;
#X msg -419 1158 symbol \$2_\$1;
#X text -110 22 this patch looks into the \; specified folder and outputs:
\; 1 outlet: number of samples of \; each audio file one after another
\; It also sends the sample rate \; of each audio file one after \;
another so that the next sub patch \; "ValueCalculationForPlayingAudio"
\; receives the correct sample rate for \; the calculations according
to each \; audio file.;
#X obj -401 944 list split 1;
#X obj -455 246 t a b a a;
#N canvas 0 50 718 628 My_RSP_filenameExtraction 0;
#X obj 21 70 s2l /;
#X obj 88 127 list length;
#X obj 21 94 t a a;
#X text 132 184 list index of samplename.wav;
#X floatatom 88 184 5 0 0 0 - - -;
#X obj 21 208 list split;
#X obj 88 156 - 1;
#X obj 21 235 s2l .;
#X msg 21 265 \$1;
#X obj 21 36 inlet filenameAndDirectory;
#X text 257 38 13th February 2019 This subpatch extracts the filename
of an audio sample \; when it is surrounded by its path. The input
should be a symbol or atom containing the path \; to the audio file.
E.g: \; INPUT: /home/pi/samplename.wav \; UUTPUT: samplename;
#X obj 21 294 outlet filename;
#X connect 0 0 2 0;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 2 1 1 0;
#X connect 4 0 5 1;
#X connect 5 1 7 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 9 0 0 0;
#X restore -368 301 pd My_RSP_filenameExtraction;
#X obj -368 330 list prepend;
#X obj -368 432 s;
#X obj -263 347 r currentSamplePackIndex;
#X msg -236 408 symbol listFileNames\$1;
#X obj -368 351 t a;
#X obj -263 368 t b f;
#X text -190 300 extract sample names from path;
#X text 10 295 send lists of sample names to each of the eight \; different
SelectAndPlay-Subpatches. \; SelectAndPlayEngine1 receives a list with
the sample names \; in /home/pi..../SamplePack1. \; SelectAndPlayEngine2
receives a list with the sample names \; in home/pi/..../SamplePack2
and so on...;
#X text -220 372 the bang resets the list-prepend-object. \; By this
we get a new list when the currentSampleIndex \; changes.;
#X msg -455 1236 read -resize -maxsize 32768 \$1 \$2_left \$2_right
;
#X obj -401 530 t l l;
#X msg -369 567 \$3 \$1;
#X text -316 560 \$3 = length of wav-file in samples \; \$1 = sample
rate of wav-file;
#X obj -369 592 t l l;
#X msg -326 616 \$2;
#X msg -369 616 \$1;
#X obj -369 648 /;
#X obj -369 736 list prepend;
#X obj -369 838 s;
#X obj -264 753 r currentSamplePackIndex;
#X obj -369 757 t a;
#X obj -264 774 t b f;
#X msg -237 814 symbol listFileLengthsInSeconds\$1;
#X text -289 618 length of file in seconds = length in samples/sample
rate;
#X text -217 774 create a list with the sample lengths in seconds for
each of the eight tracks and send it there.;
#X connect 0 0 18 0;
#X connect 0 1 1 0;
#X connect 1 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 42 0;
#X connect 6 0 11 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 43 0;
#X connect 18 0 31 0;
#X connect 19 0 18 1;
#X connect 20 0 21 1;
#X connect 21 0 22 0;
#X connect 21 0 25 0;
#X connect 22 0 21 1;
#X connect 25 0 28 0;
#X connect 26 0 27 0;
#X connect 27 0 25 1;
#X connect 28 0 5 1;
#X connect 30 0 17 0;
#X connect 31 0 4 0;
#X connect 31 1 21 0;
#X connect 31 2 13 0;
#X connect 31 3 32 0;
#X connect 32 0 33 0;
#X connect 33 0 37 0;
#X connect 35 0 38 0;
#X connect 36 0 34 1;
#X connect 37 0 33 1;
#X connect 37 0 34 0;
#X connect 38 0 33 1;
#X connect 38 1 36 0;
#X connect 42 0 6 0;
#X connect 43 0 30 0;
#X connect 43 1 44 0;
#X connect 44 0 46 0;
#X connect 46 0 48 0;
#X connect 46 1 47 0;
#X connect 47 0 49 1;
#X connect 48 0 49 0;
#X connect 49 0 50 0;
#X connect 50 0 53 0;
#X connect 52 0 54 0;
#X connect 53 0 50 1;
#X connect 53 0 51 0;
#X connect 54 0 50 1;
#X connect 54 1 55 0;
#X connect 55 0 51 1;
#X restore 863 346 pd My_RSP_TableReader;
#X text 885 330 read samples from disk into tables;
#N canvas 135 97 962 563 My_RSP_ValueCalculationForPlayingAudio 0;
#X obj 21 19 inlet numberOfSamplesOfAllAudioFiles;
#X obj 66 69 r currentSamplePackIndex;
#X obj 21 96 pack f f;
#X msg 21 127 \$2 \$1;
#X obj 21 177 route 1 2 3 4 5 6 7 8;
#N canvas 455 313 719 406 My_RSP_ValueCalc1 0;
#X obj 42 42 inlet first;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 313 s listValuesForPhasor1;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 2 0 8 1;
#X connect 2 0 14 0;
#X connect 3 0 8 1;
#X connect 4 0 1 0;
#X connect 4 1 9 0;
#X connect 5 0 9 1;
#X connect 5 0 15 0;
#X connect 6 0 9 1;
#X connect 8 0 2 0;
#X connect 9 0 5 0;
#X connect 12 0 1 1;
#X restore 21 404 pd My_RSP_ValueCalc1;
#N canvas 455 236 719 406 My_RSP_ValueCalc2 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 42 inlet second;
#X obj 42 313 s listValuesForPhasor2;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile2;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 14 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 15 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 13 0 3 0;
#X restore 36 378 pd My_RSP_ValueCalc2;
#N canvas 454 235 719 406 My_RSP_ValueCalc3 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 42 inlet third;
#X obj 42 313 s listValuesForPhasor3;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile3;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 14 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 15 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 13 0 3 0;
#X restore 51 353 pd My_RSP_ValueCalc3;
#N canvas 453 234 719 406 My_RSP_ValueCalc4 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 42 inlet fourth;
#X obj 42 313 s listValuesForPhasor4;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile4;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 14 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 15 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 13 0 3 0;
#X restore 67 328 pd My_RSP_ValueCalc4;
#N canvas 451 232 719 406 My_RSP_ValueCalc5 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 42 inlet fifth;
#X obj 42 313 s listValuesForPhasor5;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile5;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 14 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 15 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 13 0 3 0;
#X restore 82 304 pd My_RSP_ValueCalc5;
#N canvas 450 231 719 406 My_RSP_ValueCalc6 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 313 s listValuesForPhasor6;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile6;
#X obj 42 42 inlet sixth;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 13 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 14 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 15 0 3 0;
#X restore 97 281 pd My_RSP_ValueCalc6;
#N canvas 449 230 719 406 My_RSP_ValueCalc7 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 42 inlet seventh;
#X obj 42 313 s listValuesForPhasor7;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile7;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 14 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 15 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 13 0 3 0;
#X restore 113 259 pd My_RSP_ValueCalc7;
#N canvas 448 229 719 406 My_RSP_ValueCalc8 0;
#X obj 42 158 expr $f2 / $f1;
#X obj 42 241 t a;
#X obj 63 188 r initBang;
#X obj 42 78 t f f;
#X obj 380 147 t a;
#X obj 449 102 r initBang;
#X text 429 144 list = number of Samples of each Sample;
#X obj 42 214 list prepend;
#X obj 380 126 list prepend;
#X text 129 215 We put all calculation results \; into a list \, so
we can grab them \; with a index out of the list \; when we want to
choose which \; audio file should be played;
#X text 395 237 Here we also put the number of samples of each \; audio
file into a list \, so we can also grab this \; value when choosing
the audio file that should \; be played.;
#X obj 123 134 r sampleRateOfCurrentSample;
#X text 140 153 sampleRate/NumberOfSamplesOfAudioFile \; = Rate for
phasor object;
#X obj 42 42 inlet eigth;
#X obj 42 313 s listValuesForPhasor8;
#X obj 380 311 s listNumberOfSamplesOfEachAudioFile8;
#X connect 0 0 7 0;
#X connect 1 0 7 1;
#X connect 1 0 14 0;
#X connect 2 0 7 1;
#X connect 3 0 0 0;
#X connect 3 1 8 0;
#X connect 4 0 8 1;
#X connect 4 0 15 0;
#X connect 5 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 11 0 0 1;
#X connect 13 0 3 0;
#X restore 128 235 pd My_RSP_ValueCalc8;
#X text 324 16 13th April 2018 In this patch we \; calculate the values
that we \; need for the phasor object \; and the audio multiplication
object \; in order to play our samples with \; the tabread4~ interpolation
object. \; These values are calculated and put into \; sixteen different
lists (2 lists for each of \; the 8 Sample Packs). The eight different
lists \; are sent away so we can use them \; seperately in the different
"SelectAndPlayEngines".;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 4 2 7 0;
#X connect 4 3 8 0;
#X connect 4 4 9 0;
#X connect 4 5 10 0;
#X connect 4 6 11 0;
#X connect 4 7 12 0;
#X restore 863 405 pd My_RSP_ValueCalculationForPlayingAudio;
#X obj 775 605 s startMetroBang;
#X obj 872 136 s FolderWithAudioFiles;
#X text 887 294 create empty tables and send number of audio files
;
#X text 871 366 number of Samples of each Sample one after another
\; for value calculation needed by tabread4~ in the \; "SelectAndPlayEngines"
;
#N canvas 387 111 450 403 EightInitBangs 0;
#X text 225 46 19th April \; In this patch we send eight bangs \; to
the eight "SelectAndPlayEngines" to initialize the index generation
\; within them.;
#X obj 45 54 inlet SPIndex;
#X floatatom 45 93 5 0 0 0 - - -;
#X obj 45 204 s;
#X text 215 169 create send-variable initIndexBang1 \; initIndexBang2
\; initIndexBang3.......;
#X obj 43 246 r initIndexBang1;
#X obj 43 274 print i1;
#X obj 103 266 r initIndexBang2;
#X obj 103 294 print i2;
#X obj 163 296 r initIndexBang3;
#X obj 163 324 print i3;
#X obj 233 316 r initIndexBang4;
#X obj 233 344 print i4;
#X msg 72 176 symbol initIndexBang\$1;
#X obj 45 139 t b f;
#X text 77 206 send away the bang;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 9 0 10 0;
#X connect 11 0 12 0;
#X connect 13 0 3 1;
#X connect 14 0 3 0;
#X connect 14 1 13 0;
#X restore 844 435 pd EightInitBangs;
#X obj 886 71 s initBang;
#X text 979 86 specify the folder above the sample pack folders;
#X text 891 161 start counting at 1...;
#X text 888 188 ...and iterate through \; 8 sample packs;
#X text 920 274 this is executed eight times...;
#X text 1137 445 turn audio on;
#X obj 206 521 s fire3;
#X obj 204 381 s sD3;
#X obj 244 381 s sU3;
#X obj 294 381 s sD4;
#X obj 334 381 s sU4;
#X obj 297 520 s fire4;
#X obj 389 520 s fire5;
#X msg 1139 498 \; pd dsp 1;
#X obj 384 383 s sD5;
#X obj 424 383 s sU5;
#X obj 474 384 s sD6;
#X obj 514 384 s sU6;
#X obj 479 520 s fire6;
#X obj 675 24 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407 -1
-1;
#X obj 675 70 s stopAll;
#X obj 675 -1 r extraPush;
#X obj 568 383 s sD7;
#X obj 608 383 s sU7;
#X obj 571 520 s fire7;
#X obj 658 383 s sD8;
#X obj 698 383 s sU8;
#X obj 662 520 s fire8;
#X obj 662 432 bng 80 400 50 0 empty empty empty 17 7 0 10 -4034 -1
-1;
#X obj 571 432 bng 80 400 50 0 empty empty empty 17 7 0 10 -257985
-1 -1;
#X obj 479 432 bng 80 400 50 0 empty empty empty 17 7 0 10 -258113
-262144 -1;
#X obj 389 432 bng 80 400 50 0 empty empty empty 17 7 0 10 -4160 -262144
-1;
#X obj 297 433 bng 80 400 50 0 empty empty empty 17 7 0 10 -4034 -1
-1;
#X obj 206 433 bng 80 400 50 0 empty empty empty 17 7 0 10 -257985
-1 -1;
#X obj 114 433 bng 80 400 50 0 empty empty empty 17 7 0 10 -258113
-262144 -1;
#X obj 24 433 bng 80 400 50 0 empty empty empty 17 7 0 10 -4160 -262144
-1;
#N canvas 0 85 1280 627 My_RSP_EightPlayAndSelectEngines 0;
#N canvas 94 95 1075 551 My_RSP_SelectAndPlayEngine1 0;
#X obj 8 21 inlet playButton1;
#X obj 267 9 inlet selectUp1;
#X obj 380 9 inlet selectDown1;
#N canvas 96 74 1013 640 My_RSP_IndexGenerator1 0;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 318 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 230 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 269 406 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 144 414 r sP1Index;
#X obj 229 433 t b f;
#X obj 229 454 f;
#X obj 229 480 spigot;
#X obj 284 437 r sP1Index;
#X obj 320 166 r AmountOfAudioFilesInSP1;
#X obj 305 188 f;
#X floatatom 342 189 5 0 0 0 - - -;
#X obj 163 62 inlet decreaseIndexSP1;
#X obj 129 36 inlet increaseIndexSP1;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes;
#X obj 129 549 outlet LastSampleReachedSP1;
#X obj 229 523 outlet FirstSampleReachedSP1;
#X obj 259 351 s sP1Index;
#X obj 322 392 outlet SP1_Index;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X obj 305 212 s maxNoOfSamples1;
#X obj 193 152 r maxNoOfSamples1;
#X obj 144 325 r maxNoOfSamples1;
#X obj 171 230 r maxNoOfSamples1;
#X obj 372 295 r maxNoOfSamples1;
#X text 11 104 increase \; SamplePack1Index;
#X text 175 108 decrease \; SamplePack1Index;
#X text 437 394 output the index;
#X text 414 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X connect 0 0 3 0;
#X connect 0 1 9 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 3 0 13 0;
#X connect 3 0 14 0;
#X connect 4 0 3 1;
#X connect 5 0 4 0;
#X connect 5 0 32 0;
#X connect 5 0 33 0;
#X connect 6 0 25 0;
#X connect 6 1 8 0;
#X connect 7 0 6 0;
#X connect 8 0 5 1;
#X connect 9 0 3 0;
#X connect 10 0 0 0;
#X connect 11 0 10 1;
#X connect 12 0 15 0;
#X connect 12 0 20 0;
#X connect 13 0 12 0;
#X connect 14 0 18 0;
#X connect 16 0 30 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X connect 18 1 16 1;
#X connect 19 0 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 31 0;
#X connect 23 0 21 1;
#X connect 24 0 25 1;
#X connect 24 0 26 0;
#X connect 25 0 1 0;
#X connect 25 0 35 0;
#X connect 27 0 10 0;
#X connect 28 0 2 0;
#X connect 29 0 7 0;
#X connect 36 0 11 0;
#X connect 37 0 14 1;
#X connect 38 0 9 1;
#X connect 39 0 5 2;
#X restore 267 143 pd My_RSP_IndexGenerator1;
#X obj 275 197 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 346 172 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 414 167 5 0 0 0 - - -;
#X text 448 149 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 466 832 AUDIO OUTPUT;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack1 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X obj 414 111 r initIndexBang1;
#X obj 275 95 r indexInit;
#X text 273 46 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 225 239 pd My_RSP_LedAlert;
#X obj 267 217 print SP1>>Last Sample Reached;
#X obj 340 192 print SP1>>First Sample Reached;
#X obj 469 287 f;
#X obj 469 249 r updateZlnthObjectsBang1;
#X obj 414 311 s currentSelectedIndexSP1;
#X text 503 288 store current selected index;
#X text 574 303 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 414 249 t f f;
#X obj 42 186 s pb1_1;
#X obj 25 211 s pb1_2;
#X obj 8 240 s pb1_3;
#X obj 602 732 *~;
#X msg 545 479 set \$1_right;
#X obj 454 417 f;
#X msg 454 478 set \$1_left;
#X obj 453 731 *~;
#X floatatom 484 416 5 0 0 0 - - -;
#X obj 545 549 tabplay~ \$1;
#X obj 454 549 tabplay~ \$1;
#X text 219 565 "open sine1.wav 32768";
#X obj 164 552 symbol;
#X msg 164 590 open \$1.wav 32768;
#X obj 242 429 r FolderWithAudioFiles;
#X obj 197 463 pack s s;
#X obj 197 507 pack s;
#X msg 184 663 1;
#X obj 164 695 readsf~ 2;
#X obj 184 635 bang;
#X text 640 484 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 484 370 r pb1_1;
#X obj 164 370 r pb1_3;
#X obj 557 514 r pb1_2;
#X obj 197 397 r currentlyPlayingSampleNameSP1;
#X msg 197 484 \$2SamplePack1/\$1;
#X obj 484 394 r indexCorrectionForLoopingSP1;
#X obj 454 453 makefilename SampleArray1_%d;
#X obj 468 695 r vol1;
#X text 517 691 adjust volume \; (from fader 1);
#X obj 453 751 outlet~ toDacLeft1;
#X obj 602 754 outlet~ toDacRight1;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync1 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb1_0;
#X obj 412 180 r listFileLengthsInSeconds1;
#X obj 435 217 r currentSelectedIndexSP1;
#N canvas 1 102 1015 566 My_RSP_Looping_Index_Handler1 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X obj 146 132 r currentSelectedIndexSP1;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 146 209 r lastIndexPlayedSP1;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 170 499 s indexCorrectionForLoopingSP1;
#X obj 131 356 moses 1;
#X text 243 233 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 176 478 5 0 0 0 - - -;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 150 519 s loopingFire1;
#X obj 270 465 print SP1: loopingFire1 playing currently selected sample
;
#X obj 285 419 r currentSelectedIndexSP1;
#X obj 270 443 f;
#X floatatom 297 443 5 0 0 0 - - -;
#X obj 131 541 print SP1: loopingFire1 with index correction to;
#X obj 131 31 inlet currentSampleHasReachedItsEnd1;
#X text 436 242 comment;
#X obj 170 407 t b b;
#X obj 170 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 442 t f b f;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 1 1;
#X connect 4 0 6 1;
#X connect 5 0 8 0;
#X connect 6 0 1 0;
#X connect 7 0 11 0;
#X connect 8 0 3 0;
#X connect 8 1 9 1;
#X connect 9 0 25 0;
#X connect 11 0 14 0;
#X connect 11 1 24 0;
#X connect 14 0 9 0;
#X connect 17 0 18 1;
#X connect 17 0 19 0;
#X connect 18 0 16 0;
#X connect 21 0 6 0;
#X connect 23 0 18 0;
#X connect 23 1 15 0;
#X connect 24 0 23 0;
#X connect 25 0 20 0;
#X connect 25 1 15 0;
#X connect 25 2 13 0;
#X connect 25 2 10 0;
#X restore 262 456 pd My_RSP_Looping_Index_Handler1;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync1;
#X obj 8 130 t b b b b;
#X obj 59 166 s pb1_0;
#X connect 0 0 55 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 3 0 13 0;
#X connect 3 0 14 0;
#X connect 3 1 5 0;
#X connect 3 1 13 0;
#X connect 3 1 15 0;
#X connect 3 2 6 0;
#X connect 6 0 21 0;
#X connect 10 0 3 2;
#X connect 11 0 3 0;
#X connect 16 0 27 1;
#X connect 17 0 16 0;
#X connect 21 0 18 0;
#X connect 21 1 16 1;
#X connect 25 0 53 0;
#X connect 26 0 31 0;
#X connect 27 0 49 0;
#X connect 28 0 32 0;
#X connect 29 0 52 0;
#X connect 31 0 25 0;
#X connect 31 1 41 0;
#X connect 32 0 29 0;
#X connect 34 0 35 0;
#X connect 35 0 40 0;
#X connect 36 0 37 1;
#X connect 37 0 47 0;
#X connect 38 0 34 1;
#X connect 39 0 40 0;
#X connect 40 0 29 0;
#X connect 40 1 25 0;
#X connect 41 0 39 0;
#X connect 43 0 27 0;
#X connect 44 0 34 0;
#X connect 45 0 31 0;
#X connect 45 0 32 0;
#X connect 46 0 37 0;
#X connect 47 0 38 0;
#X connect 48 0 30 0;
#X connect 48 0 27 1;
#X connect 49 0 26 0;
#X connect 49 0 28 0;
#X connect 50 0 29 1;
#X connect 50 0 25 1;
#X connect 55 0 24 0;
#X connect 55 1 23 0;
#X connect 55 2 22 0;
#X connect 55 3 56 0;
#X restore -181 462 pd My_RSP_SelectAndPlayEngine1;
#N canvas 346 131 810 423 My_RSP_TimeHandler1 0;
#X obj 50 37 inlet myMetronomeFirstHit1;
#X obj 89 335 outlet myPermissionToPlay1;
#X obj 239 39 inlet myHumanDesiresPlayingSaver;
#X msg 65 145 1;
#X obj 50 198 f;
#X msg 81 198 0;
#X obj 50 224 moses 1;
#X text 486 156 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X obj 81 175 r initBang;
#X obj 462 38 inlet myCurrentSampleDesiresLooping;
#X text 486 230 The third inlet is for looping the sample that is currently
played.;
#X text 94 286 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#X obj 239 60 t b b;
#X obj 462 59 t b b;
#N canvas 0 50 601 288 My_RSP_PlaywishDistinguisher1 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 16;
#X obj 54 175 t b b;
#X obj 54 44 inlet myReadyToPlay1;
#X obj 188 44 inlet myHumanIdentifier1;
#X obj 360 43 inlet myLoopingIdentifier1;
#X obj 246 216 s currentPlayingSampleNameBang1;
#X obj 54 228 outlet myPlaybackBang1;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 6 0 0 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X restore 89 265 pd My_RSP_PlaywishDistinguisher1;
#X connect 0 0 4 0;
#X connect 2 0 12 0;
#X connect 3 0 4 1;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 1 14 0;
#X connect 8 0 5 0;
#X connect 9 0 13 0;
#X connect 12 0 3 0;
#X connect 12 1 14 1;
#X connect 13 0 3 0;
#X connect 13 1 14 2;
#X connect 14 0 1 0;
#X restore -181 376 pd My_RSP_TimeHandler1;
#X obj -117 129 r fire1;
#X obj -93 438 r sU1;
#X obj -4 437 r sD1;
#X obj -181 16 inlet metronomeInlet1;
#X obj 392 29 inlet metronomeInlet2;
#N canvas 455 295 775 375 My_RSP_TimeHandler2 0;
#X msg 65 108 1;
#X obj 50 151 f;
#X msg 79 150 0;
#X obj 50 177 moses 1;
#X text 466 110 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X obj 239 39 inlet myHumanDesiresPlayingSaver2;
#X obj 50 37 inlet myMetronomeFirstHit1_2;
#X obj 89 279 outlet myPermissionToPlay2;
#X obj 79 127 r initBang;
#X obj 469 39 inlet myCurrentSampleDesiresLooping2;
#X obj 239 60 t b b;
#X obj 469 60 t b b;
#X text 96 237 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 0 50 601 288 My_RSP_PlaywishDistinguisher2 0;
#X obj 54 44 inlet myReadyToPlay2;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 19;
#X obj 54 175 t b b;
#X obj 269 231 s currentPlayingSampleNameBang2;
#X obj 54 245 outlet myPlaybackBang2;
#X obj 188 44 inlet myHumanIdentifier2;
#X obj 360 43 inlet myLoopingIdentifier2;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 2 1;
#X connect 5 0 6 0;
#X connect 5 1 8 0;
#X connect 6 0 8 0;
#X connect 6 1 7 0;
#X connect 9 0 3 0;
#X connect 10 0 4 0;
#X restore 89 213 pd My_RSP_PlaywishDistinguisher2;
#X text 466 183 The third inlet is for looping \; the sample that is
currently played.;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 13 0;
#X connect 5 0 10 0;
#X connect 6 0 1 0;
#X connect 8 0 2 0;
#X connect 9 0 11 0;
#X connect 10 0 0 0;
#X connect 10 1 13 1;
#X connect 11 0 0 0;
#X connect 11 1 13 2;
#X connect 13 0 7 0;
#X restore 392 390 pd My_RSP_TimeHandler2;
#X obj 480 461 r sU2;
#X obj 569 460 r sD2;
#N canvas 36 65 1195 629 My_RSP_SelectAndPlayEngine2 0;
#X text 464 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack2 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X obj 64 17 inlet playButton2;
#X obj 267 19 inlet selectUp2;
#X obj 381 20 inlet selectDown2;
#X obj 414 111 r initIndexBang2;
#X obj 340 193 print SP2>>First Sample Reached;
#X obj 267 217 print SP2>>Last Sample Reached;
#N canvas 25 58 553 615 My_RSP_IndexGenerator2 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X obj 129 36 inlet increaseIndexSP2;
#X obj 163 62 inlet decreaseIndexSP2;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes2;
#X obj 129 549 outlet LastSampleReachedSP2;
#X obj 223 523 outlet FirstSampleReachedSP2;
#X obj 322 386 outlet SP2_Index;
#X obj 320 166 r AmountOfAudioFilesInSP2;
#X obj 305 212 s maxNoOfSamples2;
#X obj 372 289 r maxNoOfSamples2;
#X obj 259 345 s sP2Index;
#X obj 193 152 r maxNoOfSamples2;
#X obj 171 230 r maxNoOfSamples2;
#X obj 144 325 r maxNoOfSamples2;
#X obj 278 437 r sP2Index;
#X obj 144 414 r sP2Index;
#X text 175 108 decrease \; SamplePack2Index;
#X text 11 104 increase \; SamplePack2Index;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 34 0;
#X connect 7 0 38 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 32 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 33 0;
#X connect 23 0 3 0;
#X connect 23 0 36 0;
#X connect 29 0 0 0;
#X connect 30 0 1 0;
#X connect 31 0 9 0;
#X connect 35 0 23 1;
#X connect 35 0 24 0;
#X connect 37 0 7 2;
#X connect 39 0 13 0;
#X connect 40 0 11 1;
#X connect 41 0 16 1;
#X connect 42 0 21 1;
#X connect 43 0 18 1;
#X restore 267 143 pd My_RSP_IndexGenerator2;
#X floatatom 451 160 5 0 0 0 - - -;
#X obj 276 112 r indexInit;
#X text 275 66 select first \; sample after \; loading the patch;
#N canvas 328 282 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 219 239 pd My_RSP_LedAlert;
#X obj 469 297 f;
#X text 503 298 store current selected index;
#X text 571 313 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 469 259 r updateZlnthObjectsBang2;
#X obj 414 323 s currentSelectedIndexSP2;
#X obj 414 259 t f f;
#X obj 98 180 s pb2_1;
#X obj 81 201 s pb2_2;
#X obj 64 230 s pb2_3;
#X text 483 797 AUDIO OUTPUT;
#X text 757 654 build array name \; containing the \; selected index
\; so the tabread object \; knows which array \; to read from.;
#X obj 602 732 *~;
#X msg 545 479 set \$1_right;
#X obj 454 417 f;
#X msg 454 478 set \$1_left;
#X obj 453 731 *~;
#X floatatom 484 416 5 0 0 0 - - -;
#X obj 545 549 tabplay~ \$1;
#X obj 454 549 tabplay~ \$1;
#X text 219 565 "open sine1.wav 32768";
#X obj 164 552 symbol;
#X msg 164 590 open \$1.wav 32768;
#X obj 242 429 r FolderWithAudioFiles;
#X obj 197 463 pack s s;
#X obj 197 507 pack s;
#X msg 184 663 1;
#X obj 164 695 readsf~ 2;
#X obj 184 635 bang;
#X text 640 484 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 164 370 r pb2_3;
#X obj 197 397 r currentlyPlayingSampleNameSP2;
#X msg 197 484 \$2SamplePack2/\$1;
#X obj 484 370 r pb2_1;
#X obj 484 394 r indexCorrectionForLoopingSP2;
#X obj 454 453 makefilename SampleArray2_%d;
#X obj 557 514 r pb2_2;
#X obj 468 695 r vol2;
#X text 517 691 adjust volume \; (from fader 2);
#X obj 453 751 outlet~ toDacLeft2;
#X obj 602 754 outlet~ toDacRight2;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync2 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb2_0;
#X obj 412 180 r listFileLengthsInSeconds2;
#X obj 435 217 r currentSelectedIndexSP2;
#N canvas 145 79 1015 572 My_RSP_Looping_Index_Handler2 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 243 233 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 202 466 5 0 0 0 - - -;
#X obj 170 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 223 406 f;
#X floatatom 251 406 5 0 0 0 - - -;
#X obj 131 31 inlet currentSampleHasReachedItsEnd2;
#X obj 146 132 r currentSelectedIndexSP2;
#X obj 146 209 r lastIndexPlayedSP2;
#X obj 238 382 r currentSelectedIndexSP2;
#X obj 223 428 print SP2: loopingFire2 playing currently selected sample
;
#X obj 203 489 s indexCorrectionForLoopingSP2;
#X obj 150 513 s loopingFire2;
#X text 436 242 comment;
#X obj 131 541 print SP2: loopingFire2 with index correction to;
#X obj 170 404 t b b;
#X obj 131 442 t f b f;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 25 0;
#X connect 8 0 12 0;
#X connect 8 1 11 0;
#X connect 11 0 24 0;
#X connect 12 0 7 0;
#X connect 13 0 19 0;
#X connect 15 0 4 0;
#X connect 16 0 3 0;
#X connect 17 0 6 0;
#X connect 18 0 13 1;
#X connect 18 0 14 0;
#X connect 24 0 13 0;
#X connect 24 1 21 0;
#X connect 25 0 23 0;
#X connect 25 1 21 0;
#X connect 25 2 10 0;
#X connect 25 2 20 0;
#X restore 262 476 pd My_RSP_Looping_Index_Handler2;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync2;
#X obj 64 130 t b b b b;
#X obj 115 160 s pb2_0;
#X connect 2 0 54 0;
#X connect 3 0 8 0;
#X connect 4 0 8 1;
#X connect 5 0 8 2;
#X connect 8 0 7 0;
#X connect 8 0 12 0;
#X connect 8 1 6 0;
#X connect 8 1 12 0;
#X connect 8 2 9 0;
#X connect 8 2 18 0;
#X connect 10 0 8 0;
#X connect 13 0 26 1;
#X connect 16 0 13 0;
#X connect 18 0 17 0;
#X connect 18 1 13 1;
#X connect 24 0 52 0;
#X connect 25 0 30 0;
#X connect 26 0 47 0;
#X connect 27 0 31 0;
#X connect 28 0 51 0;
#X connect 30 0 24 0;
#X connect 30 1 40 0;
#X connect 31 0 28 0;
#X connect 33 0 34 0;
#X connect 34 0 39 0;
#X connect 35 0 36 1;
#X connect 36 0 44 0;
#X connect 37 0 33 1;
#X connect 38 0 39 0;
#X connect 39 0 28 0;
#X connect 39 1 24 0;
#X connect 40 0 38 0;
#X connect 42 0 33 0;
#X connect 43 0 36 0;
#X connect 44 0 37 0;
#X connect 45 0 26 0;
#X connect 46 0 29 0;
#X connect 46 0 26 1;
#X connect 47 0 25 0;
#X connect 47 0 27 0;
#X connect 48 0 30 0;
#X connect 48 0 31 0;
#X connect 49 0 28 1;
#X connect 49 0 24 1;
#X connect 54 0 21 0;
#X connect 54 1 20 0;
#X connect 54 2 19 0;
#X connect 54 3 55 0;
#X restore 392 484 pd My_RSP_SelectAndPlayEngine2;
#X obj 393 1264 dac~ 1 2;
#X obj 393 1264 dac~ 1 2;
#X obj 684 21 inlet metronomeInlet3;
#X obj 772 419 r sU3;
#X obj 861 417 r sD3;
#N canvas 0 77 1280 643 My_RSP_TimeHandler3 0;
#X msg 65 115 1;
#X obj 50 178 f;
#X msg 81 178 0;
#X obj 50 204 moses 1;
#X text 469 136 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X obj 81 155 r initBang;
#X obj 50 37 inlet myMetronomeFirstHit1_3;
#X obj 239 39 inlet myHumanDesiresPlayingSaver3;
#X obj 89 330 outlet myPermissionToPlay3;
#X obj 479 41 inlet myCurrentSampleDesiresLooping3;
#X text 468 210 The third inlet is for looping the sample that is currently
played.;
#X text 99 284 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 371 298 601 288 My_RSP_PlaywishDistinguisher3 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 17;
#X obj 54 175 t b b;
#X obj 54 44 inlet myReadyToPlay3;
#X obj 188 44 inlet myHumanIdentifier3;
#X obj 360 43 inlet myLoopingIdentifier3;
#X obj 259 243 s currentPlayingSampleNameBang3;
#X obj 54 243 outlet myPlaybackBang3;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 6 0 0 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X restore 89 261 pd My_RSP_PlaywishDistinguisher3;
#X obj 239 66 t b b;
#X obj 479 62 t b b;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 12 0;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 13 0;
#X connect 9 0 14 0;
#X connect 12 0 8 0;
#X connect 13 0 0 0;
#X connect 13 1 12 1;
#X connect 14 0 0 0;
#X connect 14 1 12 2;
#X restore 684 386 pd My_RSP_TimeHandler3;
#N canvas 34 63 859 559 My_RSP_SelectAndPlayEngine3 0;
#X text 464 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 483 797 AUDIO OUTPUT;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack2 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X floatatom 451 160 5 0 0 0 - - -;
#X obj 64 17 inlet playButton3;
#X obj 267 19 inlet selectUp3;
#X obj 381 20 inlet selectDown3;
#X obj 414 111 r initIndexBang3;
#X obj 340 193 print SP3>>First Sample Reached;
#X obj 267 217 print SP3>>Last Sample Reached;
#N canvas 76 99 553 615 My_RSP_IndexGenerator3 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X obj 129 36 inlet increaseIndexSP3;
#X obj 163 62 inlet decreaseIndexSP3;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes3;
#X text 175 108 decrease \; SamplePack3Index;
#X text 11 104 increase \; SamplePack3Index;
#X obj 193 152 r maxNoOfSamples3;
#X obj 320 166 r AmountOfAudioFilesInSP3;
#X obj 171 230 r maxNoOfSamples3;
#X obj 305 212 s maxNoOfSamples3;
#X obj 144 325 r maxNoOfSamples3;
#X obj 372 289 r maxNoOfSamples3;
#X obj 259 345 s sP3Index;
#X obj 322 386 outlet SP3_Index;
#X obj 144 414 r sP3Index;
#X obj 278 437 r sP3Index;
#X obj 223 523 outlet FirstSampleReachedSP3;
#X obj 129 549 outlet LastSampleReachedSP3;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 40 0;
#X connect 7 0 41 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 45 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 44 0;
#X connect 23 0 3 0;
#X connect 23 0 37 0;
#X connect 29 0 0 0;
#X connect 30 0 1 0;
#X connect 31 0 9 0;
#X connect 34 0 13 0;
#X connect 35 0 23 1;
#X connect 35 0 24 0;
#X connect 36 0 11 1;
#X connect 38 0 16 1;
#X connect 39 0 7 2;
#X connect 42 0 18 1;
#X connect 43 0 21 1;
#X restore 267 143 pd My_RSP_IndexGenerator3;
#X obj 275 109 r indexInit;
#X text 275 64 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 219 240 pd My_RSP_LedAlert;
#X obj 469 288 f;
#X text 503 289 store current selected index;
#X text 572 302 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 469 250 r updateZlnthObjectsBang3;
#X obj 414 309 s currentSelectedIndexSP3;
#X obj 572 207 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 414 250 t f f;
#X obj 106 182 s pb3_1;
#X obj 85 203 s pb3_2;
#X obj 64 232 s pb3_3;
#X text 757 654 build array name \; containing the \; selected index
\; so the tabread object \; knows which array \; to read from.;
#X obj 602 732 *~;
#X msg 545 479 set \$1_right;
#X obj 454 417 f;
#X msg 454 478 set \$1_left;
#X obj 453 731 *~;
#X floatatom 484 416 5 0 0 0 - - -;
#X obj 545 549 tabplay~ \$1;
#X obj 454 549 tabplay~ \$1;
#X text 219 565 "open sine1.wav 32768";
#X obj 164 552 symbol;
#X msg 164 590 open \$1.wav 32768;
#X obj 242 429 r FolderWithAudioFiles;
#X obj 197 463 pack s s;
#X obj 197 507 pack s;
#X msg 184 663 1;
#X obj 164 695 readsf~ 2;
#X obj 184 635 bang;
#X text 640 484 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 164 370 r pb3_3;
#X obj 197 397 r currentlyPlayingSampleNameSP3;
#X msg 197 484 \$2SamplePack3/\$1;
#X obj 484 370 r pb3_1;
#X obj 484 394 r indexCorrectionForLoopingSP3;
#X obj 454 453 makefilename SampleArray3_%d;
#X obj 557 514 r pb3_2;
#X obj 468 695 r vol3;
#X text 517 691 adjust volume \; (from fader 3);
#X obj 453 751 outlet~ toDacLeft3;
#X obj 602 754 outlet~ toDacRight3;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync3 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb3_0;
#X obj 412 180 r listFileLengthsInSeconds3;
#X obj 435 217 r currentSelectedIndexSP3;
#N canvas 114 87 1028 575 My_RSP_Looping_Index_Handler3 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 250 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 243 233 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 212 466 5 0 0 0 - - -;
#X obj 170 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 263 437 f;
#X floatatom 290 437 5 0 0 0 - - -;
#X obj 131 31 inlet currentSampleHasReachedItsEnd3;
#X obj 146 132 r currentSelectedIndexSP3;
#X obj 146 209 r lastIndexPlayedSP3;
#X obj 278 413 r currentSelectedIndexSP3;
#X obj 263 459 print SP3: loopingFire3 playing currently selected sample
;
#X obj 213 489 s indexCorrectionForLoopingSP3;
#X obj 150 511 s loopingFire3;
#X obj 131 541 print SP3: loopingFire3 with index correction to;
#X floatatom 146 230 5 0 0 0 - - -;
#X text 436 242 comment;
#X obj 170 406 t b b;
#X obj 131 442 t f b f;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 26 0;
#X connect 8 0 12 0;
#X connect 8 1 11 0;
#X connect 11 0 25 0;
#X connect 12 0 7 0;
#X connect 13 0 19 0;
#X connect 15 0 4 0;
#X connect 16 0 3 0;
#X connect 17 0 23 0;
#X connect 18 0 13 1;
#X connect 18 0 14 0;
#X connect 23 0 6 0;
#X connect 25 0 13 0;
#X connect 25 1 21 0;
#X connect 26 0 22 0;
#X connect 26 1 21 0;
#X connect 26 2 10 0;
#X connect 26 2 20 0;
#X restore 262 474 pd My_RSP_Looping_Index_Handler3;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync3;
#X obj 127 154 s pb3_0;
#X obj 64 130 t b b b b, f 11;
#X connect 4 0 56 0;
#X connect 5 0 10 0;
#X connect 6 0 10 1;
#X connect 7 0 10 2;
#X connect 10 0 9 0;
#X connect 10 0 13 0;
#X connect 10 1 8 0;
#X connect 10 1 13 0;
#X connect 10 2 3 0;
#X connect 10 2 19 0;
#X connect 10 2 20 0;
#X connect 11 0 10 0;
#X connect 14 0 27 1;
#X connect 17 0 14 0;
#X connect 20 0 18 0;
#X connect 20 1 14 1;
#X connect 25 0 53 0;
#X connect 26 0 31 0;
#X connect 27 0 48 0;
#X connect 28 0 32 0;
#X connect 29 0 52 0;
#X connect 31 0 25 0;
#X connect 31 1 41 0;
#X connect 32 0 29 0;
#X connect 34 0 35 0;
#X connect 35 0 40 0;
#X connect 36 0 37 1;
#X connect 37 0 45 0;
#X connect 38 0 34 1;
#X connect 39 0 40 0;
#X connect 40 0 29 0;
#X connect 40 1 25 0;
#X connect 41 0 39 0;
#X connect 43 0 34 0;
#X connect 44 0 37 0;
#X connect 45 0 38 0;
#X connect 46 0 27 0;
#X connect 47 0 30 0;
#X connect 47 0 27 1;
#X connect 48 0 26 0;
#X connect 48 0 28 0;
#X connect 49 0 31 0;
#X connect 49 0 32 0;
#X connect 50 0 29 1;
#X connect 50 0 25 1;
#X connect 56 0 23 0;
#X connect 56 1 22 0;
#X connect 56 2 21 0;
#X connect 56 3 55 0;
#X restore 684 442 pd My_RSP_SelectAndPlayEngine3;
#X obj 1075 439 r sU4;
#X obj 1164 438 r sD4;
#N canvas 29 70 1170 612 My_RSP_SelectAndPlayEngine4 0;
#X text 464 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 757 654 build array name \; containing the \; selected index
\; so the tabread object \; knows which array \; to read from.;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack2 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X floatatom 451 160 5 0 0 0 - - -;
#X obj 64 7 inlet playButton4;
#X obj 267 9 inlet selectUp4;
#X obj 381 10 inlet selectDown4;
#X obj 414 111 r initIndexBang4;
#N canvas 75 98 553 615 My_RSP_IndexGenerator4 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X text 11 104 increase \; SamplePack3Index;
#X obj 129 36 inlet increaseIndexSP4;
#X obj 163 62 inlet decreaseIndexSP4;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes4;
#X text 175 108 decrease \; SamplePack4Index;
#X obj 193 152 r maxNoOfSamples4;
#X obj 320 166 r AmountOfAudioFilesInSP4;
#X obj 305 212 s maxNoOfSamples4;
#X obj 171 230 r maxNoOfSamples4;
#X obj 372 289 r maxNoOfSamples4;
#X obj 144 325 r maxNoOfSamples4;
#X obj 259 345 s sP4Index;
#X obj 322 386 outlet SP4_Index;
#X obj 144 414 r sP4Index;
#X obj 278 437 r sP4Index;
#X obj 223 523 outlet FirstSampleReachedSP4;
#X obj 129 549 outlet LastSampleReachedSP4;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 40 0;
#X connect 7 0 41 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 45 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 44 0;
#X connect 23 0 3 0;
#X connect 23 0 36 0;
#X connect 30 0 0 0;
#X connect 31 0 1 0;
#X connect 32 0 9 0;
#X connect 34 0 13 0;
#X connect 35 0 23 1;
#X connect 35 0 24 0;
#X connect 37 0 11 1;
#X connect 38 0 7 2;
#X connect 39 0 16 1;
#X connect 42 0 18 1;
#X connect 43 0 21 1;
#X restore 267 143 pd My_RSP_IndexGenerator4;
#X obj 340 193 print SP4>>First Sample Reached;
#X obj 267 217 print SP4>>Last Sample Reached;
#X text 458 843 AUDIO OUTPUT;
#X obj 275 106 r indexInit;
#X text 273 57 select first \; sample after \; loading the patch;
#N canvas 328 282 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 217 239 pd My_RSP_LedAlert;
#X obj 469 288 f;
#X text 503 289 store current selected index;
#X text 572 302 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 414 250 t f f;
#X obj 469 250 r updateZlnthObjectsBang4;
#X obj 414 309 s currentSelectedIndexSP4;
#X obj 98 180 s pb4_1;
#X obj 81 201 s pb4_2;
#X obj 64 230 s pb4_3;
#X obj 602 732 *~;
#X msg 545 479 set \$1_right;
#X obj 454 417 f;
#X msg 454 478 set \$1_left;
#X obj 453 731 *~;
#X floatatom 484 416 5 0 0 0 - - -;
#X obj 545 549 tabplay~ \$1;
#X obj 454 549 tabplay~ \$1;
#X text 219 565 "open sine1.wav 32768";
#X obj 164 552 symbol;
#X msg 164 590 open \$1.wav 32768;
#X obj 242 429 r FolderWithAudioFiles;
#X obj 197 463 pack s s;
#X obj 197 507 pack s;
#X msg 184 663 1;
#X obj 164 695 readsf~ 2;
#X obj 184 635 bang;
#X text 640 484 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 164 370 r pb4_3;
#X obj 197 397 r currentlyPlayingSampleNameSP4;
#X msg 197 484 \$2SamplePack4/\$1;
#X obj 484 370 r pb4_1;
#X obj 484 394 r indexCorrectionForLoopingSP4;
#X obj 454 453 makefilename SampleArray4_%d;
#X obj 557 514 r pb4_2;
#X obj 468 695 r vol4;
#X text 517 691 adjust volume \; (from fader 4);
#X obj 453 751 outlet~ toDacLeft4;
#X obj 602 754 outlet~ toDacRight4;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync4 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb4_0;
#X obj 412 180 r listFileLengthsInSeconds4;
#X obj 435 217 r currentSelectedIndexSP4;
#N canvas 66 72 1015 572 My_RSP_Looping_Index_Handler4 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 259 236 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 192 466 5 0 0 0 - - -;
#X obj 170 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 250 437 f;
#X floatatom 277 437 5 0 0 0 - - -;
#X obj 131 31 inlet currentSampleHasReachedItsEnd4;
#X obj 146 132 r currentSelectedIndexSP4;
#X obj 146 209 r lastIndexPlayedSP4;
#X obj 265 413 r currentSelectedIndexSP4;
#X obj 250 459 print SP4: loopingFire4 playing currently selected sample
;
#X obj 193 489 s indexCorrectionForLoopingSP4;
#X obj 150 514 s loopingFire4;
#X obj 131 541 print SP4: loopingFire4 with index correction to;
#X text 436 242 comment;
#X obj 170 404 t b b;
#X obj 131 442 t f b f;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 25 0;
#X connect 8 0 12 0;
#X connect 8 1 11 0;
#X connect 11 0 24 0;
#X connect 12 0 7 0;
#X connect 13 0 19 0;
#X connect 15 0 4 0;
#X connect 16 0 3 0;
#X connect 17 0 6 0;
#X connect 18 0 13 1;
#X connect 18 0 14 0;
#X connect 24 0 13 0;
#X connect 24 1 21 0;
#X connect 25 0 22 0;
#X connect 25 1 21 0;
#X connect 25 2 10 0;
#X connect 25 2 20 0;
#X restore 262 466 pd My_RSP_Looping_Index_Handler4;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync4;
#X obj 64 130 t b b b b;
#X obj 115 160 s pb4_0;
#X connect 4 0 54 0;
#X connect 5 0 8 0;
#X connect 6 0 8 1;
#X connect 7 0 8 2;
#X connect 8 0 10 0;
#X connect 8 0 14 0;
#X connect 8 1 9 0;
#X connect 8 1 14 0;
#X connect 8 2 3 0;
#X connect 8 2 18 0;
#X connect 12 0 8 0;
#X connect 15 0 26 1;
#X connect 18 0 20 0;
#X connect 18 1 15 1;
#X connect 19 0 15 0;
#X connect 24 0 52 0;
#X connect 25 0 30 0;
#X connect 26 0 47 0;
#X connect 27 0 31 0;
#X connect 28 0 51 0;
#X connect 30 0 24 0;
#X connect 30 1 40 0;
#X connect 31 0 28 0;
#X connect 33 0 34 0;
#X connect 34 0 39 0;
#X connect 35 0 36 1;
#X connect 36 0 44 0;
#X connect 37 0 33 1;
#X connect 38 0 39 0;
#X connect 39 0 28 0;
#X connect 39 1 24 0;
#X connect 40 0 38 0;
#X connect 42 0 33 0;
#X connect 43 0 36 0;
#X connect 44 0 37 0;
#X connect 45 0 26 0;
#X connect 46 0 29 0;
#X connect 46 0 26 1;
#X connect 47 0 25 0;
#X connect 47 0 27 0;
#X connect 48 0 30 0;
#X connect 48 0 31 0;
#X connect 49 0 28 1;
#X connect 49 0 24 1;
#X connect 54 0 23 0;
#X connect 54 1 22 0;
#X connect 54 2 21 0;
#X connect 54 3 55 0;
#X restore 987 462 pd My_RSP_SelectAndPlayEngine4;
#N canvas 0 220 1280 643 My_RSP_TimeHandler4 0;
#X msg 65 105 1;
#X obj 50 148 f;
#X msg 83 148 0;
#X obj 50 174 moses 1;
#X text 538 120 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X obj 83 125 r initBang;
#X obj 50 37 inlet myMetronomeFirstHit1_4;
#X obj 239 37 inlet myHumanDesiresPlayingSaver4;
#X obj 89 285 outlet myPermissionToPlay4;
#X obj 472 37 inlet myCurrentSampleDesiresLooping4;
#X text 537 196 The third inlet is for looping the sample that is currently
played.;
#X text 96 227 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 158 222 601 288 My_RSP_PlaywishDistinguisher4 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 22;
#X obj 54 175 t b b;
#X obj 54 44 inlet myReadyToPlay4;
#X obj 188 44 inlet myHumanIdentifier4;
#X obj 360 43 inlet myLoopingIdentifier4;
#X obj 187 214 s currentPlayingSampleNameBang4;
#X obj 54 242 outlet myPlaybackBang4;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 6 0 0 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X restore 89 203 pd My_RSP_PlaywishDistinguisher4;
#X obj 239 60 t b b;
#X obj 472 59 t b b;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 12 0;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 13 0;
#X connect 9 0 14 0;
#X connect 12 0 8 0;
#X connect 13 0 0 0;
#X connect 13 1 12 1;
#X connect 14 0 0 0;
#X connect 14 1 12 2;
#X restore 987 387 pd My_RSP_TimeHandler4;
#X obj 987 20 inlet metronomeInlet4;
#X obj 1309 167 r fire5;
#N canvas 0 142 1280 643 My_RSP_TimeHandler5 0;
#X msg 65 135 1;
#X obj 50 198 f;
#X msg 86 198 0;
#X obj 50 224 moses 1;
#X text 487 119 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X obj 86 175 r initBang;
#X obj 50 37 inlet myMetronomeFirstHit1_5;
#X obj 239 37 inlet myHumanDesiresPlayingSaver5;
#X obj 89 333 outlet myPermissionToPlay5;
#X obj 459 37 inlet myCurrentSampleDesiresLooping5;
#X text 486 201 The third inlet is for looping the sample that is currently
played.;
#X text 93 283 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 52 151 601 288 My_RSP_PlaywishDistinguisher5 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 23;
#X obj 54 175 t b b;
#X obj 264 234 s currentPlayingSampleNameBang5;
#X obj 54 234 outlet myPlaybackBang5;
#X obj 54 44 inlet myReadyToPlay5;
#X obj 188 44 inlet myHumanIdentifier5;
#X obj 360 43 inlet myLoopingIdentifier5;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 7 0;
#X connect 5 1 6 0;
#X connect 8 0 0 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X restore 89 263 pd My_RSP_PlaywishDistinguisher5;
#X obj 239 65 t b b;
#X obj 459 62 t b b;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 12 0;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 13 0;
#X connect 9 0 14 0;
#X connect 12 0 8 0;
#X connect 13 0 0 0;
#X connect 13 1 12 1;
#X connect 14 0 0 0;
#X connect 14 1 12 2;
#X restore 1245 382 pd My_RSP_TimeHandler5;
#X obj 1333 430 r sU5;
#X obj 1422 429 r sD5;
#N canvas 212 95 977 660 My_RSP_SelectAndPlayEngine5 0;
#X text 464 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 481 791 AUDIO OUTPUT;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack2 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X floatatom 451 160 5 0 0 0 - - -;
#X obj 64 7 inlet playButton5;
#X obj 267 9 inlet selectUp5;
#X obj 381 10 inlet selectDown5;
#X obj 414 111 r initIndexBang5;
#N canvas 74 97 553 615 My_RSP_IndexGenerator5 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X obj 129 36 inlet increaseIndexSP5;
#X obj 163 62 inlet decreaseIndexSP5;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes5;
#X text 175 108 decrease \; SamplePack5Index;
#X text 11 104 increase \; SamplePack5Index;
#X obj 193 152 r maxNoOfSamples5;
#X obj 320 166 r AmountOfAudioFilesInSP5;
#X obj 305 212 s maxNoOfSamples5;
#X obj 171 230 r maxNoOfSamples5;
#X obj 372 289 r maxNoOfSamples5;
#X obj 144 325 r maxNoOfSamples5;
#X obj 259 345 s sP5Index;
#X obj 144 414 r sP5Index;
#X obj 322 386 outlet SP5_Index;
#X obj 278 437 r sP5Index;
#X obj 223 523 outlet FirstSampleReachedSP5;
#X obj 129 549 outlet LastSampleReachedSP5;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 40 0;
#X connect 7 0 42 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 45 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 44 0;
#X connect 23 0 3 0;
#X connect 23 0 36 0;
#X connect 29 0 0 0;
#X connect 30 0 1 0;
#X connect 31 0 9 0;
#X connect 34 0 13 0;
#X connect 35 0 23 1;
#X connect 35 0 24 0;
#X connect 37 0 11 1;
#X connect 38 0 7 2;
#X connect 39 0 16 1;
#X connect 41 0 18 1;
#X connect 43 0 21 1;
#X restore 267 143 pd My_RSP_IndexGenerator5;
#X obj 340 180 print SP5>>First Sample Reached;
#X obj 267 204 print SP5>>Last Sample Reached;
#X obj 231 1240 s openSpigot5;
#X obj 275 112 r indexInit;
#X text 273 63 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 215 226 pd My_RSP_LedAlert;
#X obj 469 317 f;
#X text 503 318 store current selected index;
#X text 574 333 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 414 279 t f f;
#X obj 469 279 r updateZlnthObjectsBang5;
#X obj 414 339 s currentSelectedIndexSP5;
#X obj 110 181 s pb5_1;
#X obj 87 202 s pb5_2;
#X obj 64 228 s pb5_3;
#X obj 602 732 *~;
#X msg 545 479 set \$1_right;
#X obj 454 417 f;
#X msg 454 478 set \$1_left;
#X obj 453 731 *~;
#X floatatom 484 416 5 0 0 0 - - -;
#X obj 545 549 tabplay~ \$1;
#X obj 454 549 tabplay~ \$1;
#X text 219 565 "open sine1.wav 32768";
#X obj 164 552 symbol;
#X msg 164 590 open \$1.wav 32768;
#X obj 242 429 r FolderWithAudioFiles;
#X obj 197 463 pack s s;
#X obj 197 507 pack s;
#X msg 184 663 1;
#X obj 164 695 readsf~ 2;
#X obj 184 635 bang;
#X text 640 484 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 164 370 r pb5_3;
#X obj 197 397 r currentlyPlayingSampleNameSP5;
#X msg 197 484 \$2SamplePack5/\$1;
#X obj 484 370 r pb5_1;
#X obj 484 394 r indexCorrectionForLoopingSP5;
#X obj 454 453 makefilename SampleArray5_%d;
#X obj 557 514 r pb5_2;
#X obj 468 695 r vol5;
#X text 517 691 adjust volume \; (from fader 5);
#X obj 453 751 outlet~ toDacLeft5;
#X obj 602 754 outlet~ toDacRight5;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync5 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb5_0;
#X obj 412 180 r listFileLengthsInSeconds5;
#X obj 435 217 r currentSelectedIndexSP5;
#N canvas 0 100 1015 566 My_RSP_Looping_Index_Handler5 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 239 239 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 176 478 5 0 0 0 - - -;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 270 443 f;
#X floatatom 297 443 5 0 0 0 - - -;
#X obj 170 407 t b b;
#X obj 170 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 442 t f b f;
#X obj 131 31 inlet currentSampleHasReachedItsEnd5;
#X obj 146 132 r currentSelectedIndexSP5;
#X obj 146 209 r lastIndexPlayedSP5;
#X text 762 251 comment;
#X obj 285 419 r currentSelectedIndexSP5;
#X obj 270 465 print SP5: loopingFire5 playing currently selected sample
;
#X obj 170 499 s indexCorrectionForLoopingSP5;
#X obj 150 519 s loopingFire5;
#X obj 131 541 print SP5: loopingFire5 with index correction to;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 8 0 11 0;
#X connect 8 1 15 0;
#X connect 11 0 7 0;
#X connect 12 0 22 0;
#X connect 14 0 12 0;
#X connect 14 1 24 0;
#X connect 15 0 14 0;
#X connect 16 0 25 0;
#X connect 16 1 24 0;
#X connect 16 2 10 0;
#X connect 16 2 23 0;
#X connect 17 0 4 0;
#X connect 18 0 3 0;
#X connect 19 0 6 0;
#X connect 21 0 12 1;
#X connect 21 0 13 0;
#X restore 262 469 pd My_RSP_Looping_Index_Handler5;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync5;
#X obj 133 160 s pb5_0;
#X obj 64 130 t b b b b, f 12;
#X connect 4 0 55 0;
#X connect 5 0 8 0;
#X connect 6 0 8 1;
#X connect 7 0 8 2;
#X connect 8 0 10 0;
#X connect 8 0 14 0;
#X connect 8 1 9 0;
#X connect 8 1 14 0;
#X connect 8 2 3 0;
#X connect 8 2 18 0;
#X connect 12 0 8 0;
#X connect 15 0 26 1;
#X connect 18 0 20 0;
#X connect 18 1 15 1;
#X connect 19 0 15 0;
#X connect 24 0 52 0;
#X connect 25 0 30 0;
#X connect 26 0 47 0;
#X connect 27 0 31 0;
#X connect 28 0 51 0;
#X connect 30 0 24 0;
#X connect 30 1 40 0;
#X connect 31 0 28 0;
#X connect 33 0 34 0;
#X connect 34 0 39 0;
#X connect 35 0 36 1;
#X connect 36 0 44 0;
#X connect 37 0 33 1;
#X connect 38 0 39 0;
#X connect 39 0 28 0;
#X connect 39 1 24 0;
#X connect 40 0 38 0;
#X connect 42 0 33 0;
#X connect 43 0 36 0;
#X connect 44 0 37 0;
#X connect 45 0 26 0;
#X connect 46 0 29 0;
#X connect 46 0 26 1;
#X connect 47 0 25 0;
#X connect 47 0 27 0;
#X connect 48 0 30 0;
#X connect 48 0 31 0;
#X connect 49 0 28 1;
#X connect 49 0 24 1;
#X connect 55 0 23 0;
#X connect 55 1 22 0;
#X connect 55 2 21 0;
#X connect 55 3 54 0;
#X restore 1245 453 pd My_RSP_SelectAndPlayEngine5;
#X obj 1245 19 inlet metronomeInlet5;
#X obj 1683 421 r sD6;
#N canvas 0 168 1280 643 My_RSP_TimeHandler6 0;
#X msg 65 105 1;
#X obj 50 168 f;
#X msg 82 167 0;
#X obj 50 194 moses 1;
#X obj 82 144 r initBang;
#X obj 50 37 inlet myMetronomeFirstHit1_6;
#X obj 239 39 inlet myHumanDesiresPlayingSaver6;
#X obj 89 368 outlet myPermissionToPlay6;
#X text 441 140 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X text 450 226 The third inlet is for looping the sample that is currently
played.;
#X obj 449 40 inlet myCurrentSampleDesiresLooping6;
#X text 96 307 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 44 171 601 288 My_RSP_PlaywishDistinguisher6 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 14;
#X obj 54 175 t b b;
#X obj 54 44 inlet myReadyToPlay6;
#X obj 188 44 inlet myHumanIdentifier6;
#X obj 360 43 inlet myLoopingIdentifier6;
#X obj 263 222 s currentPlayingSampleNameBang6;
#X obj 54 223 outlet myPlaybackBang6;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 6 0 0 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X restore 89 283 pd My_RSP_PlaywishDistinguisher6;
#X obj 239 60 t b b;
#X obj 449 61 t b b;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 12 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 6 0 13 0;
#X connect 10 0 14 0;
#X connect 12 0 7 0;
#X connect 13 0 0 0;
#X connect 13 1 12 1;
#X connect 14 0 0 0;
#X connect 14 1 12 2;
#X restore 1506 380 pd My_RSP_TimeHandler6;
#X obj 1594 422 r sU6;
#N canvas 210 73 911 612 My_RSP_SelectAndPlayEngine6 0;
#X text 464 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack2 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X floatatom 451 160 5 0 0 0 - - -;
#X obj 64 17 inlet playButton6;
#X obj 267 19 inlet selectUp6;
#X obj 381 20 inlet selectDown6;
#X obj 414 111 r initIndexBang6;
#N canvas 73 96 553 615 My_RSP_IndexGenerator6 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X obj 129 36 inlet increaseIndexSP6;
#X obj 163 62 inlet decreaseIndexSP6;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes6;
#X text 175 108 decrease \; SamplePack6Index;
#X text 11 104 increase \; SamplePack6Index;
#X obj 193 152 r maxNoOfSamples6;
#X obj 320 166 r AmountOfAudioFilesInSP6;
#X obj 171 230 r maxNoOfSamples6;
#X obj 305 212 s maxNoOfSamples6;
#X obj 372 289 r maxNoOfSamples6;
#X obj 144 325 r maxNoOfSamples6;
#X obj 259 345 s sP6Index;
#X obj 144 414 r sP6Index;
#X obj 322 386 outlet SP6_Index;
#X obj 278 437 r sP6Index;
#X obj 223 523 outlet FirstSampleReachedSP6;
#X obj 129 549 outlet LastSampleReachedSP6;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 40 0;
#X connect 7 0 42 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 45 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 44 0;
#X connect 23 0 3 0;
#X connect 23 0 37 0;
#X connect 29 0 0 0;
#X connect 30 0 1 0;
#X connect 31 0 9 0;
#X connect 34 0 13 0;
#X connect 35 0 23 1;
#X connect 35 0 24 0;
#X connect 36 0 11 1;
#X connect 38 0 7 2;
#X connect 39 0 16 1;
#X connect 41 0 18 1;
#X connect 43 0 21 1;
#X restore 267 143 pd My_RSP_IndexGenerator6;
#X obj 340 193 print SP6>>First Sample Reached;
#X obj 267 217 print SP6>>Last Sample Reached;
#X obj 275 113 r indexInit;
#X text 273 64 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 217 238 pd My_RSP_LedAlert;
#X obj 469 317 f;
#X text 503 318 store current selected index;
#X text 574 333 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 414 279 t f f;
#X obj 469 279 r updateZlnthObjectsBang6;
#X obj 414 341 s currentSelectedIndexSP6;
#X obj 110 180 s pb6_1;
#X obj 87 202 s pb6_2;
#X obj 64 230 s pb6_3;
#X obj 586 732 *~;
#X msg 529 479 set \$1_right;
#X obj 438 417 f;
#X msg 438 478 set \$1_left;
#X obj 437 731 *~;
#X floatatom 468 416 5 0 0 0 - - -;
#X obj 529 549 tabplay~ \$1;
#X obj 438 549 tabplay~ \$1;
#X text 199 566 "open sine1.wav 32768";
#X obj 144 553 symbol;
#X msg 144 591 open \$1.wav 32768;
#X obj 222 430 r FolderWithAudioFiles;
#X obj 177 464 pack s s;
#X obj 177 508 pack s;
#X msg 164 664 1;
#X obj 144 696 readsf~ 2;
#X obj 164 636 bang;
#X text 624 484 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 144 371 r pb6_3;
#X obj 177 398 r currentlyPlayingSampleNameSP6;
#X msg 177 485 \$2SamplePack6/\$1;
#X obj 468 370 r pb6_1;
#X obj 468 394 r indexCorrectionForLoopingSP6;
#X obj 438 453 makefilename SampleArray6_%d;
#X obj 541 514 r pb6_2;
#X obj 452 695 r vol6;
#X text 501 691 adjust volume \; (from fader 6);
#X obj 437 751 outlet~ toDacLeft6;
#X obj 586 754 outlet~ toDacRight6;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync6 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb6_0;
#X obj 412 180 r listFileLengthsInSeconds6;
#X obj 435 217 r currentSelectedIndexSP6;
#N canvas 0 101 1015 566 My_RSP_Looping_Index_Handler6 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 213 243 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 176 478 5 0 0 0 - - -;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 270 443 f;
#X floatatom 297 443 5 0 0 0 - - -;
#X obj 170 407 t b b;
#X obj 170 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 442 t f b f;
#X obj 131 31 inlet currentSampleHasReachedItsEnd6;
#X obj 146 132 r currentSelectedIndexSP6;
#X obj 146 209 r lastIndexPlayedSP6;
#X obj 285 419 r currentSelectedIndexSP6;
#X obj 270 465 print SP6: loopingFire6 playing currently selected sample
;
#X obj 170 499 s indexCorrectionForLoopingSP6;
#X obj 150 519 s loopingFire6;
#X obj 131 541 print SP6: loopingFire6 with index correction to;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 8 0 11 0;
#X connect 8 1 15 0;
#X connect 11 0 7 0;
#X connect 12 0 21 0;
#X connect 14 0 12 0;
#X connect 14 1 23 0;
#X connect 15 0 14 0;
#X connect 16 0 24 0;
#X connect 16 1 23 0;
#X connect 16 2 10 0;
#X connect 16 2 22 0;
#X connect 17 0 4 0;
#X connect 18 0 3 0;
#X connect 19 0 6 0;
#X connect 20 0 12 1;
#X connect 20 0 13 0;
#X restore 262 476 pd My_RSP_Looping_Index_Handler6;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync6;
#X obj 133 160 s pb6_0;
#X obj 64 130 t b b b b, f 12;
#X connect 3 0 53 0;
#X connect 4 0 7 0;
#X connect 5 0 7 1;
#X connect 6 0 7 2;
#X connect 7 0 9 0;
#X connect 7 0 12 0;
#X connect 7 1 8 0;
#X connect 7 1 12 0;
#X connect 7 2 2 0;
#X connect 7 2 16 0;
#X connect 10 0 7 0;
#X connect 13 0 24 1;
#X connect 16 0 18 0;
#X connect 16 1 13 1;
#X connect 17 0 13 0;
#X connect 22 0 50 0;
#X connect 23 0 28 0;
#X connect 24 0 45 0;
#X connect 25 0 29 0;
#X connect 26 0 49 0;
#X connect 28 0 22 0;
#X connect 28 1 38 0;
#X connect 29 0 26 0;
#X connect 31 0 32 0;
#X connect 32 0 37 0;
#X connect 33 0 34 1;
#X connect 34 0 42 0;
#X connect 35 0 31 1;
#X connect 36 0 37 0;
#X connect 37 0 26 0;
#X connect 37 1 22 0;
#X connect 38 0 36 0;
#X connect 40 0 31 0;
#X connect 41 0 34 0;
#X connect 42 0 35 0;
#X connect 43 0 24 0;
#X connect 44 0 27 0;
#X connect 44 0 24 1;
#X connect 45 0 23 0;
#X connect 45 0 25 0;
#X connect 46 0 28 0;
#X connect 46 0 29 0;
#X connect 47 0 26 1;
#X connect 47 0 22 1;
#X connect 53 0 21 0;
#X connect 53 1 20 0;
#X connect 53 2 19 0;
#X connect 53 3 52 0;
#X restore 1506 445 pd My_RSP_SelectAndPlayEngine6;
#X obj 1506 22 inlet metronomeInlet6;
#X obj 2022 422 r sD7;
#N canvas 0 51 1280 643 My_RSP_TimeHandler7 0;
#X msg 65 115 1;
#X obj 50 178 f;
#X msg 82 177 0;
#X obj 50 204 moses 1;
#X obj 82 154 r initBang;
#X obj 50 37 inlet myMetronomeFirstHit1_7;
#X obj 239 38 inlet myHumanDesiresPlayingSaver7;
#X obj 89 348 outlet myPermissionToPlay7;
#X text 438 135 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X text 438 216 The third inlet is for looping the sample that is currently
played.;
#X obj 450 39 inlet myCurrentSampleDesiresLooping7;
#X text 96 287 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 0 50 601 288 My_RSP_PlaywishDistinguisher7 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1;
#X obj 54 175 t b b;
#X obj 54 44 inlet myReadyToPlay7;
#X obj 188 44 inlet myHumanIdentifier7;
#X obj 360 43 inlet myLoopingIdentifier7;
#X obj 217 225 s currentPlayingSampleNameBang7;
#X obj 54 225 outlet myPlaybackBang7;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 6 0 0 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X restore 89 263 pd My_RSP_PlaywishDistinguisher7;
#X obj 239 59 t b b;
#X obj 450 60 t b b;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 12 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 6 0 13 0;
#X connect 10 0 14 0;
#X connect 12 0 7 0;
#X connect 13 0 0 0;
#X connect 13 1 12 1;
#X connect 14 0 0 0;
#X connect 14 1 12 2;
#X restore 1845 381 pd My_RSP_TimeHandler7;
#X obj 1933 423 r sU7;
#N canvas 31 56 911 612 My_RSP_SelectAndPlayEngine7 0;
#X text 464 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack2 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X floatatom 451 160 5 0 0 0 - - -;
#X obj 64 7 inlet playButton7;
#X obj 267 9 inlet selectUp7;
#X obj 381 10 inlet selectDown7;
#X obj 414 111 r initIndexBang7;
#N canvas 72 95 553 615 My_RSP_IndexGenerator7 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X obj 129 36 inlet increaseIndexSP7;
#X obj 163 62 inlet decreaseIndexSP7;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes7;
#X text 11 104 increase \; SamplePack7Index;
#X text 175 108 decrease \; SamplePack7Index;
#X obj 193 152 r maxNoOfSamples7;
#X obj 320 166 r AmountOfAudioFilesInSP7;
#X obj 305 212 s maxNoOfSamples7;
#X obj 171 230 r maxNoOfSamples7;
#X obj 372 289 r maxNoOfSamples7;
#X obj 144 325 r maxNoOfSamples7;
#X obj 259 345 s sP7Index;
#X obj 144 414 r sP7Index;
#X obj 322 386 outlet SP7_Index;
#X obj 278 437 r sP7Index;
#X obj 223 523 outlet FirstSampleReachedSP7;
#X obj 129 549 outlet LastSampleReachedSP7;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 40 0;
#X connect 7 0 42 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 45 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 44 0;
#X connect 23 0 3 0;
#X connect 23 0 36 0;
#X connect 29 0 0 0;
#X connect 30 0 1 0;
#X connect 31 0 9 0;
#X connect 34 0 13 0;
#X connect 35 0 23 1;
#X connect 35 0 24 0;
#X connect 37 0 11 1;
#X connect 38 0 7 2;
#X connect 39 0 16 1;
#X connect 41 0 18 1;
#X connect 43 0 21 1;
#X restore 267 143 pd My_RSP_IndexGenerator7;
#X obj 340 183 print SP7>>First Sample Reached;
#X obj 267 207 print SP7>>Last Sample Reached;
#X obj 275 115 r indexInit;
#X text 273 66 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 219 229 pd My_RSP_LedAlert;
#X obj 469 287 f;
#X text 503 288 store current selected index;
#X text 574 303 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 414 249 t f f;
#X obj 469 249 r updateZlnthObjectsBang7;
#X obj 414 311 s currentSelectedIndexSP7;
#X obj 98 190 s pb7_1;
#X obj 81 211 s pb7_2;
#X obj 64 236 s pb7_3;
#X obj 626 702 *~;
#X msg 569 449 set \$1_right;
#X obj 478 387 f;
#X msg 478 448 set \$1_left;
#X obj 477 701 *~;
#X text 541 661 adjust volume \; (from fader 8);
#X floatatom 508 386 5 0 0 0 - - -;
#X obj 569 519 tabplay~ \$1;
#X obj 478 519 tabplay~ \$1;
#X text 239 536 "open sine1.wav 32768";
#X obj 184 523 symbol;
#X msg 184 561 open \$1.wav 32768;
#X obj 262 400 r FolderWithAudioFiles;
#X obj 217 434 pack s s;
#X obj 217 478 pack s;
#X msg 204 634 1;
#X obj 184 666 readsf~ 2;
#X obj 204 606 bang;
#X text 664 454 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 478 340 r pb7_1;
#X obj 508 364 r indexCorrectionForLoopingSP7;
#X obj 184 341 r pb7_3;
#X obj 217 368 r currentlyPlayingSampleNameSP7;
#X msg 217 455 \$2SamplePack7/\$1;
#X obj 478 423 makefilename SampleArray7_%d;
#X obj 581 484 r pb7_2;
#X obj 492 665 r vol7;
#X obj 477 721 outlet~ toDacLeft7;
#X obj 626 724 outlet~ toDacRight7;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync7 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#X floatatom 445 239 5 0 0 0 - - -;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X obj 402 75 r pb7_0;
#X obj 412 180 r listFileLengthsInSeconds7;
#X obj 435 217 r currentSelectedIndexSP7;
#N canvas 0 101 1015 566 My_RSP_Looping_Index_Handler7 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 213 253 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 176 478 5 0 0 0 - - -;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 270 443 f;
#X floatatom 297 443 5 0 0 0 - - -;
#X obj 170 407 t b b;
#X obj 170 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 442 t f b f;
#X obj 131 31 inlet currentSampleHasReachedItsEnd7;
#X obj 146 132 r currentSelectedIndexSP7;
#X obj 146 209 r lastIndexPlayedSP7;
#X obj 285 419 r currentSelectedIndexSP7;
#X obj 270 465 print SP7: loopingFire7 playing currently selected sample
;
#X obj 170 499 s indexCorrectionForLoopingSP7;
#X obj 150 519 s loopingFire7;
#X obj 131 541 print SP7: loopingFire7 with index correction to;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 8 0 11 0;
#X connect 8 1 15 0;
#X connect 11 0 7 0;
#X connect 12 0 21 0;
#X connect 14 0 12 0;
#X connect 14 1 23 0;
#X connect 15 0 14 0;
#X connect 16 0 24 0;
#X connect 16 1 23 0;
#X connect 16 2 10 0;
#X connect 16 2 22 0;
#X connect 17 0 4 0;
#X connect 18 0 3 0;
#X connect 19 0 6 0;
#X connect 20 0 12 1;
#X connect 20 0 13 0;
#X restore 262 475 pd My_RSP_Looping_Index_Handler7;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 1;
#X connect 9 0 8 1;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 7 0;
#X connect 13 0 21 0;
#X connect 13 1 14 0;
#X connect 14 0 8 1;
#X connect 18 0 11 0;
#X connect 19 0 1 0;
#X connect 20 0 1 1;
#X connect 20 0 15 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync7;
#X obj 64 130 t b b b b;
#X obj 115 170 s pb7_0;
#X connect 3 0 52 0;
#X connect 4 0 7 0;
#X connect 5 0 7 1;
#X connect 6 0 7 2;
#X connect 7 0 9 0;
#X connect 7 0 12 0;
#X connect 7 1 8 0;
#X connect 7 1 12 0;
#X connect 7 2 2 0;
#X connect 7 2 16 0;
#X connect 10 0 7 0;
#X connect 13 0 24 1;
#X connect 16 0 18 0;
#X connect 16 1 13 1;
#X connect 17 0 13 0;
#X connect 22 0 50 0;
#X connect 23 0 29 0;
#X connect 24 0 46 0;
#X connect 25 0 30 0;
#X connect 26 0 49 0;
#X connect 29 0 22 0;
#X connect 29 1 39 0;
#X connect 30 0 26 0;
#X connect 32 0 33 0;
#X connect 33 0 38 0;
#X connect 34 0 35 1;
#X connect 35 0 45 0;
#X connect 36 0 32 1;
#X connect 37 0 38 0;
#X connect 38 0 26 0;
#X connect 38 1 22 0;
#X connect 39 0 37 0;
#X connect 41 0 24 0;
#X connect 42 0 28 0;
#X connect 42 0 24 1;
#X connect 43 0 32 0;
#X connect 44 0 35 0;
#X connect 45 0 36 0;
#X connect 46 0 23 0;
#X connect 46 0 25 0;
#X connect 47 0 29 0;
#X connect 47 0 30 0;
#X connect 48 0 26 1;
#X connect 48 0 22 1;
#X connect 52 0 21 0;
#X connect 52 1 20 0;
#X connect 52 2 19 0;
#X connect 52 3 53 0;
#X restore 1845 446 pd My_RSP_SelectAndPlayEngine7;
#X obj 1845 23 inlet metronomeInlet7;
#N canvas 0 107 1280 643 My_RSP_TimeHandler8 0;
#X msg 65 115 1;
#X obj 50 168 f;
#X msg 84 168 0;
#X obj 50 194 moses 1;
#X text 453 110 This patch handles the humans \; wish to play his selected
audio \; file \, so that playback is only \; done when the metronom
has reached \; the first beat \; (just like in ableton live);
#X obj 84 145 r initBang;
#X obj 50 37 inlet myMetronomeFirstHit1_8;
#X obj 239 39 inlet myHumanDesiresPlayingSaver8;
#X obj 89 298 outlet myPermissionToPlay8;
#X obj 483 39 inlet myCurrentSampleDesiresLooping8;
#X text 454 182 The third inlet is for looping the sample that is currently
played.;
#X text 96 247 here we distinguish between the user pressing the playbutton
and the internal looping mechanism.;
#N canvas 469 258 601 288 My_RSP_PlaywishDistinguisher8 0;
#X obj 54 96 bang;
#X obj 54 123 f;
#X msg 188 90 0;
#X msg 360 86 1;
#X obj 54 154 moses 1, f 12;
#X obj 54 175 t b b;
#X obj 54 44 inlet myReadyToPlay8;
#X obj 188 44 inlet myHumanIdentifier8;
#X obj 360 43 inlet myLoopingIdentifier8;
#X obj 214 234 s currentPlayingSampleNameBang8;
#X obj 54 245 outlet myPlaybackBang8;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 10 0;
#X connect 5 1 9 0;
#X connect 6 0 0 0;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X restore 89 223 pd My_RSP_PlaywishDistinguisher8;
#X obj 239 60 t b b;
#X obj 483 60 t b b;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 1 12 0;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 13 0;
#X connect 9 0 14 0;
#X connect 12 0 8 0;
#X connect 13 0 0 0;
#X connect 13 1 12 1;
#X connect 14 0 0 0;
#X connect 14 1 12 2;
#X restore 2137 383 pd My_RSP_TimeHandler8;
#X obj 2225 425 r sU8;
#X obj 2314 424 r sD8;
#N canvas 2 87 1280 633 My_RSP_SelectAndPlayEngine8 0;
#X obj 696 792 *~;
#X msg 639 539 set \$1_right;
#X obj 548 477 f;
#X msg 548 538 set \$1_left;
#X obj 547 791 *~;
#X text 574 142 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X floatatom 561 160 5 0 0 0 - - -;
#X obj 64 7 inlet playButton8;
#X obj 377 9 inlet selectUp8;
#X obj 491 10 inlet selectDown8;
#N canvas 71 94 1027 615 My_RSP_IndexGenerator8 0;
#X obj 129 133 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 163 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 312 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 223 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 223 433 t b f;
#X obj 223 454 f;
#X obj 223 480 spigot;
#X obj 305 188 f;
#X floatatom 332 189 5 0 0 0 - - -;
#X text 426 384 output the index;
#X text 403 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X obj 129 36 inlet increaseIndexSP8;
#X obj 163 62 inlet decreaseIndexSP8;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes8;
#X text 11 104 increase \; SamplePack8Index;
#X text 175 108 decrease \; SamplePack8Index;
#X obj 193 152 r maxNoOfSamples8;
#X obj 320 166 r AmountOfAudioFilesInSP8;
#X obj 171 230 r maxNoOfSamples8;
#X obj 305 212 s maxNoOfSamples8;
#X obj 144 325 r maxNoOfSamples8;
#X obj 372 289 r maxNoOfSamples8;
#X obj 259 345 s sP8Index;
#X obj 322 386 outlet SP8_Index;
#X obj 144 414 r sP8Index;
#X obj 278 437 r sP8Index;
#X obj 223 523 outlet FirstSampleReachedSP8;
#X obj 129 549 outlet LastSampleReachedSP8;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP8 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X connect 0 0 4 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 2 1 11 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 15 0;
#X connect 5 0 16 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 0 39 0;
#X connect 7 0 40 0;
#X connect 8 0 23 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 7 1;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 12 1;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 17 0 44 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 1 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 43 0;
#X connect 23 0 3 0;
#X connect 23 0 36 0;
#X connect 28 0 0 0;
#X connect 29 0 1 0;
#X connect 30 0 9 0;
#X connect 33 0 13 0;
#X connect 34 0 23 1;
#X connect 34 0 24 0;
#X connect 35 0 11 1;
#X connect 37 0 16 1;
#X connect 38 0 7 2;
#X connect 41 0 18 1;
#X connect 42 0 21 1;
#X restore 377 143 pd My_RSP_IndexGenerator8;
#X obj 524 111 r initIndexBang8;
#X obj 450 193 print SP8>>First Sample Reached;
#X obj 377 217 print SP8>>Last Sample Reached;
#X obj 548 513 makefilename SampleArray8_%d;
#X obj 562 755 r vol8;
#X text 611 751 adjust volume \; (from fader 8);
#X obj 547 811 outlet~ toDacLeft8;
#X obj 696 814 outlet~ toDacRight8;
#X text 1283 160 ***SYNCING PLAYBACK TO METRONOME***;
#X obj 385 115 r indexInit;
#X text 383 66 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 350 239 pd My_RSP_LedAlert;
#X obj 579 367 f;
#X text 613 368 store current selected index;
#X text 684 383 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 579 341 r updateZlnthObjectsBang8;
#X obj 524 391 s currentSelectedIndexSP8;
#X floatatom 578 476 5 0 0 0 - - -;
#X obj 578 454 r indexCorrectionForLoopingSP8;
#X text 700 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack8 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X obj 639 609 tabplay~ \$1;
#X obj 548 609 tabplay~ \$1;
#X text 309 626 "open sine1.wav 32768";
#X obj 254 613 symbol;
#X obj 287 458 r currentlyPlayingSampleNameSP8;
#X msg 254 651 open \$1.wav 32768;
#X obj 332 490 r FolderWithAudioFiles;
#X obj 287 524 pack s s;
#X msg 287 545 \$2SamplePack8/\$1;
#X obj 287 568 pack s;
#X msg 274 724 1;
#X floatatom 605 425 5 0 0 0 - - -;
#X obj 254 756 readsf~ 2;
#X obj 274 696 bang;
#X text 734 544 build array name \; containing the \; selected index
\; so the tabplay object \; knows which array \; to read from.;
#X obj 103 180 s pb8_1;
#X obj 548 430 r pb8_1;
#X obj 83 201 s pb8_2;
#X obj 651 574 r pb8_2;
#X obj 64 222 s pb8_3;
#X obj 254 431 r pb8_3;
#X obj 64 130 t b b b b;
#X obj 124 158 s pb8_0;
#N canvas 117 126 884 574 MY_RSP_playbackMetroSync8 0;
#X text 77 199 get the metronome's 16th notes;
#X obj 412 180 r listFileLengthsInSeconds8;
#X obj 402 269 zl nth;
#X obj 402 332 expr ($f1 * 1000 * 0.98);
#X text 542 324 convert length of wav-file from seconds to milliseconds
and then get only 98 % of that time.;
#X obj 262 367 >=;
#X obj 262 391 sel 1;
#X obj 289 209 r metroHits;
#X obj 262 315 timer;
#X obj 289 268 spigot 0;
#X msg 421 139 1;
#X text 459 139 let metroHits pass;
#X obj 402 107 t b b b;
#X text 468 109 set timer to zero;
#X obj 262 421 t b b;
#X msg 309 421 0;
#N canvas 50 101 1163 566 My_RSP_Looping_Index_Handler8 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 131 356 moses 1;
#X text 203 243 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 176 478 5 0 0 0 - - -;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 270 443 f;
#X floatatom 297 443 5 0 0 0 - - -;
#X obj 170 407 t b b;
#X obj 170 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 442 t f b f;
#X obj 131 31 inlet currentSampleHasReachedItsEnd8;
#X obj 146 132 r currentSelectedIndexSP8;
#X obj 146 209 r lastIndexPlayedSP8;
#X obj 285 419 r currentSelectedIndexSP8;
#X obj 270 465 print SP8: loopingFire8 playing currently selected sample
;
#X obj 170 499 s indexCorrectionForLoopingSP8;
#X obj 150 519 s loopingFire8;
#X obj 131 541 print SP8: loopingFire8 with index correction to;
#X connect 1 0 5 0;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 2 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 8 0 11 0;
#X connect 8 1 15 0;
#X connect 11 0 7 0;
#X connect 12 0 21 0;
#X connect 14 0 12 0;
#X connect 14 1 23 0;
#X connect 15 0 14 0;
#X connect 16 0 24 0;
#X connect 16 1 23 0;
#X connect 16 2 10 0;
#X connect 16 2 22 0;
#X connect 17 0 4 0;
#X connect 18 0 3 0;
#X connect 19 0 6 0;
#X connect 20 0 12 1;
#X connect 20 0 13 0;
#X restore 262 455 pd My_RSP_Looping_Index_Handler8;
#X obj 435 217 r currentSelectedIndexSP8;
#X floatatom 445 239 5 0 0 0 - - -;
#X obj 402 75 r pb8_0;
#X text 556 41 25th of November 2019 \; This subpatch syncs the playback
of the \; wav-file to the bpm-metro of the main patch.;
#X text 25 310 if the end of the wav-file is \; almost reached \, send
a wish for \; playback which will ONLY BE \; ACKNOWLEGDED by the metronome:)
;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 14 0;
#X connect 7 0 9 0;
#X connect 8 0 5 0;
#X connect 9 0 8 1;
#X connect 10 0 9 1;
#X connect 12 0 2 0;
#X connect 12 1 10 0;
#X connect 12 2 8 0;
#X connect 14 0 16 0;
#X connect 14 1 15 0;
#X connect 15 0 9 1;
#X connect 17 0 2 1;
#X connect 17 0 18 0;
#X connect 19 0 12 0;
#X restore 61 294 pd MY_RSP_playbackMetroSync8;
#X obj 524 239 t f f, f 12;
#X connect 0 0 18 0;
#X connect 1 0 31 0;
#X connect 2 0 14 0;
#X connect 3 0 32 0;
#X connect 4 0 17 0;
#X connect 7 0 52 0;
#X connect 8 0 10 0;
#X connect 9 0 10 1;
#X connect 10 0 13 0;
#X connect 10 0 22 0;
#X connect 10 1 12 0;
#X connect 10 1 22 0;
#X connect 10 2 6 0;
#X connect 10 2 55 0;
#X connect 11 0 10 2;
#X connect 14 0 1 0;
#X connect 14 0 3 0;
#X connect 15 0 4 1;
#X connect 15 0 0 1;
#X connect 20 0 10 0;
#X connect 23 0 2 1;
#X connect 23 0 42 0;
#X connect 26 0 23 0;
#X connect 29 0 28 0;
#X connect 29 0 2 1;
#X connect 31 0 0 0;
#X connect 31 1 44 0;
#X connect 32 0 4 0;
#X connect 34 0 36 0;
#X connect 35 0 38 0;
#X connect 36 0 43 0;
#X connect 37 0 38 1;
#X connect 38 0 39 0;
#X connect 39 0 40 0;
#X connect 40 0 34 1;
#X connect 41 0 43 0;
#X connect 43 0 4 0;
#X connect 43 1 0 0;
#X connect 44 0 41 0;
#X connect 47 0 2 0;
#X connect 49 0 31 0;
#X connect 49 0 32 0;
#X connect 51 0 34 0;
#X connect 52 0 50 0;
#X connect 52 1 48 0;
#X connect 52 2 46 0;
#X connect 52 3 53 0;
#X connect 55 0 27 0;
#X connect 55 1 23 1;
#X restore 2137 448 pd My_RSP_SelectAndPlayEngine8;
#X obj 2137 24 inlet metronomeInlet8;
#X obj -102 154 r currentSelectedIndexSP1;
#X obj -117 178 f;
#X floatatom -70 178 5 0 0 0 - - -;
#X obj -98 330 s lastIndexPlayedSP1;
#X obj -52 352 r loopingFire1;
#X text -17 209 fireN is the human pressing the \; play-button and
bangs the second input of the "RSP_Timehandler"-Subpatches. When the
human does \; that \, we remember the index of the \; actual sample
\, that should be played. This index is needed in the "RSP_Timehandler"-Subpatches
below \, in order to keep looping the sample that is currently played.
;
#X text -21 374 loopingFireN bangs the RSP_Timehandler_Subpatches in
order to loop the sample that is currently played;
#X obj 456 190 f;
#X floatatom 503 190 5 0 0 0 - - -;
#X obj 456 141 r fire2;
#X obj 471 166 r currentSelectedIndexSP2;
#X obj 475 314 s lastIndexPlayedSP2;
#X obj 521 363 r loopingFire2;
#X obj 748 204 f;
#X floatatom 795 204 5 0 0 0 - - -;
#X obj 763 180 r currentSelectedIndexSP3;
#X obj 767 306 s lastIndexPlayedSP3;
#X obj 748 155 r fire3;
#X obj 813 359 r loopingFire3;
#X obj 1051 199 f;
#X floatatom 1098 199 5 0 0 0 - - -;
#X obj 1116 356 r loopingFire4;
#X obj 1051 150 r fire4;
#X obj 1066 175 r currentSelectedIndexSP4;
#X obj 1070 307 s lastIndexPlayedSP4;
#X obj -117 277 t b f b;
#X obj -78 306 s updateZlnthObjectsBang1;
#X obj 495 290 s updateZlnthObjectsBang2;
#X obj 748 257 t b f b;
#X obj 787 283 s updateZlnthObjectsBang3;
#X obj 1051 252 t b f b;
#X obj 1090 283 s updateZlnthObjectsBang4;
#X obj 1309 219 f;
#X floatatom 1349 220 5 0 0 0 - - -;
#X obj 1309 252 t b f b;
#X obj 1324 194 r currentSelectedIndexSP5;
#X obj 1348 283 s updateZlnthObjectsBang5;
#X obj 1328 307 s lastIndexPlayedSP5;
#X obj 1374 352 r loopingFire5;
#X obj 1570 219 f;
#X floatatom 1610 220 5 0 0 0 - - -;
#X obj 1570 252 t b f b;
#X obj 1570 167 r fire6;
#X obj 1585 194 r currentSelectedIndexSP6;
#X obj 1609 283 s updateZlnthObjectsBang6;
#X obj 1589 307 s lastIndexPlayedSP6;
#X obj 1635 352 r loopingFire6;
#X obj 1909 229 f;
#X floatatom 1946 229 5 0 0 0 - - -;
#X obj 1909 262 t b f b;
#X obj 1924 204 r currentSelectedIndexSP7;
#X obj 1909 177 r fire7;
#X obj 1948 293 s updateZlnthObjectsBang7;
#X obj 1928 317 s lastIndexPlayedSP7;
#X obj 1974 353 r loopingFire7;
#X obj 2201 239 f;
#X floatatom 2238 239 5 0 0 0 - - -;
#X obj 2201 272 t b f b;
#X obj 2201 187 r fire8;
#X obj 2216 214 r currentSelectedIndexSP8;
#X obj 2240 303 s updateZlnthObjectsBang8;
#X obj 2220 327 s lastIndexPlayedSP8;
#X obj 2266 356 r loopingFire8;
#X obj 456 255 t b f b;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay2 0;
#X obj 240 -267 zl nth;
#X obj 240 -481 r listFileNames2;
#X obj 356 -329 r currentSelectedIndexSP2;
#X obj 18 -328 r currentPlayingSampleNameBang2;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 865 -60 \; SP2CurrentlySelected label \$1;
#X msg 240 -57 \; SP2CurrentlyPlaying label \$1;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X obj 240 -160 symbol;
#X msg 240 -80 label \$1;
#X obj 240 -183 route 0 1, f 99;
#X obj 865 -150 symbol;
#X msg 865 -85 label \$1;
#X text 317 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 865 -129 t s s, f 35;
#X obj 1072 8 outlet selectedSample2;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also shown in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 442 5 outlet startingSample2;
#X obj 240 -139 t s s s, f 68;
#X obj 645 -62 s currentlyPlayingSampleNameSP2;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 4 1 10 0;
#X connect 4 2 0 1;
#X connect 5 0 0 0;
#X connect 5 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 11 0;
#X connect 10 0 9 1;
#X connect 11 0 14 0;
#X connect 12 0 25 0;
#X connect 13 0 7 0;
#X connect 14 0 12 0;
#X connect 14 1 15 0;
#X connect 15 0 21 0;
#X connect 16 0 6 0;
#X connect 21 0 16 0;
#X connect 21 1 22 0;
#X connect 25 0 13 0;
#X connect 25 1 24 0;
#X connect 25 2 26 0;
#X restore 381 1298 pd My_RSP_SampleNameDisplay2;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay1 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -207 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames1;
#X obj 18 -328 r currentPlayingSampleNameBang1;
#X obj 356 -329 r currentSelectedIndexSP1;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also played in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 240 -142 symbol;
#X msg 240 -62 label \$1;
#X obj 240 -165 route 0 1, f 99;
#X obj 885 -132 symbol;
#X msg 885 -67 label \$1;
#X obj 885 -111 t s s, f 35;
#X msg 240 -39 \; SP1CurrentlyPlaying label \$1;
#X msg 885 -42 \; SP1CurrentlySelected label \$1;
#X obj 439 5 outlet startingSample1;
#X obj 1092 8 outlet selectedSample1;
#X obj 240 -121 t s s s, f 67;
#X obj 639 -62 s currentlyPlayingSampleNameSP1;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 17 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 15 0 25 0;
#X connect 16 0 21 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 24 0;
#X connect 25 0 16 0;
#X connect 25 1 23 0;
#X connect 25 2 26 0;
#X restore -178 1307 pd My_RSP_SampleNameDisplay1;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay3 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames3;
#X obj 18 -328 r currentPlayingSampleNameBang3;
#X obj 356 -329 r currentSelectedIndexSP3;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also played in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 240 -160 symbol;
#X msg 240 -80 label \$1;
#X obj 240 -183 route 0 1, f 99;
#X obj 861 -155 symbol;
#X msg 861 -90 label \$1;
#X obj 861 -134 t s s, f 35;
#X msg 240 -57 \; SP3CurrentlyPlaying label \$1;
#X msg 861 -65 \; SP3CurrentlySelected label \$1;
#X obj 430 32 outlet startingSample3;
#X obj 1068 3 outlet selectedSample3;
#X obj 240 -139 t s s s, f 64;
#X obj 621 -81 s currentlyPlayingSampleNameSP3;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 17 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 15 0 25 0;
#X connect 16 0 21 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 24 0;
#X connect 25 0 16 0;
#X connect 25 1 23 0;
#X connect 25 2 26 0;
#X restore 671 1297 pd My_RSP_SampleNameDisplay3;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay4 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames4;
#X obj 18 -328 r currentPlayingSampleNameBang4;
#X obj 356 -329 r currentSelectedIndexSP4;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also played in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 240 -160 symbol;
#X msg 240 -80 label \$1;
#X obj 240 -183 route 0 1, f 99;
#X obj 855 -155 symbol;
#X msg 855 -90 label \$1;
#X obj 855 -134 t s s, f 35;
#X msg 240 -57 \; SP4CurrentlyPlaying label \$1;
#X msg 855 -65 \; SP4CurrentlySelected label \$1;
#X obj 421 5 outlet startingSample4;
#X obj 1062 3 outlet selectedSample4;
#X obj 240 -139 t s s s, f 61;
#X obj 603 -91 s currentlyPlayingSampleNameSP4;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 17 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 15 0 25 0;
#X connect 16 0 21 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 24 0;
#X connect 25 0 16 0;
#X connect 25 1 23 0;
#X connect 25 2 26 0;
#X restore 971 1306 pd My_RSP_SampleNameDisplay4;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay5 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames5;
#X obj 18 -328 r currentPlayingSampleNameBang5;
#X obj 356 -329 r currentSelectedIndexSP5;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also played in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 240 -160 symbol;
#X msg 240 -70 label \$1;
#X obj 240 -183 route 0 1, f 160;
#X obj 838 -120 symbol;
#X msg 838 -55 label \$1;
#X obj 838 -99 t s s, f 35;
#X msg 240 -47 \; SP5CurrentlyPlaying label \$1;
#X msg 838 -30 \; SP5CurrentlySelected label \$1;
#X obj 427 15 outlet startingSample5;
#X obj 1045 38 outlet selectedSample5;
#X obj 240 -129 t s s s, f 63;
#X obj 615 -90 s currentlyPlayingSampleNameSP5;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 17 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 15 0 25 0;
#X connect 16 0 21 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 24 0;
#X connect 25 0 16 0;
#X connect 25 1 23 0;
#X connect 25 2 26 0;
#X restore 1233 1307 pd My_RSP_SampleNameDisplay5;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay6 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames6;
#X obj 18 -328 r currentPlayingSampleNameBang6;
#X obj 356 -329 r currentSelectedIndexSP6;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also played in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 240 -160 symbol;
#X msg 240 -80 label \$1;
#X obj 240 -183 route 0 1, f 164;
#X obj 730 -155 symbol;
#X msg 730 -85 label \$1;
#X obj 730 -129 t s s, f 35;
#X msg 240 -57 \; SP6CurrentlyPlaying label \$1;
#X msg 730 -60 \; SP6CurrentlySelected label \$1;
#X obj 379 5 outlet startingSample6;
#X obj 937 8 outlet selectedSample6;
#X obj 240 -139 t s s s, f 47;
#X obj 519 -103 s currentlyPlayingSampleNameSP6;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 17 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 15 0 25 0;
#X connect 16 0 21 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 24 0;
#X connect 25 0 16 0;
#X connect 25 1 23 0;
#X connect 25 2 26 0;
#X restore 1509 1312 pd My_RSP_SampleNameDisplay6;
#N canvas 0 93 1280 627 My_RSP_SampleNameDisplay7 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -348 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames7;
#X obj 18 -328 r currentPlayingSampleNameBang7;
#X obj 356 -329 r currentSelectedIndexSP7;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also played in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X obj 240 -160 symbol;
#X msg 240 -80 label \$1;
#X obj 240 -183 route 0 1, f 161;
#X obj 721 -150 symbol;
#X msg 721 -85 label \$1;
#X obj 721 -129 t s s, f 35;
#X msg 240 -57 \; SP7CurrentlyPlaying label \$1;
#X msg 721 -60 \; SP7CurrentlySelected label \$1;
#X obj 340 5 outlet startingSample7;
#X obj 928 8 outlet selectedSample7;
#X obj 240 -139 t s s s, f 34;
#X obj 441 -103 s currentlyPlayingSampleNameSP7;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 17 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 15 0 25 0;
#X connect 16 0 21 0;
#X connect 17 0 15 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 24 0;
#X connect 25 0 16 0;
#X connect 25 1 23 0;
#X connect 25 2 26 0;
#X restore 1854 1302 pd My_RSP_SampleNameDisplay7;
#N canvas 153 85 1083 528 My_RSP_SampleNameDisplay8 0;
#X obj 240 -267 zl nth;
#X obj 356 -308 t b b f;
#X obj 18 -307 t b b;
#X msg 45 -279 0;
#X obj 240 -237 pack s f;
#X msg 375 -274 1;
#X msg 240 -212 \$2 \$1;
#X text 307 -227 route the list (e.g. 0 vibrawusel or 1 vibrawusel)
\, depending on whether the playbutton is pressed or the encoder is
turned in order to select another sample.;
#X text 353 -368 sample index comes in here;
#X text 15 -355 this is hit when the play button \; is pressed;
#X text 256 -453 receiving a list of filenames \; for SamplePackXY
;
#X obj 240 -481 r listFileNames8;
#X obj 18 -328 r currentPlayingSampleNameBang8;
#X obj 356 -349 r currentSelectedIndexSP8;
#X obj 240 -160 symbol;
#X msg 240 -80 label \$1;
#X obj 240 -183 route 0 1, f 134;
#X obj 640 -150 symbol;
#X msg 640 -85 label \$1;
#X obj 640 -129 t s s, f 35;
#X msg 240 -57 \; SP8CurrentlyPlaying label \$1;
#X msg 640 -60 \; SP8CurrentlySelected label \$1;
#X obj 340 5 outlet startingSample8;
#X obj 847 8 outlet selectedSample8;
#X obj 240 -139 t s s s, f 34;
#X obj 441 -103 s currentlyPlayingSampleNameSP8;
#X text 519 -505 14th February 2019 \; This subpatch collects all \;
sample names in ../SamplePackXY \; within the zl nth object. When the
user selectes a new sample \; by turning a knob \, the currently selected
\; sample name is displayed in the main parent patch as "currently
selected". When the user presses a play button \, the sample name that
is then played is also shown in the main parent patch as "currently
playing". \; The names of the currently playing and currently selected
samples are important for the notification of non-harmonic samples.
The sample names are output to the next subpatch where the latter is
implemented.;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 1 2 0 1;
#X connect 2 0 0 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 16 0;
#X connect 11 0 0 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 14 0 24 0;
#X connect 15 0 20 0;
#X connect 16 0 14 0;
#X connect 16 1 17 0;
#X connect 17 0 19 0;
#X connect 18 0 21 0;
#X connect 19 0 18 0;
#X connect 19 1 23 0;
#X connect 24 0 15 0;
#X connect 24 1 22 0;
#X connect 24 2 25 0;
#X restore 2148 1293 pd My_RSP_SampleNameDisplay8;
#X obj -178 1344 harmonyDetection, f 422;
#N canvas 162 69 1075 621 My_RSP_SelectAndPlayEngine1_bpmSyncTest 0
;
#X obj 8 21 inlet playButton1;
#X obj 267 9 inlet selectUp1;
#X obj 380 9 inlet selectDown1;
#N canvas 96 74 1013 640 My_RSP_IndexGenerator1 0;
#X obj 129 222 moses;
#X obj 201 205 / 2;
#X msg 129 173 1;
#X obj 129 283 +;
#X obj 159 283 f;
#X obj 322 318 clip;
#X obj 305 143 t b b;
#X obj 305 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 332 239 1;
#X obj 156 253 -;
#X obj 163 173 f;
#X obj 193 173 - 1;
#X floatatom 230 393 5 0 0 0 - - -;
#X obj 223 371 <= 0;
#X obj 129 349 >;
#X obj 269 406 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 129 471 spigot;
#X obj 129 447 f;
#X obj 129 374 t b f;
#X obj 144 414 r sP1Index;
#X obj 229 433 t b f;
#X obj 229 454 f;
#X obj 229 480 spigot;
#X obj 284 437 r sP1Index;
#X obj 320 166 r AmountOfAudioFilesInSP1;
#X obj 305 188 f;
#X floatatom 342 189 5 0 0 0 - - -;
#X obj 163 62 inlet decreaseIndexSP1;
#X obj 129 36 inlet increaseIndexSP1;
#X obj 305 89 inlet bangToInitWithNumberOfIndexes;
#X obj 129 549 outlet LastSampleReachedSP1;
#X obj 229 523 outlet FirstSampleReachedSP1;
#X obj 259 351 s sP1Index;
#X obj 322 392 outlet SP1_Index;
#X text 590 36 This patch puts out the desired index number which controls
the desired audiosample to be played. \; inlets: \; left: increase
index \; middle: decrease index \; right: init the patch with the max
number of audio files \; Before the patch is init-banged \, it has
to receive "AmountOfAudioSamplesInSP1 to know the max number the index
is allowed to be \; outlets \; left: bang when the maximum index is
reached \; middle: bang when the minimum index is reached \; right:
current index;
#X obj 305 212 s maxNoOfSamples1;
#X obj 193 152 r maxNoOfSamples1;
#X obj 144 325 r maxNoOfSamples1;
#X obj 171 230 r maxNoOfSamples1;
#X obj 372 295 r maxNoOfSamples1;
#X text 11 104 increase \; SamplePack1Index;
#X text 175 108 decrease \; SamplePack1Index;
#X text 437 394 output the index;
#X text 414 527 output warning bang (first index reached);
#X text 302 550 output warning bang (last index reached);
#X connect 0 0 3 0;
#X connect 0 1 9 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 3 0 13 0;
#X connect 3 0 14 0;
#X connect 4 0 3 1;
#X connect 5 0 4 0;
#X connect 5 0 32 0;
#X connect 5 0 33 0;
#X connect 6 0 25 0;
#X connect 6 1 8 0;
#X connect 7 0 6 0;
#X connect 8 0 5 1;
#X connect 9 0 3 0;
#X connect 10 0 0 0;
#X connect 11 0 10 1;
#X connect 12 0 15 0;
#X connect 12 0 20 0;
#X connect 13 0 12 0;
#X connect 14 0 18 0;
#X connect 16 0 30 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X connect 18 1 16 1;
#X connect 19 0 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 1;
#X connect 21 0 22 0;
#X connect 22 0 31 0;
#X connect 23 0 21 1;
#X connect 24 0 25 1;
#X connect 24 0 26 0;
#X connect 25 0 1 0;
#X connect 25 0 35 0;
#X connect 27 0 10 0;
#X connect 28 0 2 0;
#X connect 29 0 7 0;
#X connect 36 0 11 0;
#X connect 37 0 14 1;
#X connect 38 0 9 1;
#X connect 39 0 5 2;
#X restore 267 143 pd My_RSP_IndexGenerator1;
#X obj 275 197 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 346 172 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 265 531 zl nth;
#X obj 384 598 zl nth;
#X floatatom 414 167 5 0 0 0 - - -;
#X obj 265 664 phasor~;
#X obj 266 703 *~;
#X obj 399 414 t f f f;
#X obj 571 593 makefilename SampleArray1_%d;
#X obj 529 792 *~;
#X obj 529 738 tabread4~ \$1;
#X msg 662 619 set \$1_right;
#X obj 399 389 f;
#X msg 23 252 0;
#X msg 68 527 0;
#X obj 381 739 tabread4~ \$1;
#X msg 571 618 set \$1_left;
#X obj 380 791 *~;
#X floatatom 384 624 20 0 0 0 - - -;
#X obj 395 765 r vol1;
#X obj 71 176 s pb1_1;
#X obj 399 367 r pb1_1;
#X obj 55 199 s pb1_2;
#X obj 394 566 r pb1_2;
#X obj 39 223 s pb1_3;
#X obj 211 444 r pb1_3;
#X text 448 149 generate an index between 1 and max number of audio
files \; in folder "samplepack1" to select one audio file to play.
;
#X text 474 411 pass the index to the zl nth objects \; to determine
which values should be \; grabbed out of the value lists the next \;
time the zl nth objects are banged by the \; "playbang (pb1_n).;
#X text 131 178 pb = playbang;
#X text 50 246 start playing \; the audio file;
#X text 450 587 grab number of \; samples of the \; selected audio
file;
#X text 160 535 grab frequency \; for phasor \; according to the \;
selected audio \; file;
#X text 757 624 build array name \; containing the \; selected index
\; so the tabread object \; knows which array \; to read from.;
#X text 466 832 AUDIO OUTPUT;
#X obj 380 811 outlet~ toDacLeft1;
#X obj 530 812 outlet~ toDacRight1;
#X text 444 761 adjust volume \; (from fader 1);
#X text 590 8 13th April 2018 \; This patch plays the audio files in
the \; SamplePack1 folder. The desired audio file \; is selected by
an index. The index can be \; changed by the 2nd and 3rd inlet (e.g.
by \; the computer's keys or hid input). A bang on the first inlet
plays the selected \; audio file. \; \; OUTLETS: Audio output for dac
object (left and right);
#X obj 265 495 r listValuesForPhasor1;
#X obj 384 546 r listNumberOfSamplesOfEachAudioFile1;
#X obj 414 111 r initIndexBang1;
#X obj 68 497 r stopAll;
#X obj 134 740 r metroHits;
#X obj 134 773 snapshot~;
#X obj 134 819 /;
#X text -34 501 stop playing \; and reset phase;
#X text -39 718 ***SYNCING PLAYBACK TO METRONOME***;
#X text -61 796 divide by the number of \; samples of the currently
\; playing audio file to make the \; position a value between 0 and
1;
#X text -59 857 output on the right outlet \; if the end is almost
reached.;
#X text -22 906 send a wish for playback \; which will ONLY BE ACKNOWLEGDED
\; by the metronome:);
#X text -62 741 get the metronome's 16th notes;
#X text -60 763 get position of the \; currently playing sample;
#X floatatom 141 895 5 0 0 0 - - -;
#X floatatom 210 967 5 0 0 0 - - -;
#X obj 210 991 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 253 907 0;
#X obj 191 907 spigot 1;
#X msg 191 1073 1;
#X obj 191 1097 s openSpigot1;
#X obj 236 880 r openSpigot1;
#X obj 191 937 t b f b;
#X obj 191 1048 delay 2000;
#X obj 275 95 r indexInit;
#X text 273 46 select first \; sample after \; loading the patch;
#N canvas 329 283 450 300 My_RSP_LedAlert 0;
#X text 199 46 this patch toggles the blue led \; on gpio24 to show
that the first or last \; sample is reached.;
#X obj 71 150 wiringPi_gpio 24 0 0;
#X msg 71 119 1;
#X obj 44 85 t b b;
#X msg 44 217 0;
#X obj 44 186 delay 100;
#X obj 44 30 inlet alertBang;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X restore 225 239 pd My_RSP_LedAlert;
#X obj 267 217 print SP1>>Last Sample Reached;
#X obj 340 192 print SP1>>First Sample Reached;
#X floatatom 616 394 5 0 0 0 - - -;
#X obj 616 372 r indexCorrectionForLoopingSP1;
#N canvas 1 102 1015 566 My_RSP_Looping_Index_Handler1 0;
#X text 603 28 29th August 2018 This subpatch receives a bang on its
inlet \, when the currently played sample has reached its end. This
subpatch then checks if the currently playing sample is still selected
by the user or not. If not \, there has to be sent an index correction
to the zl nth objects of the parent patch ("RSP_SelectAndPlayEngine")
in order to loop the currently playing sample;
#X obj 131 301 ==;
#X obj 146 132 r currentSelectedIndexSP1;
#X floatatom 146 278 5 0 0 0 - - -;
#X floatatom 146 158 5 0 0 0 - - -;
#X obj 146 209 r lastIndexPlayedSP1;
#X obj 131 186 f;
#X floatatom 131 328 5 0 0 0 - - -;
#X obj 146 240 t f f;
#X obj 131 410 f;
#X obj 170 499 s indexCorrectionForLoopingSP1;
#X obj 131 356 moses 1;
#X text 243 233 if the currentSelectedIndex is not equal to the lastPlayedIndex
\, then moses receives a 0 and bangs at its left outlet. In this case
we have to send indexCorrectionforLooping (==the lastPlayedIndex) in
front of the zl nth objects above. By this \, the sample that is currently
playing is looped when it has reached its end. Otherwise the system
would always play the currently selected sample \, which might be different
from the currently played sample because the user might have chosen
another sample in the meantime \;;
#X floatatom 176 478 5 0 0 0 - - -;
#X obj 131 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 150 519 s loopingFire1;
#X obj 270 465 print SP1: loopingFire1 playing currently selected sample
;
#X obj 285 419 r currentSelectedIndexSP1;
#X obj 270 443 f;
#X floatatom 297 443 5 0 0 0 - - -;
#X obj 131 541 print SP1: loopingFire1 with index correction to;
#X obj 131 31 inlet currentSampleHasReachedItsEnd1;
#X text 436 242 comment;
#X obj 170 407 t b b;
#X obj 170 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 131 442 t f b f;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 1 1;
#X connect 4 0 6 1;
#X connect 5 0 8 0;
#X connect 6 0 1 0;
#X connect 7 0 11 0;
#X connect 8 0 3 0;
#X connect 8 1 9 1;
#X connect 9 0 25 0;
#X connect 11 0 14 0;
#X connect 11 1 24 0;
#X connect 14 0 9 0;
#X connect 17 0 18 1;
#X connect 17 0 19 0;
#X connect 18 0 16 0;
#X connect 21 0 6 0;
#X connect 23 0 18 0;
#X connect 23 1 15 0;
#X connect 24 0 23 0;
#X connect 25 0 20 0;
#X connect 25 1 15 0;
#X connect 25 2 13 0;
#X connect 25 2 10 0;
#X restore 210 1016 pd My_RSP_Looping_Index_Handler1;
#X text 263 929 here we only let the first value \; of the moses' right
output come through;
#X obj 469 287 f;
#X obj 469 249 r updateZlnthObjectsBang1;
#X obj 414 311 s currentSelectedIndexSP1;
#X text 503 288 store current selected index;
#X text 574 303 send currentSelectedIndex to subpatch "Looping_Index_Handler"
and to parent patch;
#X obj 414 249 t f f;
#X floatatom 180 843 5 0 0 0 - - -;
#X obj 134 865 moses 0.98;
#X floatatom 265 584 40 0 0 0 - - -;
#X obj 355 1174 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -257985
-1 -1 0 1;
#X floatatom 214 809 20 0 0 0 - - -;
#X text 595 1012 ein bang im parentpatch ist ressourcenfreundlicher
;
#X floatatom 774 826 20 0 0 0 - - -;
#X obj 553 1069 f 0;
#X floatatom 552 1102 5 0 0 0 - - -;
#X obj 584 1042 +;
#X obj 554 1163 moses 1;
#X obj 553 1023 bng 15 50 10 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 553 869 r metro4_4;
#X floatatom 674 1078 5 0 0 0 - - -;
#X obj 631 1045 f;
#X obj 631 1025 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 755 1093 f 1;
#X obj 755 1124 -;
#X floatatom 618 1145 10 0 0 0 - - -;
#X obj 774 899 * 60;
#X floatatom 774 928 5 0 0 0 - - -;
#X floatatom 790 1068 10 0 0 0 - - -;
#X obj 983 919 / 488;
#X obj 928 942 / 122;
#X obj 947 921 / 244;
#X msg 598 1088 0;
#X obj 589 904 r metroFirstHit;
#X msg 589 933 1;
#X obj 553 968 spigot;
#X obj 992 950 / 100;
#X obj 265 620 *;
#X msg 624 951 0;
#X obj 774 876 * 1;
#X obj 789 851 r PhasorFrequencyTimingFactor;
#X floatatom 841 891 5 0 0 0 - - -;
#X obj 789 970 r currentBPM;
#X obj 774 996 /;
#X floatatom 826 995 5 0 0 0 - - -;
#X obj 8 149 t b b b b b;
#X obj 8 289 s pb1_4;
#X text -24 310 start time sync mechanism;
#X obj 750 1046 r pb1_4;
#X obj -17 604 r PhasorFrequencyTimingFactor;
#X floatatom 7 641 5 0 0 0 - - -;
#X obj 173 406 r pb1_4, f 43;
#X connect 0 0 119 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 3 0 68 0;
#X connect 3 0 69 0;
#X connect 3 1 5 0;
#X connect 3 1 68 0;
#X connect 3 1 70 0;
#X connect 3 2 8 0;
#X connect 6 0 83 0;
#X connect 6 0 87 0;
#X connect 7 0 10 1;
#X connect 7 0 22 0;
#X connect 8 0 80 0;
#X connect 9 0 10 0;
#X connect 10 0 14 0;
#X connect 10 0 19 0;
#X connect 10 0 47 0;
#X connect 11 0 6 1;
#X connect 11 1 7 1;
#X connect 11 2 12 0;
#X connect 12 0 15 0;
#X connect 12 0 20 0;
#X connect 13 0 39 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 11 0;
#X connect 17 0 9 1;
#X connect 18 0 9 0;
#X connect 19 0 21 0;
#X connect 20 0 19 0;
#X connect 21 0 38 0;
#X connect 22 0 48 1;
#X connect 23 0 21 1;
#X connect 23 0 13 1;
#X connect 25 0 16 0;
#X connect 27 0 7 0;
#X connect 29 0 6 0;
#X connect 42 0 6 0;
#X connect 43 0 7 0;
#X connect 44 0 3 2;
#X connect 45 0 18 0;
#X connect 46 0 47 0;
#X connect 47 0 48 0;
#X connect 47 0 85 0;
#X connect 48 0 81 0;
#X connect 48 0 82 0;
#X connect 57 0 58 0;
#X connect 58 0 73 0;
#X connect 59 0 60 1;
#X connect 60 0 64 0;
#X connect 61 0 62 0;
#X connect 63 0 60 1;
#X connect 64 0 65 0;
#X connect 64 1 57 0;
#X connect 64 2 59 0;
#X connect 65 0 61 0;
#X connect 66 0 3 0;
#X connect 72 0 16 1;
#X connect 72 0 71 0;
#X connect 75 0 16 1;
#X connect 76 0 75 0;
#X connect 80 0 77 0;
#X connect 80 1 75 1;
#X connect 82 0 56 0;
#X connect 83 0 111 0;
#X connect 87 0 113 0;
#X connect 88 0 90 0;
#X connect 88 0 89 0;
#X connect 89 0 9 1;
#X connect 89 0 91 0;
#X connect 89 0 84 0;
#X connect 90 0 88 1;
#X connect 91 1 96 0;
#X connect 92 0 88 0;
#X connect 93 0 109 0;
#X connect 95 0 94 0;
#X connect 95 0 88 1;
#X connect 96 0 95 0;
#X connect 97 0 98 0;
#X connect 98 0 99 0;
#X connect 99 0 91 1;
#X connect 100 0 101 0;
#X connect 101 0 104 0;
#X connect 101 0 105 0;
#X connect 101 0 117 0;
#X connect 102 0 95 1;
#X connect 102 0 98 1;
#X connect 102 0 90 1;
#X connect 106 0 88 1;
#X connect 107 0 108 0;
#X connect 108 0 109 1;
#X connect 109 0 92 0;
#X connect 111 0 9 0;
#X connect 112 0 109 1;
#X connect 113 0 100 0;
#X connect 114 0 115 0;
#X connect 114 0 113 1;
#X connect 116 0 117 1;
#X connect 116 0 118 0;
#X connect 117 0 102 0;
#X connect 119 0 120 0;
#X connect 119 1 17 0;
#X connect 119 2 28 0;
#X connect 119 3 26 0;
#X connect 119 4 24 0;
#X connect 122 0 97 0;
#X connect 123 0 111 1;
#X connect 123 0 124 0;
#X connect 125 0 111 0;
#X restore 20 463 pd My_RSP_SelectAndPlayEngine1_bpmSyncTest;
#X obj 533 988 r metroWholeBeats;
#X obj 535 1009 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 393 1041 jakobsdelay;
#X obj -179 1274 dac~ 1 2;
#X obj -179 1274 dac~ 1 2;
#X obj -37 1007 r metroWholeBeats;
#X obj -37 1028 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -179 1061 jakobsdelay;
#X obj 684 1264 dac~ 1 2;
#X obj 684 1264 dac~ 1 2;
#X obj 789 988 r metroWholeBeats;
#X obj 789 1009 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 683 1041 jakobsdelay;
#X obj 986 1258 dac~ 1 2;
#X obj 986 1258 dac~ 1 2;
#X obj 1092 998 r metroWholeBeats;
#X obj 1092 1019 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 986 1041 jakobsdelay;
#X obj 1359 997 r metroWholeBeats;
#X obj 1359 1018 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1245 1040 jakobsdelay;
#X obj 1658 997 r metroWholeBeats;
#X obj 1658 1018 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1505 1050 jakobsdelay;
#X obj 1950 1017 r metroWholeBeats;
#X obj 1950 1038 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1844 1062 jakobsdelay;
#X obj 2288 1017 r metroWholeBeats;
#X obj 2288 1038 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 2135 1070 jakobsdelay;
#X obj -180 834 mono-pureverb4;
#X obj -180 1241 hip~ 1;
#X obj -135 1241 hip~ 1;
#X obj 392 1230 hip~ 1;
#X obj 436 1230 hip~ 1;
#X obj 684 1238 hip~ 1;
#X obj 728 1238 hip~ 1;
#X obj 985 1233 hip~ 1;
#X obj 1029 1233 hip~ 1;
#X obj 987 763 mono-pureverb4;
#X obj 1246 1261 dac~ 1 2;
#X obj 1246 1261 dac~ 1 2;
#X obj 1245 1236 hip~ 1;
#X obj 1289 1236 hip~ 1;
#X obj 1244 762 mono-pureverb4;
#X obj 1508 1254 dac~ 1 2;
#X obj 1508 1254 dac~ 1 2;
#X obj 1507 1229 hip~ 1;
#X obj 1551 1229 hip~ 1;
#X obj 1847 1270 dac~ 1 2;
#X obj 1847 1270 dac~ 1 2;
#X obj 1846 1239 hip~ 1;
#X obj 1890 1239 hip~ 1;
#X obj 2137 1265 dac~ 1 2;
#X obj 2137 1265 dac~ 1 2;
#X obj 2136 1244 hip~ 1;
#X obj 2180 1244 hip~ 1;
#X obj 2136 749 mono-pureverb4;
#X obj -123 757 valueorupdate;
#X obj 431 752 valueorupdate;
#X obj 718 757 valueorupdate;
#X obj 1044 711 valueorupdate;
#X obj 1301 707 valueorupdate;
#X obj 1525 708 valueorupdate;
#X obj 1887 703 valueorupdate;
#X obj 2193 685 valueorupdate;
#X obj -123 735 r parameter1_1;
#X obj 431 726 r parameter1_2;
#X obj 718 725 r parameter1_3;
#X obj 1044 685 r parameter1_4;
#X obj 1301 685 r parameter1_5;
#X obj 1525 683 r parameter1_6;
#X obj 1887 679 r parameter1_7;
#X obj 2193 659 r parameter1_8;
#X msg 1044 732 2 \$1;
#X msg -123 780 2 \$1;
#X msg 1301 734 2 \$1;
#X msg 2193 706 2 \$1;
#X obj -23 717 valueorupdate;
#X obj -23 695 r parameter2_1;
#X msg -23 740 3 \$1;
#X obj 525 749 valueorupdate;
#X obj 525 727 r parameter2_2;
#X obj 815 749 valueorupdate;
#X obj 815 727 r parameter2_3;
#X obj 1136 708 valueorupdate;
#X obj 1136 686 r parameter2_4;
#X msg 1136 729 3 \$1;
#X obj 1396 708 valueorupdate;
#X msg 1396 729 3 \$1;
#X obj 1396 686 r parameter2_5;
#X obj 1624 707 valueorupdate;
#X obj 1624 685 r parameter2_6;
#X obj 1984 703 valueorupdate;
#X obj 1984 681 r parameter2_7;
#X obj 2284 683 valueorupdate;
#X obj 2284 661 r parameter2_8;
#X msg 2284 704 3 \$1;
#X obj 77 718 valueorupdate;
#X obj 77 696 r parameter3_1;
#X msg 77 741 0 \$1;
#X obj 1141 636 valueorupdate;
#X msg 1141 659 0 \$1;
#X obj 1141 614 r parameter3_4;
#X obj 1401 636 valueorupdate;
#X msg 1401 659 0 \$1;
#X obj 1401 614 r parameter3_5;
#X obj 2293 615 valueorupdate;
#X obj 2293 589 r parameter3_8;
#X msg 2293 636 0 \$1;
#X obj 174 718 valueorupdate;
#X obj 174 696 r parameter4_1;
#X msg 174 741 1 \$1;
#X obj 1045 638 valueorupdate;
#X msg 1045 661 1 \$1;
#X obj 1045 616 r parameter4_4;
#X obj 1302 635 valueorupdate;
#X msg 1302 658 1 \$1;
#X obj 1302 613 r parameter4_5;
#X obj 2194 614 valueorupdate;
#X msg 2194 637 1 \$1;
#X obj 2194 592 r parameter4_8;
#X obj -90 924 r parameter5_1;
#X obj -90 946 valueorupdate;
#X floatatom -90 977 5 0 0 0 - - -;
#X obj 443 929 valueorupdate;
#X floatatom 443 950 5 0 0 0 - - -;
#X obj 10 946 valueorupdate;
#X obj 10 924 r parameter6_1;
#X obj 543 929 valueorupdate;
#X obj 443 907 r parameter5_2;
#X obj 543 907 r parameter6_2;
#X obj 773 929 valueorupdate;
#X obj 873 929 valueorupdate;
#X obj 773 907 r parameter5_3;
#X obj 873 907 r parameter6_3;
#X obj 1053 929 valueorupdate;
#X obj 1153 929 valueorupdate;
#X obj 1053 907 r parameter5_4;
#X obj 1153 907 r parameter6_4;
#X obj 1283 929 valueorupdate;
#X obj 1383 929 valueorupdate;
#X obj 1283 907 r parameter5_5;
#X obj 1383 907 r parameter6_5;
#X obj 1562 929 valueorupdate;
#X obj 1662 929 valueorupdate;
#X obj 1562 907 r parameter5_6;
#X obj 1662 907 r parameter6_6;
#X obj 1862 929 valueorupdate;
#X obj 1962 929 valueorupdate;
#X obj 1862 907 r parameter5_7;
#X obj 1962 907 r parameter6_7;
#X obj 2182 939 valueorupdate;
#X obj 2282 939 valueorupdate;
#X obj 2182 917 r parameter5_8;
#X obj 2282 917 r parameter6_8;
#X connect 0 0 148 0;
#X connect 0 1 148 0;
#X connect 1 0 0 0;
#X connect 2 0 45 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 8 0 10 1;
#X connect 9 0 10 2;
#X connect 10 0 120 0;
#X connect 10 1 120 1;
#X connect 13 0 16 0;
#X connect 14 0 17 1;
#X connect 15 0 17 2;
#X connect 16 0 17 0;
#X connect 17 0 130 0;
#X connect 17 1 130 1;
#X connect 18 0 20 1;
#X connect 19 0 20 2;
#X connect 20 0 157 0;
#X connect 20 1 157 0;
#X connect 21 0 20 0;
#X connect 22 0 21 0;
#X connect 23 0 76 0;
#X connect 24 0 27 0;
#X connect 25 0 27 1;
#X connect 26 0 27 2;
#X connect 27 0 162 0;
#X connect 27 1 162 0;
#X connect 28 0 24 0;
#X connect 29 0 32 2;
#X connect 30 0 32 0;
#X connect 31 0 32 1;
#X connect 32 0 141 0;
#X connect 32 1 141 1;
#X connect 33 0 30 0;
#X connect 34 0 37 2;
#X connect 35 0 37 0;
#X connect 36 0 37 1;
#X connect 37 0 144 0;
#X connect 37 1 144 1;
#X connect 38 0 35 0;
#X connect 39 0 42 0;
#X connect 40 0 42 1;
#X connect 41 0 42 2;
#X connect 42 0 175 0;
#X connect 42 1 175 0;
#X connect 43 0 39 0;
#X connect 44 0 45 1;
#X connect 44 0 46 0;
#X connect 45 0 69 0;
#X connect 48 0 1 2;
#X connect 51 0 107 0;
#X connect 53 0 51 0;
#X connect 54 0 51 1;
#X connect 54 0 52 0;
#X connect 56 0 7 2;
#X connect 57 0 72 0;
#X connect 59 0 57 1;
#X connect 59 0 58 0;
#X connect 61 0 57 0;
#X connect 62 0 16 2;
#X connect 63 0 74 0;
#X connect 65 0 21 2;
#X connect 66 0 63 0;
#X connect 67 0 63 1;
#X connect 67 0 64 0;
#X connect 69 0 1 1;
#X connect 69 1 47 0;
#X connect 69 2 70 0;
#X connect 72 0 16 1;
#X connect 72 1 60 0;
#X connect 72 2 73 0;
#X connect 74 0 21 1;
#X connect 74 1 68 0;
#X connect 74 2 75 0;
#X connect 76 0 78 0;
#X connect 78 0 24 1;
#X connect 78 1 81 0;
#X connect 78 2 80 0;
#X connect 79 0 76 1;
#X connect 79 0 77 0;
#X connect 82 0 24 2;
#X connect 83 0 85 0;
#X connect 85 0 30 1;
#X connect 85 1 89 0;
#X connect 85 2 88 0;
#X connect 86 0 83 0;
#X connect 87 0 83 1;
#X connect 87 0 84 0;
#X connect 90 0 30 2;
#X connect 91 0 93 0;
#X connect 93 0 35 1;
#X connect 93 1 97 0;
#X connect 93 2 96 0;
#X connect 94 0 91 1;
#X connect 94 0 92 0;
#X connect 95 0 91 0;
#X connect 98 0 35 2;
#X connect 99 0 101 0;
#X connect 101 0 39 1;
#X connect 101 1 105 0;
#X connect 101 2 104 0;
#X connect 102 0 99 0;
#X connect 103 0 99 1;
#X connect 103 0 100 0;
#X connect 106 0 39 2;
#X connect 107 0 7 1;
#X connect 107 1 55 0;
#X connect 107 2 71 0;
#X connect 108 0 116 2;
#X connect 108 1 116 3;
#X connect 109 0 116 0;
#X connect 109 1 116 1;
#X connect 110 0 116 4;
#X connect 110 1 116 5;
#X connect 111 0 116 6;
#X connect 111 1 116 7;
#X connect 112 0 116 8;
#X connect 112 1 116 9;
#X connect 113 0 116 10;
#X connect 113 1 116 11;
#X connect 114 0 116 12;
#X connect 114 1 116 13;
#X connect 115 0 116 14;
#X connect 115 1 116 15;
#X connect 118 0 119 0;
#X connect 119 0 120 2;
#X connect 120 0 151 0;
#X connect 120 1 152 0;
#X connect 123 0 124 0;
#X connect 124 0 125 2;
#X connect 125 0 149 0;
#X connect 125 1 150 0;
#X connect 128 0 129 0;
#X connect 129 0 130 2;
#X connect 130 0 153 0;
#X connect 130 1 154 0;
#X connect 133 0 134 0;
#X connect 134 0 135 2;
#X connect 135 0 155 0;
#X connect 135 1 156 0;
#X connect 136 0 137 0;
#X connect 137 0 138 2;
#X connect 138 0 160 0;
#X connect 138 1 161 0;
#X connect 139 0 140 0;
#X connect 140 0 141 2;
#X connect 141 0 165 0;
#X connect 141 1 166 0;
#X connect 142 0 143 0;
#X connect 143 0 144 2;
#X connect 144 0 169 0;
#X connect 144 1 170 0;
#X connect 145 0 146 0;
#X connect 146 0 147 2;
#X connect 147 0 173 0;
#X connect 147 1 174 0;
#X connect 148 0 125 0;
#X connect 148 0 125 1;
#X connect 149 0 121 0;
#X connect 150 0 121 1;
#X connect 151 0 11 0;
#X connect 152 0 11 1;
#X connect 153 0 126 0;
#X connect 154 0 126 1;
#X connect 155 0 131 0;
#X connect 156 0 131 1;
#X connect 157 0 135 0;
#X connect 157 0 135 1;
#X connect 160 0 158 0;
#X connect 161 0 158 1;
#X connect 162 0 138 0;
#X connect 162 0 138 1;
#X connect 165 0 163 0;
#X connect 166 0 163 1;
#X connect 169 0 167 0;
#X connect 170 0 167 1;
#X connect 173 0 171 0;
#X connect 174 0 171 1;
#X connect 175 0 147 0;
#X connect 175 0 147 1;
#X connect 176 0 193 0;
#X connect 179 0 192 0;
#X connect 180 0 194 0;
#X connect 183 0 195 0;
#X connect 184 0 176 0;
#X connect 185 0 177 0;
#X connect 186 0 178 0;
#X connect 187 0 179 0;
#X connect 188 0 180 0;
#X connect 189 0 181 0;
#X connect 190 0 182 0;
#X connect 191 0 183 0;
#X connect 192 0 157 1;
#X connect 193 0 148 1;
#X connect 194 0 162 1;
#X connect 195 0 175 1;
#X connect 196 0 198 0;
#X connect 197 0 196 0;
#X connect 198 0 148 1;
#X connect 200 0 199 0;
#X connect 202 0 201 0;
#X connect 203 0 205 0;
#X connect 204 0 203 0;
#X connect 205 0 157 1;
#X connect 206 0 207 0;
#X connect 207 0 162 1;
#X connect 208 0 206 0;
#X connect 210 0 209 0;
#X connect 212 0 211 0;
#X connect 213 0 215 0;
#X connect 214 0 213 0;
#X connect 215 0 175 1;
#X connect 216 0 218 0;
#X connect 217 0 216 0;
#X connect 218 0 148 1;
#X connect 219 0 220 0;
#X connect 220 0 157 1;
#X connect 221 0 219 0;
#X connect 222 0 223 0;
#X connect 223 0 162 1;
#X connect 224 0 222 0;
#X connect 225 0 227 0;
#X connect 226 0 225 0;
#X connect 227 0 175 1;
#X connect 228 0 230 0;
#X connect 229 0 228 0;
#X connect 230 0 148 1;
#X connect 231 0 232 0;
#X connect 232 0 157 1;
#X connect 233 0 231 0;
#X connect 234 0 235 0;
#X connect 235 0 162 1;
#X connect 236 0 234 0;
#X connect 237 0 238 0;
#X connect 238 0 175 1;
#X connect 239 0 237 0;
#X connect 240 0 241 0;
#X connect 241 0 242 0;
#X connect 242 0 125 3;
#X connect 243 0 244 0;
#X connect 244 0 120 3;
#X connect 245 0 125 4;
#X connect 246 0 245 0;
#X connect 247 0 120 4;
#X connect 248 0 243 0;
#X connect 249 0 247 0;
#X connect 250 0 130 3;
#X connect 251 0 130 4;
#X connect 252 0 250 0;
#X connect 253 0 251 0;
#X connect 254 0 135 3;
#X connect 255 0 135 4;
#X connect 256 0 254 0;
#X connect 257 0 255 0;
#X connect 258 0 138 3;
#X connect 259 0 138 4;
#X connect 260 0 258 0;
#X connect 261 0 259 0;
#X connect 262 0 141 3;
#X connect 263 0 141 4;
#X connect 264 0 262 0;
#X connect 265 0 263 0;
#X connect 266 0 144 3;
#X connect 267 0 144 4;
#X connect 268 0 266 0;
#X connect 269 0 267 0;
#X connect 270 0 147 3;
#X connect 271 0 147 4;
#X connect 272 0 270 0;
#X connect 273 0 271 0;
#X restore 388 102 pd My_RSP_EightPlayAndSelectEngines;
#X obj 830 465 s indexInit;
#N canvas 182 89 960 583 My_RSP_LedLoadFinishAlert 0;
#X obj 399 21 inlet;
#X obj 34 98 wiringPi_gpio 24 0 0;
#X obj 34 47 wiringPi_gpio 25 0 0;
#X msg 34 22 1;
#X msg 64 22 0;
#X msg 34 72 1;
#X msg 64 72 0;
#X msg 34 122 1;
#X msg 64 122 0;
#X obj 34 148 wiringPi_gpio 23 0 0;
#X msg 34 172 1;
#X msg 64 172 0;
#X obj 34 198 wiringPi_gpio 22 0 0;
#X msg 34 222 1;
#X msg 64 222 0;
#X obj 96 22 r allOn;
#X obj 96 72 r allOn;
#X obj 94 122 r allOn;
#X obj 94 172 r allOn;
#X obj 93 222 r allOn;
#X obj 662 152 s allOn;
#X msg 662 124 1;
#X msg 712 124 0;
#X obj 712 152 s allOff;
#X obj 149 23 r allOff;
#X obj 148 72 r allOff;
#X obj 146 122 r allOff;
#X obj 145 172 r allOff;
#X obj 145 222 r allOff;
#X msg 34 272 1;
#X msg 64 272 0;
#X obj 93 272 r allOn;
#X obj 145 272 r allOff;
#X obj 34 298 wiringPi_gpio 30 0 0;
#X msg 34 322 1;
#X msg 64 322 0;
#X obj 93 322 r allOn;
#X obj 145 322 r allOff;
#X obj 34 348 wiringPi_gpio 14 0 0;
#X msg 34 372 1;
#X msg 64 372 0;
#X obj 93 372 r allOn;
#X obj 145 372 r allOff;
#X obj 34 398 wiringPi_gpio 13 0 0;
#X msg 34 422 1;
#X msg 64 422 0;
#X obj 93 422 r allOn;
#X obj 145 422 r allOff;
#X obj 34 448 wiringPi_gpio 12 0 0;
#X msg 34 472 1;
#X msg 64 472 0;
#X obj 93 472 r allOn;
#X obj 145 472 r allOff;
#X obj 34 498 wiringPi_gpio 3 0 0;
#X text 205 46 Grün GROß BPM;
#X text 207 91 Blau Ende Alarm;
#X text 205 146 Blau Harmonie 1;
#X text 205 196 Rot Harmonie 1;
#X text 205 246 Gelb Harmonie 1;
#X text 205 296 Grün Harmonie 1;
#X text 205 346 Blau Harmonie 2;
#X text 205 396 Rot Harmonie 2;
#X text 205 446 Gelb Harmonie 2;
#X text 205 496 Grün Harmonie 2;
#X msg 494 245 0;
#X text 361 20 start;
#X text 521 245 stop;
#X obj 209 24 r bpmbig;
#X obj 208 73 r endalarm;
#X obj 208 123 r harmblau1;
#X obj 208 173 r harmrot1;
#X obj 208 223 r harmgelb1;
#X obj 208 273 r harmgruen1;
#X obj 207 322 r harmblau2;
#X obj 208 372 r harmrot2;
#X obj 208 423 r harmgelb2;
#X obj 208 473 r harmgruen2;
#X obj 434 346 + 1;
#X obj 399 379 moses 10;
#N canvas 104 149 607 300 ledRoutingAbstraction 0;
#X obj 33 40 inlet ledIndex;
#X obj 3 611 s bpmbig;
#X msg 3 589 1;
#X msg 18 565 0;
#X msg 53 549 1;
#X msg 68 525 0;
#X obj 53 571 s endalarm;
#X msg 83 479 1;
#X msg 88 455 0;
#X obj 83 501 s harmblau1;
#X msg 123 439 1;
#X msg 128 415 0;
#X msg 164 409 1;
#X msg 169 385 0;
#X msg 200 369 1;
#X msg 205 345 0;
#X msg 236 327 1;
#X msg 251 305 0;
#X obj 33 96 route 1 2 3 4 5 6 7 8 9 10;
#X obj 123 461 s harmrot1;
#X obj 164 431 s harmgelb1;
#X obj 200 391 s harmgruen1;
#X obj 236 349 s harmblau2;
#X msg 287 264 1;
#X msg 302 240 0;
#X msg 338 219 1;
#X msg 353 195 0;
#X msg 394 189 1;
#X msg 409 165 0;
#X obj 287 286 s harmrot2;
#X obj 338 246 s harmgelb2;
#X obj 394 211 s harmgruen2;
#X connect 0 0 18 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 10 0 19 0;
#X connect 11 0 19 0;
#X connect 12 0 20 0;
#X connect 13 0 20 0;
#X connect 14 0 21 0;
#X connect 15 0 21 0;
#X connect 16 0 22 0;
#X connect 17 0 22 0;
#X connect 18 0 2 0;
#X connect 18 0 28 0;
#X connect 18 1 3 0;
#X connect 18 1 4 0;
#X connect 18 2 5 0;
#X connect 18 2 7 0;
#X connect 18 3 8 0;
#X connect 18 3 10 0;
#X connect 18 4 11 0;
#X connect 18 4 12 0;
#X connect 18 5 13 0;
#X connect 18 5 14 0;
#X connect 18 6 15 0;
#X connect 18 6 16 0;
#X connect 18 7 17 0;
#X connect 18 7 23 0;
#X connect 18 8 24 0;
#X connect 18 8 25 0;
#X connect 18 9 26 0;
#X connect 18 9 27 0;
#X connect 23 0 29 0;
#X connect 24 0 29 0;
#X connect 25 0 30 0;
#X connect 26 0 30 0;
#X connect 27 0 31 0;
#X connect 28 0 31 0;
#X restore 399 522 pd ledRoutingAbstraction;
#X obj 444 461 s resetCounter2;
#X obj 414 319 r resetCounter2;
#X msg 444 439 1;
#X obj 34 248 wiringPi_gpio 0 0 0;
#X text 654 175 Testpatch für die LEDs des \; RaspiSamplePlayers auf
dem \; Raspberry Pi 2 und Raspbian Stretch.;
#X obj 399 291 metro 300, f 19;
#X obj 550 463 s stopMetro;
#X obj 425 243 s allOff;
#X msg 425 224 0;
#X obj 424 132 r stopMetro;
#X obj 425 182 t b b, f 12;
#X obj 444 414 t b b f, f 36;
#X obj 399 346 f 1;
#X obj 425 204 delay 300;
#X text 622 22 9th May 2018 \; This patch toggles all Leds connected
to the pi \; to show that loading the parent patch is done and \; to
show that every led is working.;
#X obj 550 443 counter 1 5;
#X obj 424 156 moses 5;
#X connect 0 0 85 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 13 0 83 0;
#X connect 14 0 83 0;
#X connect 15 0 2 0;
#X connect 16 0 1 0;
#X connect 17 0 9 0;
#X connect 18 0 12 0;
#X connect 19 0 83 0;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 24 0 2 0;
#X connect 25 0 1 0;
#X connect 26 0 9 0;
#X connect 27 0 12 0;
#X connect 28 0 83 0;
#X connect 29 0 33 0;
#X connect 30 0 33 0;
#X connect 31 0 33 0;
#X connect 32 0 33 0;
#X connect 34 0 38 0;
#X connect 35 0 38 0;
#X connect 36 0 38 0;
#X connect 37 0 38 0;
#X connect 39 0 43 0;
#X connect 40 0 43 0;
#X connect 41 0 43 0;
#X connect 42 0 43 0;
#X connect 44 0 48 0;
#X connect 45 0 48 0;
#X connect 46 0 48 0;
#X connect 47 0 48 0;
#X connect 49 0 53 0;
#X connect 50 0 53 0;
#X connect 51 0 53 0;
#X connect 52 0 53 0;
#X connect 64 0 85 0;
#X connect 67 0 2 0;
#X connect 68 0 1 0;
#X connect 69 0 9 0;
#X connect 70 0 12 0;
#X connect 71 0 83 0;
#X connect 72 0 33 0;
#X connect 73 0 38 0;
#X connect 74 0 43 0;
#X connect 75 0 48 0;
#X connect 76 0 53 0;
#X connect 77 0 92 1;
#X connect 78 0 79 0;
#X connect 78 1 91 0;
#X connect 81 0 92 1;
#X connect 82 0 80 0;
#X connect 85 0 92 0;
#X connect 88 0 87 0;
#X connect 89 0 96 0;
#X connect 90 0 93 0;
#X connect 90 1 64 0;
#X connect 91 0 82 0;
#X connect 91 1 95 0;
#X connect 91 2 79 0;
#X connect 92 0 77 0;
#X connect 92 0 78 0;
#X connect 93 0 88 0;
#X connect 95 0 86 0;
#X connect 96 1 90 0;
#X restore 788 570 pd My_RSP_LedLoadFinishAlert;
#X obj 844 274 t f b f;
#X obj 26 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407 -1
-1;
#X obj 66 335 bng 40 100 50 0 empty empty empty 17 7 0 10 -191407 -1
-1;
#X obj 793 6 loadbang;
#X obj 816 497 s hidInitBang;
#N canvas 300 76 900 616 My_RSP_NetworkSyncMetro 0;
#X floatatom 31 525 7 0 0 0 tick - -;
#X floatatom 75 416 7 0 0 0 node-id - -;
#X obj 164 372 print node joined;
#X obj 208 351 print node left;
#X obj 119 394 print node list;
#X obj 252 330 print got message;
#X obj 297 309 print got state update;
#X obj 75 489 print node-id;
#X obj 341 288 print init event;
#X obj 75 443 syncjams-id-symbol;
#X symbolatom 75 465 10 0 0 0 id-symbol-> - -;
#X obj 31 105 syncjams \$0/jakki \, bpm 122 \, namespace syncjams \,
port 23232;
#X obj 31 143 route tick node-id node-list joined left message state
init-event sub-tick;
#X floatatom 385 204 10 0 0 0 - - -;
#X obj 385 224 int;
#X obj 469 257 change;
#X text 545 261 neue metrohits hier;
#X text 687 91 3th November 2018 \; This patch uses the syncjams- \;
external to produce our 122 bpm \; metronome. It takes syncjams 'ticks
\; in order so send the first Beat out \; to the parent patch. It also
uses syncjams \; 'sub-ticks' to send 'metroHits' in 16th notes \; accuracy
to our 'SelectAndPlay-Engines' \; where they are uses for loop-timing.
\; ...just as in the 'My_RSP_Metronome'-Subatch.;
#X obj 31 550 % 4;
#X floatatom 31 577 5 0 0 0 - - -;
#X obj 125 654 wiringPi_gpio 25 0 0;
#X floatatom 75 622 5 0 0 0 - - -;
#X obj 31 664 moses 1;
#X obj 31 601 == 0;
#X obj 70 690 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 70 713 outlet firstBeat;
#X text 172 543 Modulo gives us either 0 \, 1 \, 2 \, 3 regardless
how high the tick's count is. With this \, we can synchronize the metros
of our two raspberry pis \, so that they flash the LED for the first
beat together!;
#X text 450 151 subticks come fast (24) \; here we take it down \;
to 16th accuracy (/6) for our \; loop-timing in the RSP_Select_And_Play_Engine-Subpatches
;
#X obj 74 577 s metro4_4;
#X obj 31 47 r currentBPM;
#X msg 31 78 set-state /BPM \$1;
#X obj 469 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 469 304 s metroHits;
#X obj 385 184 / 6;
#X connect 0 0 18 0;
#X connect 1 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 12 1 1 0;
#X connect 12 2 4 0;
#X connect 12 3 2 0;
#X connect 12 4 3 0;
#X connect 12 5 5 0;
#X connect 12 6 6 0;
#X connect 12 7 8 0;
#X connect 12 8 33 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 31 0;
#X connect 18 0 19 0;
#X connect 18 0 28 0;
#X connect 19 0 23 0;
#X connect 21 0 20 0;
#X connect 22 1 24 0;
#X connect 23 0 22 0;
#X connect 23 0 21 0;
#X connect 24 0 25 0;
#X connect 29 0 30 0;
#X connect 30 0 11 0;
#X connect 31 0 32 0;
#X connect 33 0 13 0;
#X restore 1000 6 pd My_RSP_NetworkSyncMetro;
#X obj 1000 35 s metroFirstHit;
#X obj 645 130 cnv 15 100 60 empty cbpm BPM122 20 28 0 20 -4032 -66577
0;
#N canvas 200 172 793 385 My_RSP_BPM_SETTER 0;
#X obj 17 102 t b b;
#X obj 17 142 f;
#X obj 17 164 + 1;
#X floatatom 90 325 5 0 0 0 - - -;
#X obj 179 154 f;
#X obj 179 102 t b b;
#X obj 179 174 - 1;
#X obj 17 187 t b f;
#X obj 179 193 t b f;
#X msg 90 381 \; cbpm label \$1;
#X obj 90 350 makefilename BPM%d;
#X text 429 42 26th November 2018 \; This patch has two inlets \; When
the first inlet receives \; a bang \, it increases the current bpm
\; by 1 The second inlet decreases the \; current bpm analogically.
The current \; bpm is shown on the blue BPM-Canvas on \; the parent
patch. The default bpm is 122 bpm.;
#X obj 17 23 inlet increaseBpmBang;
#X obj 179 23 inlet decreaseBpmBang;
#X obj 90 226 f 122;
#X obj 427 352 s currentBPM;
#X obj 239 352 print Setting current BPM to;
#X obj 90 250 t f f f f;
#X obj 536 350 / 122;
#X obj 536 414 s PhasorFrequencyTimingFactor;
#X floatatom 610 393 5 0 0 0 - - -;
#X connect 0 0 1 0;
#X connect 0 1 14 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 3 0 10 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 5 1 14 0;
#X connect 6 0 8 0;
#X connect 6 0 14 1;
#X connect 7 0 14 0;
#X connect 7 1 14 1;
#X connect 8 0 14 0;
#X connect 8 1 14 1;
#X connect 10 0 9 0;
#X connect 12 0 0 0;
#X connect 13 0 5 0;
#X connect 14 0 4 1;
#X connect 14 0 1 1;
#X connect 14 0 17 0;
#X connect 17 0 3 0;
#X connect 17 1 16 0;
#X connect 17 2 15 0;
#X connect 17 3 18 0;
#X connect 18 0 19 0;
#X connect 18 0 20 0;
#X coords 0 385 1 384 100 84 0;
#X restore 565 -15 pd My_RSP_BPM_SETTER;
#X obj 567 -54 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 603 -48 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 22 758 cnv 15 81 20 empty SP1CurrentlySelected SONIK_crazyflaeche
2 12 0 10 -233017 -66577 0;
#X obj 23 806 cnv 15 81 20 empty SP1CurrentlyPlaying HUC_bellswarm
0 12 0 10 -233017 -66577 0;
#X text 20 788 playing;
#X text 20 740 selected;
#X obj 114 758 cnv 15 81 20 empty SP2CurrentlySelected LRNT_bassfly
2 12 0 10 -233017 -66577 0;
#X obj 115 808 cnv 15 81 20 empty SP2CurrentlyPlaying LRNT_bassfly
0 12 0 10 -233017 -66577 0;
#X text 112 790 playing;
#X text 110 740 selected;
#X obj 204 758 cnv 20 81 20 empty SP3CurrentlySelected DD_kiks0 0 12
0 10 -233017 -66577 0;
#X obj 205 808 cnv 15 81 20 empty SP3CurrentlyPlaying DYNA_kicks7 0
12 0 10 -233017 -66577 0;
#X text 202 790 playing;
#X text 200 740 selected;
#X obj 294 756 cnv 15 81 20 empty SP4CurrentlySelected EGBA_hhs 2 12
0 10 -233017 -66577 0;
#X obj 295 806 cnv 15 81 20 empty SP4CurrentlyPlaying EGBA_hhs 0 12
0 10 -233017 -66577 0;
#X text 292 788 playing;
#X text 290 738 selected;
#X obj 390 756 cnv 20 81 20 empty SP5CurrentlySelected TK_keysbreak
0 12 0 10 -233017 -66577 0;
#X obj 391 806 cnv 15 81 20 empty SP5CurrentlyPlaying TK_keysbreak
0 12 0 10 -233017 -66577 0;
#X text 388 788 playing;
#X text 386 738 selected;
#X obj 480 756 cnv 20 81 20 empty SP6CurrentlySelected LRNT_bassfly
0 12 0 10 -233017 -66577 0;
#X obj 481 806 cnv 15 81 20 empty SP6CurrentlyPlaying LRNT_bassfly
0 12 0 10 -233017 -66577 0;
#X text 478 788 playing;
#X text 476 738 selected;
#X obj 570 756 cnv 15 81 20 empty SP7CurrentlySelected JDP_kicky4 2
12 0 10 -233017 -66577 0;
#X obj 571 806 cnv 15 81 20 empty SP7CurrentlyPlaying JDP_kicky2 0
12 0 10 -233017 -66577 0;
#X text 568 788 playing;
#X text 566 738 selected;
#X obj 662 756 cnv 15 100 60 empty SP8CurrentlySelected HUC_brush 20
12 0 14 -233017 -66577 0;
#X obj 663 806 cnv 15 81 20 empty SP8CurrentlyPlaying HUC_brush 0 12
0 10 -233017 -66577 0;
#X text 660 788 playing;
#X text 658 738 selected;
#X obj 775 36 t b b b b b b b b b;
#X obj 802 529 s excelParseInitBang;
#X text 1054 124 /Users/wbjc/Desktop/Samples/SamplePacks/ /home/pi/Documents/SamplePacks/
;
#X obj 220 -18 metronomeFor856;
#X obj 333 31 ctlout 1 15;
#X msg 333 9 1;
#X msg 872 104 symbol /home/pi/Documents/SamplePacks/;
#N canvas 0 93 1280 627 My_RSP_EffectControl 1;
#X text 35 447 dw value track 1;
#X obj 187 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 161 384 s;
#X msg 286 234 100;
#X obj 161 285 upanddowncounter 1;
#X msg 316 235 0;
#X msg 253 233 0;
#X obj 286 178 loadbang;
#X floatatom 213 141 5 0 0 0 - - -;
#X floatatom 181 305 5 0 0 0 - - -;
#X obj 502 381 s;
#X obj 38 603 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 35 507 valueorupdate;
#X obj 192 604 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 189 508 valueorupdate;
#X obj 483 267 t s b s;
#X msg 161 355 list value \$1;
#X msg 502 335 list update 1;
#X obj 213 68 r MY_RSPEC_masterButtonReset;
#X text 542 263 we change the send-symbol-name in which the master
effect button is sending its button-ups-and-downs into. By this \;
we can enable the master effect button to control different effect
parameters. We route where the master effect button sends to. \;;
#X obj 368 603 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 365 507 valueorupdate;
#X obj 522 604 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 519 508 valueorupdate;
#X text 665 445 dw value track 1;
#X obj 668 601 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 665 505 valueorupdate;
#X obj 822 602 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 819 506 valueorupdate;
#X obj 998 601 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 995 505 valueorupdate;
#X obj 1152 602 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 1149 506 valueorupdate;
#X obj 55 -56 inlet MY_RSPEC_turnRight;
#X obj 245 -56 inlet MY_RSPEC_turnLeft;
#X obj 161 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 35 475 r parameter1_1;
#X obj 189 472 r parameter1_2;
#X obj 365 475 r parameter1_3;
#X obj 519 472 r parameter1_4;
#X obj 665 473 r parameter1_5;
#X obj 819 470 r parameter1_6;
#X obj 995 473 r parameter1_7;
#X obj 1149 470 r parameter1_8;
#X obj 213 107 t f f, f 13;
#X obj 288 150 launchpad_value_visualisation;
#X obj 288 130 / 100;
#X obj 228 330 launchpad_value_visualisation;
#X obj 228 310 / 100;
#N canvas 0 50 450 300 launchpadRow2 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X obj 75 103 sel 16 17 18 19 20 21 22 23;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X text 279 104 midi notes sent from row 2;
#X msg 75 197 symbol parameter2_\$1;
#X obj 113 268 outlet LR2_parameterName;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 5 0;
#X connect 3 2 6 0;
#X connect 3 3 7 0;
#X connect 3 4 8 0;
#X connect 3 5 9 0;
#X connect 3 6 10 0;
#X connect 3 7 11 0;
#X connect 4 0 13 0;
#X connect 5 0 13 0;
#X connect 6 0 13 0;
#X connect 7 0 13 0;
#X connect 8 0 13 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 13 0 14 0;
#X restore 504 55 pd launchpadRow2;
#X obj 945 90 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 942 64 valueorupdate;
#X obj 942 32 r parameter2_1;
#N canvas 0 50 450 300 launchpadRow3 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X msg 75 197 symbol parameter3_\$1;
#X obj 113 268 outlet LR3_parameterName;
#X text 279 104 midi notes sent from row 3;
#X obj 75 103 sel 32 33 34 35 36 37 38 39;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 3 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 11 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 14 0 3 0;
#X connect 14 1 4 0;
#X connect 14 2 5 0;
#X connect 14 3 6 0;
#X connect 14 4 7 0;
#X connect 14 5 8 0;
#X connect 14 6 9 0;
#X connect 14 7 10 0;
#X restore 514 85 pd launchpadRow3;
#X text 614 54 activates all parameters 'parameter2_XY';
#X text 637 84 activates all parameters 'parameter 3_XY';
#N canvas 0 50 450 300 launchpadRow4 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X obj 75 103 sel 48 49 50 51 52 53 54 55;
#X msg 75 197 symbol parameter4_\$1;
#X obj 113 268 outlet LR4_parameterName;
#X text 279 104 midi notes sent from row 4;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 12 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 11 0 3 0;
#X connect 11 1 4 0;
#X connect 11 2 5 0;
#X connect 11 3 6 0;
#X connect 11 4 7 0;
#X connect 11 5 8 0;
#X connect 11 6 9 0;
#X connect 11 7 10 0;
#X connect 12 0 13 0;
#X restore 524 110 pd launchpadRow4;
#X text 637 114 activates all parameters 'parameter 4_XY';
#N canvas 0 50 450 300 launchpadRow1 0;
#X obj 43 42 notein;
#X obj 43 68 stripnote;
#X obj 43 167 + 1;
#X floatatom 43 138 5 0 0 0 - - -;
#X msg 43 197 symbol parameter1_\$1;
#X text 69 159 launchpad's first row sends midi notes 0-7. So we only
have to do +1 to get the routing for track 1-8.;
#X floatatom 43 89 5 0 0 0 - - -;
#X obj 43 115 moses 8;
#X text 176 193 effect parameter that we want to enable control for
when we select it in the launchpad mini's row.;
#X obj 43 260 outlet LR1_parameterName;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X restore 494 25 pd launchpadRow1;
#X text 609 24 activates all parameters 'parameter1_XY';
#N canvas 0 50 450 300 launchpadRow5 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X msg 75 197 symbol parameter5_\$1;
#X text 279 104 midi notes sent from row 5;
#X obj 75 103 sel 64 65 66 67 68 69 70 71;
#X obj 113 268 outlet LR5_parameterName;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 11 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 13 0 3 0;
#X connect 13 1 4 0;
#X connect 13 2 5 0;
#X connect 13 3 6 0;
#X connect 13 4 7 0;
#X connect 13 5 8 0;
#X connect 13 6 9 0;
#X connect 13 7 10 0;
#X restore 534 140 pd launchpadRow5;
#X text 647 144 activates all parameters 'parameter 5_XY';
#X text 657 174 activates all parameters 'parameter 6_XY';
#N canvas 0 50 450 300 launchpadRow6 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X text 279 104 midi notes sent from row 6;
#X msg 75 197 symbol parameter6_\$1;
#X obj 113 268 outlet LR6_parameterName;
#X obj 75 103 sel 80 81 82 83 84 85 86 87;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 12 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 3 0;
#X connect 14 1 4 0;
#X connect 14 2 5 0;
#X connect 14 3 6 0;
#X connect 14 4 7 0;
#X connect 14 5 8 0;
#X connect 14 6 9 0;
#X connect 14 7 10 0;
#X restore 544 170 pd launchpadRow6;
#N canvas 0 50 450 300 launchpadRow7 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X text 279 104 midi notes sent from row 7;
#X msg 75 197 symbol parameter7_\$1;
#X obj 113 268 outlet LR7_parameterName;
#X obj 75 103 sel 96 97 98 99 100 101 102 103;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 12 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 3 0;
#X connect 14 1 4 0;
#X connect 14 2 5 0;
#X connect 14 3 6 0;
#X connect 14 4 7 0;
#X connect 14 5 8 0;
#X connect 14 6 9 0;
#X connect 14 7 10 0;
#X restore 554 200 pd launchpadRow7;
#X text 667 204 activates all parameters 'parameter 7_XY';
#N canvas 0 50 450 300 launchpadRow8 0;
#X obj 75 30 notein;
#X obj 75 51 stripnote;
#X floatatom 75 72 5 0 0 0 - - -;
#X msg 75 144 1;
#X msg 112 144 2;
#X msg 148 145 3;
#X msg 184 146 4;
#X msg 220 147 5;
#X msg 256 146 6;
#X msg 293 148 7;
#X msg 329 146 8;
#X text 266 82 midi notes sent from row 8;
#X msg 75 197 symbol parameter8_\$1;
#X obj 113 268 outlet LR8_parameterName;
#X obj 75 103 sel 112 113 114 115 116 117 118 119;
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 12 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 3 0;
#X connect 14 1 4 0;
#X connect 14 2 5 0;
#X connect 14 3 6 0;
#X connect 14 4 7 0;
#X connect 14 5 8 0;
#X connect 14 6 9 0;
#X connect 14 7 10 0;
#X restore 564 230 pd launchpadRow8;
#X text 677 234 activates all parameters 'parameter 8_XY';
#X connect 1 0 4 1;
#X connect 3 0 4 3;
#X connect 4 0 9 0;
#X connect 4 0 16 0;
#X connect 4 0 48 0;
#X connect 5 0 4 4;
#X connect 6 0 4 2;
#X connect 7 0 6 0;
#X connect 7 0 3 0;
#X connect 7 0 5 0;
#X connect 8 0 4 2;
#X connect 12 0 11 0;
#X connect 14 0 13 0;
#X connect 15 0 2 1;
#X connect 15 1 17 0;
#X connect 15 2 10 1;
#X connect 16 0 2 0;
#X connect 17 0 10 0;
#X connect 18 0 44 0;
#X connect 21 0 20 0;
#X connect 23 0 22 0;
#X connect 26 0 25 0;
#X connect 28 0 27 0;
#X connect 30 0 29 0;
#X connect 32 0 31 0;
#X connect 33 0 35 0;
#X connect 34 0 1 0;
#X connect 35 0 4 0;
#X connect 36 0 12 0;
#X connect 37 0 14 0;
#X connect 38 0 21 0;
#X connect 39 0 23 0;
#X connect 40 0 26 0;
#X connect 41 0 28 0;
#X connect 42 0 30 0;
#X connect 43 0 32 0;
#X connect 44 0 8 0;
#X connect 44 1 46 0;
#X connect 46 0 45 0;
#X connect 48 0 47 0;
#X connect 49 0 15 0;
#X connect 51 0 50 0;
#X connect 52 0 51 0;
#X connect 53 0 15 0;
#X connect 56 0 15 0;
#X connect 58 0 15 0;
#X connect 60 0 15 0;
#X connect 63 0 15 0;
#X connect 64 0 15 0;
#X connect 66 0 15 0;
#X restore 467 193 pd My_RSP_EffectControl;
#X obj 478 163 r HID_MasterKnob_LeftTurn;
#X obj 467 138 r HID_MasterKnob_RightTurn;
#X connect 0 0 107 0;
#X connect 0 0 107 1;
#X connect 0 0 107 2;
#X connect 0 0 107 3;
#X connect 0 0 107 4;
#X connect 0 0 107 5;
#X connect 0 0 107 6;
#X connect 0 0 107 7;
#X connect 1 0 0 0;
#X connect 2 0 111 0;
#X connect 2 1 112 0;
#X connect 2 2 3 0;
#X connect 2 3 4 0;
#X connect 2 4 5 0;
#X connect 2 5 6 0;
#X connect 2 6 7 0;
#X connect 2 7 8 0;
#X connect 2 8 9 0;
#X connect 2 9 10 0;
#X connect 2 10 11 0;
#X connect 2 11 12 0;
#X connect 2 12 13 0;
#X connect 2 13 14 0;
#X connect 2 14 15 0;
#X connect 2 15 16 0;
#X connect 3 0 53 0;
#X connect 4 0 54 0;
#X connect 5 0 78 0;
#X connect 6 0 79 0;
#X connect 7 0 80 0;
#X connect 8 0 81 0;
#X connect 9 0 85 0;
#X connect 10 0 86 0;
#X connect 11 0 87 0;
#X connect 12 0 88 0;
#X connect 13 0 93 0;
#X connect 14 0 94 0;
#X connect 15 0 96 0;
#X connect 16 0 97 0;
#X connect 17 0 106 0;
#X connect 18 0 105 0;
#X connect 19 0 104 0;
#X connect 20 0 103 0;
#X connect 21 0 102 0;
#X connect 22 0 101 0;
#X connect 23 0 100 0;
#X connect 24 0 99 0;
#X connect 25 0 84 0;
#X connect 26 0 27 0;
#X connect 28 0 26 0;
#X connect 29 0 30 0;
#X connect 31 0 29 0;
#X connect 32 0 34 0;
#X connect 33 0 32 0;
#X connect 35 0 37 0;
#X connect 36 0 35 0;
#X connect 38 0 43 0;
#X connect 39 0 45 0;
#X connect 40 0 47 0;
#X connect 41 0 49 0;
#X connect 42 0 38 0;
#X connect 44 0 39 0;
#X connect 46 0 40 0;
#X connect 48 0 41 0;
#X connect 56 0 153 0;
#X connect 57 0 58 0;
#X connect 58 0 59 0;
#X connect 59 0 61 0;
#X connect 59 0 110 0;
#X connect 60 0 59 1;
#X connect 61 0 59 1;
#X connect 63 0 65 0;
#X connect 90 0 91 0;
#X connect 92 0 90 0;
#X connect 99 0 98 0;
#X connect 100 0 95 0;
#X connect 101 0 89 0;
#X connect 102 0 83 0;
#X connect 103 0 82 0;
#X connect 104 0 77 0;
#X connect 105 0 55 0;
#X connect 106 0 50 0;
#X connect 110 0 70 0;
#X connect 110 1 63 0;
#X connect 110 2 62 0;
#X connect 111 0 51 0;
#X connect 112 0 52 0;
#X connect 113 0 153 0;
#X connect 115 0 116 0;
#X connect 119 0 118 0;
#X connect 120 0 118 1;
#X connect 153 0 66 0;
#X connect 153 1 109 0;
#X connect 153 2 154 0;
#X connect 153 3 114 0;
#X connect 153 4 108 0;
#X connect 153 5 57 0;
#X connect 153 6 60 0;
#X connect 153 7 159 0;
#X connect 153 8 71 0;
#X connect 158 0 157 0;
#X connect 159 0 67 0;
#X connect 161 0 160 1;
#X connect 162 0 160 0;
